{"version":3,"sources":["@core/components/wizard/index.js","views/forms/wizard/steps/SocialLinks.js","views/forms/wizard/WizardVertical.js","views/forms/wizard/steps-with-validation/Address.js","views/forms/wizard/steps-with-validation/PersonalInfo.js","views/forms/wizard/steps-with-validation/AccountDetails.js","views/forms/wizard/WizardHorizontal.js","views/forms/wizard/WizardModernVertical.js","views/forms/wizard/index.js","@core/components/breadcrumbs/index.js"],"names":["Wizard","forwardRef","props","ref","type","className","contentClassName","headerClassName","steps","separator","options","instance","activeIndex","setActiveIndex","useState","stepper","useEffect","Stepper","current","addEventListener","event","detail","indexStep","classnames","vertical","map","step","index","length","crossed","active","id","icon","title","subtitle","content","defaultProps","size","SocialLinks","WizardVertical","Address","errors","handleSubmit","trigger","useForm","onSubmit","isObjEmpty","next","tag","Col","md","for","name","placeholder","Ripple","color","PersonalInfo","onClick","previous","AccountDetails","SignupSchema","yup","shape","required","email","oneOf","resolver","yupResolver","outline","disabled","WizardHorizontal","setStepper","useRef","el","WizardModernVertical","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","end","Link"],"mappings":"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","file":"static/js/56.6a019244.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Stepper from 'bs-stepper'\r\nimport classnames from 'classnames'\r\nimport { PropTypes } from 'prop-types'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n// ** Styles\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\r\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const { type, className, contentClassName, headerClassName, steps, separator, options, instance } = props\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n  // ** Vars\r\n  let stepper = null\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options)\r\n\r\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\r\n      setActiveIndex(event.detail.indexStep)\r\n    })\r\n\r\n    if (instance) {\r\n      instance(stepper)\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\r\n          <div\r\n            className={classnames('step', {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type='button' className='step-trigger'>\r\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\r\n              <span className='bs-stepper-label'>\r\n                <span className='bs-stepper-title'>{step.title}</span>\r\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames('content', {\r\n            [contentClassName]: contentClassName,\r\n            'active dstepper-block': activeIndex === index\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames('bs-stepper', {\r\n        [className]: className,\r\n        vertical: type === 'vertical',\r\n        'vertical wizard-modern': type === 'modern-vertical',\r\n        'wizard-modern': type === 'modern-horizontal'\r\n      })}\r\n    >\r\n      <div className={classnames('bs-stepper-header', { [headerClassName]: headerClassName })}>{renderHeader()}</div>\r\n      <div className='bs-stepper-content'>{renderContent()}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Wizard\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  options: {},\r\n  type: 'horizontal',\r\n  separator: <ChevronRight size={17} />\r\n}\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  headerClassName: PropTypes.string,\r\n  contentClassName: PropTypes.string,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired\r\n    })\r\n  ).isRequired\r\n}\r\n","import { Fragment } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Form, Input, Button } from 'reactstrap'\r\n\r\nconst SocialLinks = ({ stepper, type }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Social Links</h5>\r\n        <small>Enter Your Social Links.</small>\r\n      </div>\r\n      <Form onSubmit={e => e.preventDefault()}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`twitter-${type}`}>\r\n              Twitter\r\n            </Label>\r\n            <Input type='text' id={`twitter-${type}`} name='twitter' placeholder='https://twitter.com/abc' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`facebook-${type}`}>\r\n              Facebook\r\n            </Label>\r\n            <Input type='text' id={`facebook-${type}`} name='facebook' placeholder='https://facebook.com/abc' />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`google-${type}`}>\r\n              Google+\r\n            </Label>\r\n            <Input type='text' id={`google-${type}`} name='google' placeholder='https://plus.google.com/abc' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`linkedin-${type}`}>\r\n              Linkedin\r\n            </Label>\r\n            <Input type='text' id={`linkedin-${type}`} name='linkedin' placeholder='https://linkedin.com/abc' />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple color='success' className='btn-submit' onClick={() => alert('submitted')}>\r\n            Submit\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SocialLinks\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport Address from './steps/Address'\r\nimport SocialLinks from './steps/SocialLinks'\r\nimport PersonalInfo from './steps/PersonalInfo'\r\nimport AccountDetails from './steps/AccountDetails'\r\n\r\nconst WizardVertical = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Account Details',\r\n      subtitle: 'Enter Your Account Details.',\r\n      content: <AccountDetails stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Personal Info',\r\n      subtitle: 'Add Personal Info',\r\n      content: <PersonalInfo stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Address',\r\n      subtitle: 'Add Address',\r\n      content: <Address stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'social-links',\r\n      title: 'Social Links',\r\n      subtitle: 'Add Social Links',\r\n      content: <SocialLinks stepper={stepper} type='wizard-vertical' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='vertical-wizard'>\r\n      <Wizard\r\n        type='vertical'\r\n        ref={ref}\r\n        steps={steps}\r\n        options={{\r\n          linear: false\r\n        }}\r\n        instance={el => setStepper(el)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardVertical\r\n","import { Fragment } from 'react'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\n\r\nconst Address = ({ stepper, type }) => {\r\n  const { errors, handleSubmit, trigger } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Address</h5>\r\n        <small>Enter the Screen Physical Address</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`address-${type}`}>\r\n              Address\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`address-${type}`}\r\n              name={`address-${type}`}\r\n              placeholder='123 Street, City, Zip Code'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`landmark-${type}`}>\r\n              Closest Landmark\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`landmark-${type}`}\r\n              id={`landmark-${type}`}\r\n              placeholder='Name a nearby landmark if any'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`pincode-${type}`}>\r\n              Pincode\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`pincode-${type}`}\r\n              id={`pincode-${type}`}\r\n              placeholder='type a six digit pincode and save it on a note'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`city-${type}`}>\r\n              City\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`city-${type}`}\r\n              id={`city-${type}`}\r\n              placeholder='New York'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev'>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Address\r\n","import { Fragment } from 'react'\r\nimport Select from 'react-select'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { isObjEmpty } from '@utils'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\n\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst PersonalInfo = ({ stepper, type }) => {\r\n  const { errors, handleSubmit, trigger } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Payment Info</h5>\r\n        <small>Enter Your Business Info.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`first-name-${type}`}>\r\n              STX Address\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`first-name-${type}`}\r\n              id={`first-name-${type}`}\r\n              placeholder='SP31234567890...'\r\n             />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`last-name-${type}`}>\r\n              Screen SerialNumber\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`last-name-${type}`}\r\n              id={`last-name-${type}`}\r\n              placeholder='12345'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonalInfo\r\n","import * as yup from 'yup'\r\nimport { Fragment } from 'react'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, Label, Input, FormGroup, Row, Col, Button } from 'reactstrap'\r\n\r\nconst AccountDetails = ({ stepper, type }) => {\r\n  const SignupSchema = yup.object().shape({\r\n    [`username-${type}`]: yup.string().required(),\r\n    [`email-${type}`]: yup.string().email().required(),\r\n    [`password-val-${type}`]: yup.string().required(),\r\n    'confirm-password-val': yup\r\n      .string()\r\n      .required()\r\n      .oneOf([yup.ref(`password-val-${type}`), null], 'Passwords must match')\r\n  })\r\n\r\n  const { errors, handleSubmit, trigger } = useForm({\r\n    resolver: yupResolver(SignupSchema)\r\n  })\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Screen Details</h5>\r\n        <small className='text-muted'>Enter Your Account Details.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`username-${type}`}>\r\n              Username\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`email-${type}`}>\r\n              Email\r\n            </Label>\r\n            <Input\r\n              type='email'\r\n              name={`email-${type}`}\r\n              id={`email-${type}`}\r\n              placeholder='yourbusiness@email.com'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for={`password-val-${type}`}>\r\n              Password\r\n            </Label>\r\n            <Input\r\n              type='password'\r\n              name={`password-val-${type}`}\r\n              id={`password-val-${type}`}\r\n            />\r\n          </div>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for='confirm-password-val'>\r\n              Confirm Password\r\n            </Label>\r\n            <Input\r\n              type='password'\r\n              name='confirm-password-val'\r\n              id='confirm-password-val'\r\n            />\r\n          </div>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='secondary' className='btn-prev' outline disabled>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountDetails\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport { ArrowRight } from 'react-feather'\r\nimport Address from './steps-with-validation/Address'\r\nimport PersonalInfo from './steps-with-validation/PersonalInfo'\r\nimport AccountDetails from './steps-with-validation/AccountDetails'\r\n\r\nconst WizardHorizontal = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Screen Details',\r\n      subtitle: 'Register Your Screen.',\r\n      content: <AccountDetails stepper={stepper} type='wizard-horizontal' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Payment Info',\r\n      subtitle: 'Add Wallet Address',\r\n      content: <PersonalInfo stepper={stepper} type='wizard-horizontal' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Location',\r\n      subtitle: 'Add Screen Location',\r\n      content: <Address stepper={stepper} type='wizard-horizontal' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='horizontal-wizard'>\r\n      <Wizard instance={el => setStepper(el)} ref={ref} steps={steps} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardHorizontal\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport Address from './steps/Address'\r\nimport SocialLinks from './steps/SocialLinks'\r\nimport PersonalInfo from './steps/PersonalInfo'\r\nimport AccountDetails from './steps/AccountDetails'\r\nimport { FileText, User, MapPin, Link } from 'react-feather'\r\n\r\nconst WizardModernVertical = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Account Details',\r\n      subtitle: 'Enter Your Account Details.',\r\n      icon: <FileText size={18} />,\r\n      content: <AccountDetails stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Personal Info',\r\n      subtitle: 'Add Personal Info',\r\n      icon: <User size={18} />,\r\n      content: <PersonalInfo stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Address',\r\n      subtitle: 'Add Address',\r\n      icon: <MapPin size={18} />,\r\n      content: <Address stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'social-links',\r\n      title: 'Social Links',\r\n      subtitle: 'Add Social Links',\r\n      icon: <Link size={18} />,\r\n      content: <SocialLinks stepper={stepper} type='modern-vertical' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='modern-vertical-wizard'>\r\n      <Wizard\r\n        type='modern-vertical'\r\n        ref={ref}\r\n        steps={steps}\r\n        options={{\r\n          linear: false\r\n        }}\r\n        instance={el => setStepper(el)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardModernVertical\r\n","import { Fragment } from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport WizardModern from './WizardModern'\r\nimport WizardVertical from './WizardVertical'\r\nimport WizardHorizontal from './WizardHorizontal'\r\nimport WizardModernVertical from './WizardModernVertical'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\nconst Wizard = () => {\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='New Screen' breadCrumbParent='Form' breadCrumbActive='New Screen' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <WizardHorizontal />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Wizard\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}