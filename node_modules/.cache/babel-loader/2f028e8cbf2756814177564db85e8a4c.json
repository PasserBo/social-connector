{"ast":null,"code":"var Color;\n\n(function (Color) {\n  Color[\"Accent\"] = \"accent\";\n  Color[\"Bg\"] = \"bg\";\n  Color[\"BgAlt\"] = \"bg-alt\";\n  Color[\"BgLight\"] = \"bg-light\";\n  Color[\"Invert\"] = \"invert\";\n  Color[\"TextHover\"] = \"text-hover\";\n  Color[\"TextTitle\"] = \"text-title\";\n  Color[\"TextCaption\"] = \"text-caption\";\n  Color[\"TextBody\"] = \"text-body\";\n  Color[\"InputPlaceholder\"] = \"input-placeholder\";\n  Color[\"Border\"] = \"border\";\n  Color[\"FeedbackAlert\"] = \"feedback-alert\";\n  Color[\"FeedbackError\"] = \"feedback-error\";\n  Color[\"FeedbackSuccess\"] = \"feedback-success\";\n})(Color || (Color = {}));\n\nexport { Color };","map":{"version":3,"sources":["../../src/color-modes/types.ts"],"names":["Color"],"mappings":"IAAYA,K;;AAAZ,CAAA,UAAYA,KAAZ,EAAYA;AACVA,EAAAA,KAAAA,CAAAA,QAAAA,CAAAA,GAAAA,QAAAA;AACAA,EAAAA,KAAAA,CAAAA,IAAAA,CAAAA,GAAAA,IAAAA;AACAA,EAAAA,KAAAA,CAAAA,OAAAA,CAAAA,GAAAA,QAAAA;AACAA,EAAAA,KAAAA,CAAAA,SAAAA,CAAAA,GAAAA,UAAAA;AACAA,EAAAA,KAAAA,CAAAA,QAAAA,CAAAA,GAAAA,QAAAA;AACAA,EAAAA,KAAAA,CAAAA,WAAAA,CAAAA,GAAAA,YAAAA;AACAA,EAAAA,KAAAA,CAAAA,WAAAA,CAAAA,GAAAA,YAAAA;AACAA,EAAAA,KAAAA,CAAAA,aAAAA,CAAAA,GAAAA,cAAAA;AACAA,EAAAA,KAAAA,CAAAA,UAAAA,CAAAA,GAAAA,WAAAA;AACAA,EAAAA,KAAAA,CAAAA,kBAAAA,CAAAA,GAAAA,mBAAAA;AACAA,EAAAA,KAAAA,CAAAA,QAAAA,CAAAA,GAAAA,QAAAA;AACAA,EAAAA,KAAAA,CAAAA,eAAAA,CAAAA,GAAAA,gBAAAA;AACAA,EAAAA,KAAAA,CAAAA,eAAAA,CAAAA,GAAAA,gBAAAA;AACAA,EAAAA,KAAAA,CAAAA,iBAAAA,CAAAA,GAAAA,kBAAAA;AAdF,CAAA,EAAYA,KAAK,KAALA,KAAK,GAAjB,EAAiB,CAAjB","sourcesContent":["export enum Color {\n  Accent = 'accent',\n  Bg = 'bg',\n  BgAlt = 'bg-alt',\n  BgLight = 'bg-light',\n  Invert = 'invert',\n  TextHover = 'text-hover',\n  TextTitle = 'text-title',\n  TextCaption = 'text-caption',\n  TextBody = 'text-body',\n  InputPlaceholder = 'input-placeholder',\n  Border = 'border',\n  FeedbackAlert = 'feedback-alert',\n  FeedbackError = 'feedback-error',\n  FeedbackSuccess = 'feedback-success',\n}\n\nexport type ColorsStringLiteral =\n  | 'accent'\n  | 'bg'\n  | 'bg-alt'\n  | 'bg-light'\n  | 'invert'\n  | 'text-hover'\n  | 'text-title'\n  | 'text-caption'\n  | 'text-body'\n  | 'input-placeholder'\n  | 'border'\n  | 'feedback-alert'\n  | 'feedback-error'\n  | 'feedback-success';\n\nexport type ColorModeTypes = {\n  [key in ColorsStringLiteral]: string;\n};\n\nexport interface ColorModesInterface {\n  light: ColorModeTypes;\n  dark: ColorModeTypes;\n}\n\nexport type ThemeColorsStringLiteral =\n  | 'transparent'\n  | 'current'\n  | 'black'\n  | 'white'\n  | 'blue'\n  | 'blue.100'\n  | 'blue.200'\n  | 'blue.300'\n  | 'blue.400'\n  | 'blue.900'\n  | 'blue.hover'\n  | 'ink'\n  | 'ink.50'\n  | 'ink.100'\n  | 'ink.150'\n  | 'ink.200'\n  | 'ink.250'\n  | 'ink.300'\n  | 'ink.400'\n  | 'ink.600'\n  | 'darken.50'\n  | 'darken.100'\n  | 'darken.150'\n  | 'red'\n  | 'green'\n  | 'orange'\n  | 'cyan'\n  | 'feedback.error'\n  | 'feedback.success'\n  | 'feedback.warning'\n  | 'feedback.info';\n"]},"metadata":{},"sourceType":"module"}