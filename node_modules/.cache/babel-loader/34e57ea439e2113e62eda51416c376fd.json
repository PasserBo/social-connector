{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { forwardRef } from 'react';\nimport { Box } from '../box/index.esm.js';\nimport { useFormControl } from '../form-control/index.esm.js';\nimport { Text } from '../text/index.esm.js';\n\nvar RequiredIndicator = function RequiredIndicator(props) {\n  return React__default.createElement(Box, Object.assign({\n    as: \"span\",\n    ml: 1,\n    color: \"red\",\n    \"aria-hidden\": \"true\",\n    children: \"*\"\n  }, props));\n};\n\nvar FormLabel = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var formControl = useFormControl(props);\n  return React__default.createElement(Text, Object.assign({\n    ref: ref,\n    pb: \"4px\",\n    opacity: formControl.isDisabled ? 0.4 : 1,\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    display: \"inline-block\",\n    as: \"label\",\n    textStyle: \"body.small.medium\"\n  }, props), children, formControl.isRequired && React__default.createElement(RequiredIndicator, null));\n});\nFormLabel.displayName = 'FormLabel';\nexport { FormLabel, RequiredIndicator };","map":{"version":3,"sources":["../../src/form-label/index.tsx"],"names":["RequiredIndicator","React","as","ml","color","children","FormLabel","forwardRef","props","formControl","useFormControl","ref","pb","opacity","textAlign","verticalAlign","display","textStyle"],"mappings":";;;;;;IASaA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAA;AAAA,SAC/BC,cAAAA,CAAAA,aAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AAAKC,IAAAA,EAAE,EAAC,MAARD;AAAeE,IAAAA,EAAE,EAAE,CAAnBF;AAAsBG,IAAAA,KAAK,EAAC,KAA5BH;mBAA8C,MAA9CA;AAAqDI,IAAAA,QAAQ,EAAC;AAA9DJ,GAAAA,EAD+B,KAC/BA,CAAAA,CAD+B;AAAA,C;;IASpBK,SAAS,GAAA,aAAGC,UAAU,CAAsB,UAAA,IAAA,EAAA,GAAA,EAAA;MAAGF,QAAAA,GAAAA,IAAAA,CAAAA,Q;MAAaG,KAAAA,GAAAA,6BAAAA,CAAAA,IAAAA,EAAAA,CAAAA,UAAAA,CAAAA,C;;AACvE,MAAMC,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;AACA,SACET,cAAAA,CAAAA,aAAAA,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AACEU,IAAAA,GAAG,EAAEA,GADPV;AAEEW,IAAAA,EAAE,EAAC,KAFLX;AAGEY,IAAAA,OAAO,EAAEJ,WAAW,CAAXA,UAAAA,GAAAA,GAAAA,GAA+B,CAH1CR;AAIEa,IAAAA,SAAS,EAAC,MAJZb;AAKEc,IAAAA,aAAa,EAAC,QALhBd;AAMEe,IAAAA,OAAO,EAAC,cANVf;AAOEC,IAAAA,EAAE,EAAC,OAPLD;AAQEgB,IAAAA,SAAS,EAAC;AARZhB,GAAAA,EAAAA,KAAAA,CAAAA,EAAAA,QAAAA,EAYGQ,WAAW,CAAXA,UAAAA,IAA0BR,cAAAA,CAAAA,aAAAA,CAAAA,iBAAAA,EAb/B,IAa+BA,CAZ7BA,CADF;AAFiC,CAAA,C;AAoBnCK,SAAS,CAATA,WAAAA,GAAAA,WAAAA","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Box } from '../box';\nimport { Text } from '../text';\nimport { FormLabelProps } from './types';\nimport { useFormControl } from '../form-control';\n\nexport * from './types';\n\n/* eslint react/no-children-prop: 0 */\nexport const RequiredIndicator = (props: any) => (\n  <Box as=\"span\" ml={1} color=\"red\" aria-hidden=\"true\" children=\"*\" {...props} />\n);\n\n/**\n * FormLabel is used for form inputs and controls.\n * It reads from the `FormControl` context to handle it's styles for\n * the various form states.\n */\nexport const FormLabel = forwardRef<any, FormLabelProps>(({ children, ...props }, ref) => {\n  const formControl = useFormControl(props);\n  return (\n    <Text\n      ref={ref}\n      pb=\"4px\"\n      opacity={formControl.isDisabled ? 0.4 : 1}\n      textAlign=\"left\"\n      verticalAlign=\"middle\"\n      display=\"inline-block\"\n      as=\"label\"\n      textStyle=\"body.small.medium\"\n      {...props}\n    >\n      {children}\n      {formControl.isRequired && <RequiredIndicator />}\n    </Text>\n  );\n});\n\nFormLabel.displayName = 'FormLabel';\n\nexport default FormLabel;\n"]},"metadata":{},"sourceType":"module"}