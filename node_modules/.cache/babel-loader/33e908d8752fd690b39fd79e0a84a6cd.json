{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/components/TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Box, Text } from '@blockstack/ui';\nimport { Session } from '../auth';\nimport { Todo } from './Todo';\nimport { v4 as uuid } from 'uuid';\nimport { Sharer } from './Sharer';\nimport { fetchTasks, saveTasks } from '../storage';\nimport exportFromJSON from 'export-from-json';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPublic, setIsPublic] = useState(false);\n  const [username, setUsername] = useState('');\n  const [notFound, setNotFound] = useState(false);\n  useEffect(() => {\n    const username = document.location.pathname.split('/')[2];\n\n    if (username) {\n      setUsername(username);\n    }\n\n    const doFetchTasks = async () => {\n      const response = await fetchTasks(Session, username);\n\n      if (response.tasks === null) {\n        setNotFound(true);\n      } else {\n        setTasks(response.tasks);\n      }\n\n      setIsPublic(!!response.public);\n      setLoading(false);\n    };\n\n    doFetchTasks();\n  }, []);\n\n  const saveTask = _ref => {\n    let {\n      value,\n      complete,\n      index,\n      remove\n    } = _ref;\n    setTasks(currentTasks => {\n      if (remove && index !== 0) {\n        currentTasks.splice(index, 1);\n        void saveTasks(Session, currentTasks);\n        return currentTasks;\n      } else {\n        const task = currentTasks[index];\n        task.value = value;\n        task.complete = complete;\n        currentTasks[index] = task;\n        void saveTasks(Session, currentTasks);\n        return currentTasks;\n      }\n    });\n  };\n\n  const createTask = () => {\n    setTasks(tasks.concat([{\n      value: '',\n      completed: false,\n      id: uuid()\n    }]));\n  };\n\n  const exportData = _ref2 => {\n    let {\n      exportType\n    } = _ref2;\n    exportFromJSON({\n      data: tasks,\n      fileName: 'todo',\n      exportType: 'csv'\n    });\n  };\n\n  const todos = tasks.map((task, index) => /*#__PURE__*/_createElement(Todo, { ...task,\n    index: index,\n    key: task.id,\n    save: saveTask,\n    disabled: !!username,\n    create: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n\n  const getDownload = () => {\n    if (loading) {\n      return '';\n    }\n\n    return 'Export as CSV';\n  };\n\n  const getHeader = () => {\n    if (loading) {\n      return 'Loading...';\n    }\n\n    if (notFound) {\n      return '404. No keywords found here.';\n    }\n\n    if (username) {\n      if (isPublic) {\n        return `${username.split('.')[0]}'s keywords`;\n      }\n\n      return `${username.split('.')[0]}'s keywords are private`;\n    }\n\n    return 'My Keywords';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxWidth: \"660px\",\n      width: \"100%\",\n      mx: \"auto\",\n      mt: \"75px\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        width: \"100%\",\n        flexWrap: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 4,\n          width: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            textStyle: \"display.large\",\n            fontSize: 7,\n            children: getHeader()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Text, {\n          children: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 22\n        }, this) : todos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"3s1x2c2xKsHemGN81N7cUZ9sprI=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/components/TodoList.jsx"],"names":["React","useState","useEffect","Flex","Box","Text","Session","Todo","v4","uuid","Sharer","fetchTasks","saveTasks","exportFromJSON","TodoList","tasks","setTasks","loading","setLoading","isPublic","setIsPublic","username","setUsername","notFound","setNotFound","document","location","pathname","split","doFetchTasks","response","public","saveTask","value","complete","index","remove","currentTasks","splice","task","createTask","concat","completed","id","exportData","exportType","data","fileName","todos","map","getDownload","getHeader"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Flex, Box, Text } from '@blockstack/ui'\nimport { Session } from '../auth'\nimport { Todo } from './Todo'\nimport { v4 as uuid } from 'uuid'\nimport { Sharer } from './Sharer'\nimport { fetchTasks, saveTasks } from '../storage'\nimport exportFromJSON from 'export-from-json'\n\nexport const TodoList = () => {\n  const [tasks, setTasks] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [isPublic, setIsPublic] = useState(false)\n  const [username, setUsername] = useState('')\n  const [notFound, setNotFound] = useState(false)\n\n  useEffect(() => {\n    const username = document.location.pathname.split('/')[2]\n    if (username) {\n      setUsername(username)\n    }\n    const doFetchTasks = async () => {\n      const response = await fetchTasks(Session, username)\n      if (response.tasks === null) {\n        setNotFound(true)\n      } else {\n        setTasks(response.tasks)\n      }\n      setIsPublic(!!response.public)\n      setLoading(false)\n    }\n    doFetchTasks()\n  }, [])\n\n  const saveTask = ({ value, complete, index, remove }) => {\n    setTasks(currentTasks => {\n      if (remove && index !== 0) {\n        currentTasks.splice(index, 1)\n        void saveTasks(Session, currentTasks)\n        return currentTasks\n      } else {\n        const task = currentTasks[index]\n        task.value = value\n        task.complete = complete\n        currentTasks[index] = task\n        void saveTasks(Session, currentTasks)\n        return currentTasks\n      }\n    })\n  }\n\n  const createTask = () => {\n    setTasks(tasks.concat([{ value: '', completed: false, id: uuid() }]))\n  }\n\n  const exportData = ({ exportType }) => {\n    exportFromJSON({ data: tasks, fileName: 'todo', exportType: 'csv' })\n  }\n\n  const todos = tasks.map((task, index) => (\n    <Todo\n      {...task}\n      index={index}\n      key={task.id}\n      save={saveTask}\n      disabled={!!username}\n      create={createTask}\n    />\n  ))\n\n  const getDownload = () => {\n    if (loading) {\n      return '';\n    }\n    return 'Export as CSV'\n  }\n\n  const getHeader = () => {\n    if (loading) {\n      return 'Loading...'\n    }\n    if (notFound) {\n      return '404. No keywords found here.'\n    }\n    if (username) {\n      if (isPublic) {\n        return `${username.split('.')[0]}'s keywords`\n      }\n      return `${username.split('.')[0]}'s keywords are private`\n    }\n    return 'My Keywords'\n  }\n\n  return (\n    <Flex>\n      <Box maxWidth=\"660px\" width=\"100%\" mx=\"auto\" mt=\"75px\">\n        <Flex width=\"100%\" flexWrap=\"wrap\">\n          <Box mb={4} width=\"100%\">\n            <Text textStyle=\"display.large\" fontSize={7}>\n              {getHeader()}\n            </Text>\n          </Box>\n          {loading ? <Text>loading...</Text> : todos}\n        </Flex>\n      </Box>\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}