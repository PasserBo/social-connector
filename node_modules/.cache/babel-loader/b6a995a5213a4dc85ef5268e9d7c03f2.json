{"ast":null,"code":"// ** React Imports\nimport{Fragment,useState}from'react';// ** Reactstrap Imports\nimport{Button,Popover,PopoverHeader,PopoverBody}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PopoverControlled=()=>{const[popoverOpen,setPopoverOpen]=useState(false);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",outline:true,id:\"controlledPopover\",children:\"Controlled\"}),/*#__PURE__*/_jsxs(Popover,{placement:\"top\",isOpen:popoverOpen,target:\"controlledPopover\",toggle:()=>setPopoverOpen(!popoverOpen),children:[/*#__PURE__*/_jsx(PopoverHeader,{children:\"Controlled Popover\"}),/*#__PURE__*/_jsx(PopoverBody,{children:\"Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\"})]})]});};export default PopoverControlled;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/views/components/popovers/PopoverControlled.js"],"names":["Fragment","useState","Button","Popover","PopoverHeader","PopoverBody","PopoverControlled","popoverOpen","setPopoverOpen"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,QAAnB,KAAmC,OAAnC,CAEA;AACA,OAASC,MAAT,CAAiBC,OAAjB,CAA0BC,aAA1B,CAAyCC,WAAzC,KAA4D,YAA5D,C,wFAEA,KAAMC,CAAAA,iBAAiB,CAAG,IAAM,CAC9B,KAAM,CAACC,WAAD,CAAcC,cAAd,EAAgCP,QAAQ,CAAC,KAAD,CAA9C,CAEA,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,OAAO,KAA/B,CAAgC,EAAE,CAAC,mBAAnC,wBADF,cAIE,MAAC,OAAD,EACE,SAAS,CAAC,KADZ,CAEE,MAAM,CAAEM,WAFV,CAGE,MAAM,CAAC,mBAHT,CAIE,MAAM,CAAE,IAAMC,cAAc,CAAC,CAACD,WAAF,CAJ9B,wBAME,KAAC,aAAD,iCANF,cAOE,KAAC,WAAD,yHAPF,GAJF,GADF,CAkBD,CArBD,CAsBA,cAAeD,CAAAA,iBAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap'\r\n\r\nconst PopoverControlled = () => {\r\n  const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button color='primary' outline id='controlledPopover'>\r\n        Controlled\r\n      </Button>\r\n      <Popover\r\n        placement='top'\r\n        isOpen={popoverOpen}\r\n        target='controlledPopover'\r\n        toggle={() => setPopoverOpen(!popoverOpen)}\r\n      >\r\n        <PopoverHeader>Controlled Popover</PopoverHeader>\r\n        <PopoverBody>\r\n          Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\r\n        </PopoverBody>\r\n      </Popover>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default PopoverControlled\r\n"]},"metadata":{},"sourceType":"module"}