{"ast":null,"code":"// ** Returns paginated array\nexport const paginateArray=(array,perPage,page)=>array.slice((page-1)*perPage,page*perPage);// ** Returns sorted array\nexport const sortCompare=key=>(a,b)=>{const fieldA=a[key];const fieldB=b[key];let comparison=0;if(fieldA>fieldB){comparison=1;}else if(fieldA<fieldB){comparison=-1;}return comparison;};// ** Returns number range\nexport const getRandomInt=(min,max)=>{if(min>max){const temp=max;/* eslint-disable no-param-reassign */max=min;min=temp;/* eslint-enable */}if(min<=0){return Math.floor(Math.random()*(max+Math.abs(min)+1))+min;}return Math.floor(Math.random()*max)+min;};// ** Returns random date\nexport const randomDate=(start,end)=>{const diff=end.getTime()-start.getTime();const newDiff=diff*Math.random();const date=new Date(start.getTime()+newDiff);return date;};","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/@local-db/utils.js"],"names":["paginateArray","array","perPage","page","slice","sortCompare","key","a","b","fieldA","fieldB","comparison","getRandomInt","min","max","temp","Math","floor","random","abs","randomDate","start","end","diff","getTime","newDiff","date","Date"],"mappings":"AAAA;AACA,MAAO,MAAMA,CAAAA,aAAa,CAAG,CAACC,KAAD,CAAQC,OAAR,CAAiBC,IAAjB,GAA0BF,KAAK,CAACG,KAAN,CAAY,CAACD,IAAI,CAAG,CAAR,EAAaD,OAAzB,CAAkCC,IAAI,CAAGD,OAAzC,CAAhD,CAEP;AACA,MAAO,MAAMG,CAAAA,WAAW,CAAGC,GAAG,EAAI,CAACC,CAAD,CAAIC,CAAJ,GAAU,CAC1C,KAAMC,CAAAA,MAAM,CAAGF,CAAC,CAACD,GAAD,CAAhB,CACA,KAAMI,CAAAA,MAAM,CAAGF,CAAC,CAACF,GAAD,CAAhB,CAEA,GAAIK,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAIF,MAAM,CAAGC,MAAb,CAAqB,CACnBC,UAAU,CAAG,CAAb,CACD,CAFD,IAEO,IAAIF,MAAM,CAAGC,MAAb,CAAqB,CAC1BC,UAAU,CAAG,CAAC,CAAd,CACD,CACD,MAAOA,CAAAA,UAAP,CACD,CAXM,CAaP;AACA,MAAO,MAAMC,CAAAA,YAAY,CAAG,CAACC,GAAD,CAAMC,GAAN,GAAc,CACxC,GAAID,GAAG,CAAGC,GAAV,CAAe,CACb,KAAMC,CAAAA,IAAI,CAAGD,GAAb,CACA,sCACAA,GAAG,CAAGD,GAAN,CACAA,GAAG,CAAGE,IAAN,CACA,mBACD,CAED,GAAIF,GAAG,EAAI,CAAX,CAAc,CACZ,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBJ,GAAG,CAAGE,IAAI,CAACG,GAAL,CAASN,GAAT,CAAN,CAAsB,CAAvC,CAAX,EAAwDA,GAA/D,CACD,CACD,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBJ,GAA3B,EAAkCD,GAAzC,CACD,CAbM,CAeP;AACA,MAAO,MAAMO,CAAAA,UAAU,CAAG,CAACC,KAAD,CAAQC,GAAR,GAAgB,CACxC,KAAMC,CAAAA,IAAI,CAAGD,GAAG,CAACE,OAAJ,GAAgBH,KAAK,CAACG,OAAN,EAA7B,CACA,KAAMC,CAAAA,OAAO,CAAGF,IAAI,CAAGP,IAAI,CAACE,MAAL,EAAvB,CACA,KAAMQ,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASN,KAAK,CAACG,OAAN,GAAkBC,OAA3B,CAAb,CACA,MAAOC,CAAAA,IAAP,CACD,CALM","sourcesContent":["// ** Returns paginated array\r\nexport const paginateArray = (array, perPage, page) => array.slice((page - 1) * perPage, page * perPage)\r\n\r\n// ** Returns sorted array\r\nexport const sortCompare = key => (a, b) => {\r\n  const fieldA = a[key]\r\n  const fieldB = b[key]\r\n\r\n  let comparison = 0\r\n  if (fieldA > fieldB) {\r\n    comparison = 1\r\n  } else if (fieldA < fieldB) {\r\n    comparison = -1\r\n  }\r\n  return comparison\r\n}\r\n\r\n// ** Returns number range\r\nexport const getRandomInt = (min, max) => {\r\n  if (min > max) {\r\n    const temp = max\r\n    /* eslint-disable no-param-reassign */\r\n    max = min\r\n    min = temp\r\n    /* eslint-enable */\r\n  }\r\n\r\n  if (min <= 0) {\r\n    return Math.floor(Math.random() * (max + Math.abs(min) + 1)) + min\r\n  }\r\n  return Math.floor(Math.random() * max) + min\r\n}\r\n\r\n// ** Returns random date\r\nexport const randomDate = (start, end) => {\r\n  const diff = end.getTime() - start.getTime()\r\n  const newDiff = diff * Math.random()\r\n  const date = new Date(start.getTime() + newDiff)\r\n  return date\r\n}\r\n"]},"metadata":{},"sourceType":"module"}