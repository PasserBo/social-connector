{"ast":null,"code":"import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from '../utils/index.esm.js';\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\nexport { useSafeLayoutEffect };","map":{"version":3,"sources":["../../src/hooks/use-safe-layout-effect.ts"],"names":["useSafeLayoutEffect","isBrowser","React"],"mappings":";;IAaaA,mBAAmB,GAAGC,SAAS,GAAA,eAAA,GAA2BC,S","sourcesContent":["import * as React from 'react';\nimport { isBrowser } from '../utils';\n\n/**\n * useSafeLayoutEffect enables us to safely call `useLayoutEffect` on the browserpr\n * (for SSR reasons)\n *\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect in the browser.\n *\n * @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n */\nexport const useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n"]},"metadata":{},"sourceType":"module"}