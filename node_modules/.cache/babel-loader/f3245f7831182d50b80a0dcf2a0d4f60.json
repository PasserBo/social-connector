{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/forms/wizard/steps-with-validation/Address.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport classnames from 'classnames';\nimport { isObjEmpty } from '@utils';\nimport { useForm } from 'react-hook-form';\nimport { ArrowLeft, ArrowRight } from 'react-feather';\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Address = _ref => {\n  _s();\n\n  let {\n    stepper,\n    type\n  } = _ref;\n  const {\n    register,\n    errors,\n    handleSubmit,\n    trigger\n  } = useForm();\n\n  const onSubmit = () => {\n    trigger();\n\n    if (isObjEmpty(errors)) {\n      stepper.next();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-0\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Enter the Screen Physical Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          tag: Col,\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: `address-${type}`,\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: `address-${type}`,\n            name: `address-${type}`,\n            placeholder: \"123 Street, City, Zip Code\",\n            innerRef: register({\n              required: true\n            }),\n            className: classnames({\n              'is-invalid': errors[`address-${type}`]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          tag: Col,\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: `landmark-${type}`,\n            children: \"Closest Landmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: `landmark-${type}`,\n            id: `landmark-${type}`,\n            placeholder: \"Name a nearby landmark if any\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          tag: Col,\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: `pincode-${type}`,\n            children: \"Pincode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: `pincode-${type}`,\n            id: `pincode-${type}`,\n            placeholder: \"type a six digit pincode and save it on a note\",\n            innerRef: register({\n              required: true\n            }),\n            className: classnames({\n              'is-invalid': errors[`pincode-${type}`]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          tag: Col,\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: `city-${type}`,\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: `city-${type}`,\n            id: `city-${type}`,\n            placeholder: \"New York\",\n            innerRef: register({\n              required: true\n            }),\n            className: classnames({\n              'is-invalid': errors[`city-${type}`]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"primary\",\n          className: \"btn-prev\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n            size: 14,\n            className: \"align-middle mr-sm-25 mr-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle d-sm-inline-block d-none\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          type: \"submit\",\n          color: \"primary\",\n          className: \"btn-next\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle d-sm-inline-block d-none\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n            size: 14,\n            className: \"align-middle ml-sm-25 ml-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Address, \"R69JDp0S7jLKeMQPIkVcvcOHHVg=\", false, function () {\n  return [useForm];\n});\n\n_c = Address;\nexport default Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/forms/wizard/steps-with-validation/Address.js"],"names":["Fragment","classnames","isObjEmpty","useForm","ArrowLeft","ArrowRight","Label","FormGroup","Row","Col","Button","Form","Input","Address","stepper","type","register","errors","handleSubmit","trigger","onSubmit","next","required"],"mappings":"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","sourcesContent":["import { Fragment } from 'react'\r\nimport classnames from 'classnames'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\n\r\nconst Address = ({ stepper, type }) => {\r\n  const { register, errors, handleSubmit, trigger } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Address</h5>\r\n        <small>Enter the Screen Physical Address</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`address-${type}`}>\r\n              Address\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`address-${type}`}\r\n              name={`address-${type}`}\r\n              placeholder='123 Street, City, Zip Code'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`address-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`landmark-${type}`}>\r\n              Closest Landmark\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`landmark-${type}`}\r\n              id={`landmark-${type}`}\r\n              placeholder='Name a nearby landmark if any'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`pincode-${type}`}>\r\n              Pincode\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`pincode-${type}`}\r\n              id={`pincode-${type}`}\r\n              placeholder='type a six digit pincode and save it on a note'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`pincode-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`city-${type}`}>\r\n              City\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`city-${type}`}\r\n              id={`city-${type}`}\r\n              placeholder='New York'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`city-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev'>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Address\r\n"]},"metadata":{},"sourceType":"module"}