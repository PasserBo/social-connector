{"ast":null,"code":"// ** React Imports\nimport{Fragment,useState,useEffect}from'react';// ** Instafriend Component Imports\nimport Chat from'./Chat';import Sidebar from'./SidebarLeft';import UserProfileSidebar from'./UserProfileSidebar';// ** Third Party Components\nimport classnames from'classnames';// ** Store & Actions\nimport{useDispatch,useSelector}from'react-redux';import{getUserProfile,getChatContacts}from'./store';import'@styles/base/pages/app-instafriend.scss';import'@styles/base/pages/app-instafriend-list.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AppChat=()=>{// ** Store Vars\nconst dispatch=useDispatch();const store=useSelector(state=>state.instafriend);// ** States\nconst[user,setUser]=useState({});const[sidebar,setSidebar]=useState(false);const[userSidebarRight,setUserSidebarRight]=useState(false);const[userSidebarLeft,setUserSidebarLeft]=useState(false);// ** Sidebar & overlay toggle functions\nconst handleSidebar=()=>setSidebar(!sidebar);const handleUserSidebarLeft=()=>setUserSidebarLeft(!userSidebarLeft);const handleUserSidebarRight=()=>setUserSidebarRight(!userSidebarRight);const handleOverlayClick=()=>{setSidebar(false);setUserSidebarRight(false);setUserSidebarLeft(false);};// ** Set user function for Right Sidebar\nconst handleUser=obj=>setUser(obj);// ** Get data on Mount\nuseEffect(()=>{dispatch(getChatContacts());dispatch(getUserProfile());},[dispatch]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Sidebar,{store:store,sidebar:sidebar,handleSidebar:handleSidebar,userSidebarLeft:userSidebarLeft,handleUserSidebarLeft:handleUserSidebarLeft}),/*#__PURE__*/_jsx(\"div\",{className:\"content-right\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:classnames('body-content-overlay',{show:userSidebarRight===true||sidebar===true||userSidebarLeft===true}),onClick:handleOverlayClick}),/*#__PURE__*/_jsx(Chat,{store:store,handleUser:handleUser,handleSidebar:handleSidebar,userSidebarLeft:userSidebarLeft,handleUserSidebarRight:handleUserSidebarRight}),/*#__PURE__*/_jsx(UserProfileSidebar,{user:user,userSidebarRight:userSidebarRight,handleUserSidebarRight:handleUserSidebarRight})]})})})]});};export default AppChat;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/apps/instafriend/index.js"],"names":["Fragment","useState","useEffect","Chat","Sidebar","UserProfileSidebar","classnames","useDispatch","useSelector","getUserProfile","getChatContacts","AppChat","dispatch","store","state","instafriend","user","setUser","sidebar","setSidebar","userSidebarRight","setUserSidebarRight","userSidebarLeft","setUserSidebarLeft","handleSidebar","handleUserSidebarLeft","handleUserSidebarRight","handleOverlayClick","handleUser","obj","show"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,QAAnB,CAA6BC,SAA7B,KAA8C,OAA9C,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,SAAhD,CAEA,MAAO,yCAAP,CACA,MAAO,8CAAP,C,wFAEA,KAAMC,CAAAA,OAAO,CAAG,IAAM,CACpB;AACA,KAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,KAAMM,CAAAA,KAAK,CAAGL,WAAW,CAACM,KAAK,EAAIA,KAAK,CAACC,WAAhB,CAAzB,CAEA;AACA,KAAM,CAACC,IAAD,CAAOC,OAAP,EAAkBhB,QAAQ,CAAC,EAAD,CAAhC,CACA,KAAM,CAACiB,OAAD,CAAUC,UAAV,EAAwBlB,QAAQ,CAAC,KAAD,CAAtC,CACA,KAAM,CAACmB,gBAAD,CAAmBC,mBAAnB,EAA0CpB,QAAQ,CAAC,KAAD,CAAxD,CACA,KAAM,CAACqB,eAAD,CAAkBC,kBAAlB,EAAwCtB,QAAQ,CAAC,KAAD,CAAtD,CAEA;AACA,KAAMuB,CAAAA,aAAa,CAAG,IAAML,UAAU,CAAC,CAACD,OAAF,CAAtC,CACA,KAAMO,CAAAA,qBAAqB,CAAG,IAAMF,kBAAkB,CAAC,CAACD,eAAF,CAAtD,CACA,KAAMI,CAAAA,sBAAsB,CAAG,IAAML,mBAAmB,CAAC,CAACD,gBAAF,CAAxD,CACA,KAAMO,CAAAA,kBAAkB,CAAG,IAAM,CAC/BR,UAAU,CAAC,KAAD,CAAV,CACAE,mBAAmB,CAAC,KAAD,CAAnB,CACAE,kBAAkB,CAAC,KAAD,CAAlB,CACD,CAJD,CAMA;AACA,KAAMK,CAAAA,UAAU,CAAGC,GAAG,EAAIZ,OAAO,CAACY,GAAD,CAAjC,CAEA;AACA3B,SAAS,CAAC,IAAM,CACdU,QAAQ,CAACF,eAAe,EAAhB,CAAR,CACAE,QAAQ,CAACH,cAAc,EAAf,CAAR,CACD,CAHQ,CAGN,CAACG,QAAD,CAHM,CAAT,CAKA,mBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EACE,KAAK,CAAEC,KADT,CAEE,OAAO,CAAEK,OAFX,CAGE,aAAa,CAAEM,aAHjB,CAIE,eAAe,CAAEF,eAJnB,CAKE,qBAAqB,CAAEG,qBALzB,EADF,cAQE,YAAK,SAAS,CAAC,eAAf,uBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,aAAK,SAAS,CAAC,cAAf,wBACE,YACE,SAAS,CAAEnB,UAAU,CAAC,sBAAD,CAAyB,CAC5CwB,IAAI,CAAEV,gBAAgB,GAAK,IAArB,EAA6BF,OAAO,GAAK,IAAzC,EAAiDI,eAAe,GAAK,IAD/B,CAAzB,CADvB,CAIE,OAAO,CAAEK,kBAJX,EADF,cAOE,KAAC,IAAD,EACE,KAAK,CAAEd,KADT,CAEE,UAAU,CAAEe,UAFd,CAGE,aAAa,CAAEJ,aAHjB,CAIE,eAAe,CAAEF,eAJnB,CAKE,sBAAsB,CAAEI,sBAL1B,EAPF,cAcE,KAAC,kBAAD,EACE,IAAI,CAAEV,IADR,CAEE,gBAAgB,CAAEI,gBAFpB,CAGE,sBAAsB,CAAEM,sBAH1B,EAdF,GADF,EADF,EARF,GADF,CAmCD,CAjED,CAmEA,cAAef,CAAAA,OAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Instafriend Component Imports\r\nimport Chat from './Chat'\r\nimport Sidebar from './SidebarLeft'\r\nimport UserProfileSidebar from './UserProfileSidebar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserProfile, getChatContacts } from './store'\r\n\r\nimport '@styles/base/pages/app-instafriend.scss'\r\nimport '@styles/base/pages/app-instafriend-list.scss'\r\n\r\nconst AppChat = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.instafriend)\r\n\r\n  // ** States\r\n  const [user, setUser] = useState({})\r\n  const [sidebar, setSidebar] = useState(false)\r\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\r\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\r\n\r\n  // ** Sidebar & overlay toggle functions\r\n  const handleSidebar = () => setSidebar(!sidebar)\r\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\r\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\r\n  const handleOverlayClick = () => {\r\n    setSidebar(false)\r\n    setUserSidebarRight(false)\r\n    setUserSidebarLeft(false)\r\n  }\r\n\r\n  // ** Set user function for Right Sidebar\r\n  const handleUser = obj => setUser(obj)\r\n\r\n  // ** Get data on Mount\r\n  useEffect(() => {\r\n    dispatch(getChatContacts())\r\n    dispatch(getUserProfile())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        sidebar={sidebar}\r\n        handleSidebar={handleSidebar}\r\n        userSidebarLeft={userSidebarLeft}\r\n        handleUserSidebarLeft={handleUserSidebarLeft}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>\r\n            <div\r\n              className={classnames('body-content-overlay', {\r\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\r\n              })}\r\n              onClick={handleOverlayClick}\r\n            ></div>\r\n            <Chat\r\n              store={store}\r\n              handleUser={handleUser}\r\n              handleSidebar={handleSidebar}\r\n              userSidebarLeft={userSidebarLeft}\r\n              handleUserSidebarRight={handleUserSidebarRight}\r\n            />\r\n            <UserProfileSidebar\r\n              user={user}\r\n              userSidebarRight={userSidebarRight}\r\n              handleUserSidebarRight={handleUserSidebarRight}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AppChat\r\n"]},"metadata":{},"sourceType":"module"}