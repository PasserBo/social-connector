{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Flex, Box, Input } from '@blockstack/ui';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoInput = styled(Input)`\n  background: none;\n  border: none;\n  &:focus {\n    border: none;\n    box-shadow: none;\n  }\n`;\n/**\n * @typedef {Object} TodoProps\n * @property {boolean} complete\n * @property {string} value\n * @property {number} index\n * @property {({ value: string, complete: boolean, index: number, remove: boolean }) => void} save\n * @property {() => void} create\n * @property {boolean} isDisabled\n */\n\n/**\n * Component for an individual task\n * @param {TodoProps} properties\n */\n\n_c = TodoInput;\nexport const Todo = _ref => {\n  _s();\n\n  let {\n    complete = false,\n    value = '',\n    index,\n    save,\n    create,\n    disabled = false\n  } = _ref;\n  const [input, setInput] = useState(value);\n  const [focused, setFocused] = useState(false);\n  const [completeTick, setCompleteTick] = useState(complete);\n\n  const doSave = () => {\n    if (!disabled) {\n      save({\n        value: input,\n        complete,\n        index,\n        remove: input.length === 0\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    backgroundColor: focused ? '#FAFAFC' : 'white',\n    px: 3,\n    py: 0,\n    _hover: {\n      backgroundColor: '#FAFAFC'\n    },\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          position: 'relative',\n          top: '14px'\n        },\n        onClick: () => {\n          complete = !completeTick;\n\n          if (!disabled) {\n            save({\n              complete: complete,\n              value: input,\n              index\n            });\n            setCompleteTick(complete);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexGrow: 1,\n        children: /*#__PURE__*/_jsxDEV(TodoInput, {\n          placeholder: index === 0 ? 'Write your first keyword' : 'Add another',\n          fontSize: 2,\n          value: input,\n          onBlur: () => {\n            setFocused(false);\n            doSave();\n          },\n          autoFocus: !value,\n          isDisabled: disabled,\n          style: {\n            textDecoration: completeTick ? 'line-through' : 'none'\n          },\n          onFocus: () => setFocused(true),\n          onKeyDown: e => {\n            if (e.keyCode === 27) {\n              e.target.blur();\n            } else if (e.key === 'Enter') {\n              create();\n              e.target.blur();\n            }\n          },\n          onChange: e => {\n            if (!disabled) {\n              setInput(e.target.value);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"USiDUXNM9On9AeZuvvL/tF42KLg=\");\n\n_c2 = Todo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoInput\");\n$RefreshReg$(_c2, \"Todo\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/components/Todo.jsx"],"names":["React","useState","Flex","Box","Input","styled","TodoInput","Todo","complete","value","index","save","create","disabled","input","setInput","focused","setFocused","completeTick","setCompleteTick","doSave","remove","length","backgroundColor","position","top","textDecoration","e","keyCode","target","blur","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,KAApB,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACD,KAAD,CAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;KAtBME,S;AAuBN,OAAO,MAAMC,IAAI,GAAG,QAA6E;AAAA;;AAAA,MAA5E;AAAEC,IAAAA,QAAQ,GAAG,KAAb;AAAoBC,IAAAA,KAAK,GAAG,EAA5B;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA,IAAvC;AAA6CC,IAAAA,MAA7C;AAAqDC,IAAAA,QAAQ,GAAG;AAAhE,GAA4E;AAC/F,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACQ,KAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAACO,QAAD,CAAhD;;AAEA,QAAMY,MAAM,GAAG,MAAM;AACnB,QAAI,CAACP,QAAL,EAAe;AACbF,MAAAA,IAAI,CAAC;AACHF,QAAAA,KAAK,EAAEK,KADJ;AAEHN,QAAAA,QAFG;AAGHE,QAAAA,KAHG;AAIHW,QAAAA,MAAM,EAAEP,KAAK,CAACQ,MAAN,KAAiB;AAJtB,OAAD,CAAJ;AAMD;AACF,GATD;;AAUA,sBACE,QAAC,GAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,eAAe,EAAEN,OAAO,GAAG,SAAH,GAAe,OAFzC;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,MAAM,EAAE;AAAEO,MAAAA,eAAe,EAAE;AAAnB,KALV;AAAA,2BAOE,QAAC,IAAD;AAAA,8BACE,QAAC,GAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,GAAG,EAAE;AAA7B,SADT;AAEE,QAAA,OAAO,EAAE,MAAM;AACbjB,UAAAA,QAAQ,GAAG,CAACU,YAAZ;;AACA,cAAI,CAACL,QAAL,EAAe;AACbF,YAAAA,IAAI,CAAC;AACHH,cAAAA,QAAQ,EAAEA,QADP;AAEHC,cAAAA,KAAK,EAAEK,KAFJ;AAGHJ,cAAAA;AAHG,aAAD,CAAJ;AAKAS,YAAAA,eAAe,CAACX,QAAD,CAAf;AACD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,WAAW,EAAEE,KAAK,KAAK,CAAV,GAAc,0BAAd,GAA2C,aAD1D;AAEE,UAAA,QAAQ,EAAE,CAFZ;AAGE,UAAA,KAAK,EAAEI,KAHT;AAIE,UAAA,MAAM,EAAE,MAAM;AACZG,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,YAAAA,MAAM;AACP,WAPH;AAQE,UAAA,SAAS,EAAE,CAACX,KARd;AASE,UAAA,UAAU,EAAEI,QATd;AAUE,UAAA,KAAK,EAAE;AACLa,YAAAA,cAAc,EAAER,YAAY,GAAG,cAAH,GAAoB;AAD3C,WAVT;AAaE,UAAA,OAAO,EAAE,MAAMD,UAAU,CAAC,IAAD,CAb3B;AAcE,UAAA,SAAS,EAAEU,CAAC,IAAI;AACd,gBAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBD,cAAAA,CAAC,CAACE,MAAF,CAASC,IAAT;AACD,aAFD,MAEO,IAAIH,CAAC,CAACI,GAAF,KAAU,OAAd,EAAuB;AAC5BnB,cAAAA,MAAM;AACNe,cAAAA,CAAC,CAACE,MAAF,CAASC,IAAT;AACD;AACF,WArBH;AAsBE,UAAA,QAAQ,EAAEH,CAAC,IAAI;AACb,gBAAI,CAACd,QAAL,EAAe;AACbE,cAAAA,QAAQ,CAACY,CAAC,CAACE,MAAF,CAASpB,KAAV,CAAR;AACD;AACF;AA1BH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CAxEM;;GAAMF,I;;MAAAA,I","sourcesContent":["import React, { useState } from 'react'\nimport { Flex, Box, Input } from '@blockstack/ui'\nimport styled from 'styled-components'\n\nconst TodoInput = styled(Input)`\n  background: none;\n  border: none;\n  &:focus {\n    border: none;\n    box-shadow: none;\n  }\n`\n\n/**\n * @typedef {Object} TodoProps\n * @property {boolean} complete\n * @property {string} value\n * @property {number} index\n * @property {({ value: string, complete: boolean, index: number, remove: boolean }) => void} save\n * @property {() => void} create\n * @property {boolean} isDisabled\n */\n\n/**\n * Component for an individual task\n * @param {TodoProps} properties\n */\nexport const Todo = ({ complete = false, value = '', index, save, create, disabled = false }) => {\n  const [input, setInput] = useState(value)\n  const [focused, setFocused] = useState(false)\n  const [completeTick, setCompleteTick] = useState(complete)\n\n  const doSave = () => {\n    if (!disabled) {\n      save({\n        value: input,\n        complete,\n        index,\n        remove: input.length === 0\n      })\n    }\n  }\n  return (\n    <Box\n      width=\"100%\"\n      backgroundColor={focused ? '#FAFAFC' : 'white'}\n      px={3}\n      py={0}\n      _hover={{ backgroundColor: '#FAFAFC' }}\n    >\n      <Flex>\n        <Box\n          style={{ position: 'relative', top: '14px' }}\n          onClick={() => {\n            complete = !completeTick\n            if (!disabled) {\n              save({\n                complete: complete,\n                value: input,\n                index,\n              })\n              setCompleteTick(complete)\n            }\n          }}\n        >\n        </Box>\n        <Box flexGrow={1}>\n          <TodoInput\n            placeholder={index === 0 ? 'Write your first keyword' : 'Add another'}\n            fontSize={2}\n            value={input}\n            onBlur={() => {\n              setFocused(false)\n              doSave()\n            }}\n            autoFocus={!value}\n            isDisabled={disabled}\n            style={{\n              textDecoration: completeTick ? 'line-through' : 'none',\n            }}\n            onFocus={() => setFocused(true)}\n            onKeyDown={e => {\n              if (e.keyCode === 27) {\n                e.target.blur();\n              } else if (e.key === 'Enter') {\n                create()\n                e.target.blur()\n              }\n            }}\n            onChange={e => {\n              if (!disabled) {\n                setInput(e.target.value)\n              }\n            }}\n          />\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}