{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/index.js\";\n// ** React Imports\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Signin } from './components/Signin';\nimport { Session } from './auth'; // ** Router Import\n\nimport Router from './router/Router'; // ** Redux Imports\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'; // ** Intl, CASL & ThemeColors Context\n\nimport ability from './configs/acl/ability';\nimport { ToastContainer } from 'react-toastify';\nimport { AbilityContext } from './utility/context/Can';\nimport { ThemeContext } from './utility/context/ThemeColors'; // ** i18n\n\nimport './configs/i18n'; // ** Spinner (Splash Screen)\n\nimport Spinner from './@core/components/spinner/Fallback-spinner'; // ** Ripple Button\n\nimport './@core/components/ripple-button'; // ** Fake Database\n\nimport './@fake-db'; // ** PrismJS\n\nimport 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'prismjs/components/prism-jsx.min'; // ** React Perfect Scrollbar\n\nimport 'react-perfect-scrollbar/dist/css/styles.css'; // ** React Toastify\n\nimport '@styles/react/libs/toastify/toastify.scss'; // ** Core styles\n\nimport './@core/assets/fonts/feather/iconfont.css';\nimport './@core/scss/core.scss';\nimport './assets/scss/style.scss'; // ** Service Worker\n\nimport * as serviceWorker from './serviceWorker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nstate = {\n  userData: null\n};\n\nfunction handleSignOut(e) {\n  e.preventDefault();\n  this.setState({\n    userData: null\n  });\n  Session.signUserOut(window.location.origin);\n}\n\nfunction Display(props) {\n  const isLoggedIn = props.isLoggedIn;\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Signin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 14\n  }, this);\n}\n\n_c = Display;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(AbilityContext.Provider, {\n      value: ability,\n      children: /*#__PURE__*/_jsxDEV(ThemeContext, {\n        children: [/*#__PURE__*/_jsxDEV(Display, {\n          isLoggedIn: Session.isUserSignedIn()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n          newestOnTop: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction componentDidMount() {\n  if (Session.isSignInPending()) {\n    Session.handlePendingSignIn().then(userData => {\n      window.history.replaceState({}, document.title, '/');\n      this.setState({\n        userData\n      });\n    });\n  } else if (Session.isUserSignedIn()) {\n    this.setState({\n      userData: Session.loadUserData()\n    });\n  }\n}\n\nserviceWorker.unregister();\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/index.js"],"names":["React","Suspense","ReactDOM","Signin","Session","Router","Provider","store","ability","ToastContainer","AbilityContext","ThemeContext","Spinner","serviceWorker","state","userData","handleSignOut","e","preventDefault","setState","signUserOut","window","location","origin","Display","props","isLoggedIn","render","isUserSignedIn","document","getElementById","componentDidMount","isSignInPending","handlePendingSignIn","then","history","replaceState","title","loadUserData","unregister"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport React, { Suspense} from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Signin } from './components/Signin'\r\nimport { Session } from './auth'\r\n \r\n// ** Router Import\r\nimport Router from './router/Router'\r\n\r\n// ** Redux Imports\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store'\r\n\r\n// ** Intl, CASL & ThemeColors Context\r\nimport ability from './configs/acl/ability'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { AbilityContext } from './utility/context/Can'\r\nimport { ThemeContext } from './utility/context/ThemeColors'\r\n\r\n// ** i18n\r\nimport './configs/i18n'\r\n\r\n// ** Spinner (Splash Screen)\r\nimport Spinner from './@core/components/spinner/Fallback-spinner'\r\n\r\n// ** Ripple Button\r\nimport './@core/components/ripple-button'\r\n\r\n// ** Fake Database\r\nimport './@fake-db'\r\n\r\n// ** PrismJS\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\nimport 'prismjs/components/prism-jsx.min'\r\n\r\n// ** React Perfect Scrollbar\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\n\r\n// ** React Toastify\r\nimport '@styles/react/libs/toastify/toastify.scss'\r\n\r\n// ** Core styles\r\nimport './@core/assets/fonts/feather/iconfont.css'\r\nimport './@core/scss/core.scss'\r\nimport './assets/scss/style.scss'\r\n\r\n// ** Service Worker\r\nimport * as serviceWorker from './serviceWorker'\r\n \r\n  state = {\r\n    userData: null\r\n  }\r\n\r\n  function handleSignOut(e) {\r\n    e.preventDefault()\r\n    this.setState({ userData: null })\r\n    Session.signUserOut(window.location.origin)\r\n  }\r\n\r\n  function Display(props) {\r\n    const isLoggedIn = props.isLoggedIn\r\n    if (isLoggedIn) {\r\n      return <Router />\r\n    }\r\n      return <Signin />\r\n  }\r\n\r\n  ReactDOM.render(\r\n  <Provider store={store}>\r\n    <Suspense fallback={<Spinner />}>\r\n      <AbilityContext.Provider value={ability}>\r\n        <ThemeContext>\r\n          <Display isLoggedIn = {Session.isUserSignedIn()}/>\r\n          <ToastContainer newestOnTop />\r\n        </ThemeContext>\r\n      </AbilityContext.Provider>\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nfunction componentDidMount() {\r\n  if (Session.isSignInPending()) {\r\n    Session.handlePendingSignIn().then(userData => {\r\n      window.history.replaceState({}, document.title, '/')\r\n      this.setState({ userData })\r\n    })\r\n  } else if (Session.isUserSignedIn()) {\r\n    this.setState({ userData: Session.loadUserData() })\r\n  }\r\n}\r\n\r\nserviceWorker.unregister()"]},"metadata":{},"sourceType":"module"}