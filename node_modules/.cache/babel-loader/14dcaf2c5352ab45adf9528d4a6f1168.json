{"ast":null,"code":"import _asyncToGenerator from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _assertThisInitialized from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/regenerator/index.js\";\nimport { Buffer } from '@stacks/common';\nimport { sha256, sha512 } from 'sha.js';\nimport { serializeCV } from './clarity';\nimport RIPEMD160 from 'ripemd160-min';\nimport randombytes from 'randombytes';\nimport { deserializeCV } from './clarity';\nimport fetch from 'cross-fetch';\nimport { c32addressDecode } from 'c32check';\nimport lodashCloneDeep from 'lodash/cloneDeep';\nimport { with0x } from '@stacks/common';\nexport { randombytes as randomBytes };\nexport var BufferArray = /*#__PURE__*/function () {\n  function BufferArray() {\n    _classCallCheck(this, BufferArray);\n\n    this._value = [];\n  }\n\n  _createClass(BufferArray, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"appendHexString\",\n    value: function appendHexString(hexString) {\n      this.value.push(Buffer.from(hexString, 'hex'));\n    }\n  }, {\n    key: \"push\",\n    value: function push(buffer) {\n      return this._value.push(buffer);\n    }\n  }, {\n    key: \"appendByte\",\n    value: function appendByte(octet) {\n      if (!Number.isInteger(octet) || octet < 0 || octet > 255) {\n        throw new Error(\"Value \".concat(octet, \" is not a valid byte\"));\n      }\n\n      this.value.push(Buffer.from([octet]));\n    }\n  }, {\n    key: \"concatBuffer\",\n    value: function concatBuffer() {\n      return Buffer.concat(this.value);\n    }\n  }]);\n\n  return BufferArray;\n}();\nexport var leftPadHex = function leftPadHex(hexString) {\n  return hexString.length % 2 == 0 ? hexString : \"0\".concat(hexString);\n};\nexport var leftPadHexToLength = function leftPadHexToLength(hexString, length) {\n  return hexString.padStart(length, '0');\n};\nexport var rightPadHexToLength = function rightPadHexToLength(hexString, length) {\n  return hexString.padEnd(length, '0');\n};\nexport var intToHexString = function intToHexString(integer) {\n  var lengthBytes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n  return integer.toString(16).padStart(lengthBytes * 2, '0');\n};\nexport var hexStringToInt = function hexStringToInt(hexString) {\n  return parseInt(hexString, 16);\n};\nexport var exceedsMaxLengthBytes = function exceedsMaxLengthBytes(string, maxLengthBytes) {\n  return string ? Buffer.from(string).length > maxLengthBytes : false;\n};\nexport function cloneDeep(obj) {\n  return lodashCloneDeep(obj);\n}\nexport function omit(obj, prop) {\n  var clone = cloneDeep(obj);\n  delete clone[prop];\n  return clone;\n}\nexport var sha512_256 = /*#__PURE__*/function (_sha) {\n  _inherits(sha512_256, _sha);\n\n  var _super = _createSuper(sha512_256);\n\n  function sha512_256() {\n    var _this;\n\n    _classCallCheck(this, sha512_256);\n\n    _this = _super.call(this);\n    Object.assign(_assertThisInitialized(_this), {\n      _ah: 0x22312194,\n      _al: 0xfc2bf72c,\n      _bh: 0x9f555fa3,\n      _bl: 0xc84c64c2,\n      _ch: 0x2393b86b,\n      _cl: 0x6f53b151,\n      _dh: 0x96387719,\n      _dl: 0x5940eabd,\n      _eh: 0x96283ee2,\n      _el: 0xa88effe3,\n      _fh: 0xbe5e1e25,\n      _fl: 0x53863992,\n      _gh: 0x2b0199fc,\n      _gl: 0x2c85b8aa,\n      _hh: 0x0eb72ddc,\n      _hl: 0x81c52ca2\n    });\n    return _this;\n  }\n\n  _createClass(sha512_256, [{\n    key: \"digest\",\n    value: function digest(encoding) {\n      var buff = _get(_getPrototypeOf(sha512_256.prototype), \"digest\", this).call(this).slice(0, 32);\n\n      return encoding ? buff.toString(encoding) : buff;\n    }\n  }]);\n\n  return sha512_256;\n}(sha512);\nexport var txidFromData = function txidFromData(data) {\n  return new sha512_256().update(data).digest('hex');\n};\nexport var hash160 = function hash160(input) {\n  var sha256Result = new sha256().update(input).digest();\n  return Buffer.from(new RIPEMD160().update(sha256Result).digest());\n};\nexport var hashP2PKH = function hashP2PKH(input) {\n  return hash160(input).toString('hex');\n};\nexport var hashP2SH = function hashP2SH(numSigs, pubKeys) {\n  if (numSigs > 15 || pubKeys.length > 15) {\n    throw Error('P2SH multisig address can only contain up to 15 public keys');\n  }\n\n  var bufferArray = new BufferArray();\n  bufferArray.appendByte(80 + numSigs);\n  pubKeys.forEach(function (pubKey) {\n    bufferArray.appendByte(pubKey.length);\n    bufferArray.push(pubKey);\n  });\n  bufferArray.appendByte(80 + pubKeys.length);\n  bufferArray.appendByte(174);\n  var redeemScript = bufferArray.concatBuffer();\n  var redeemScriptHash = hash160(redeemScript);\n  return redeemScriptHash.toString('hex');\n};\nexport function isClarityName(name) {\n  var regex = /^[a-zA-Z]([a-zA-Z0-9]|[-_!?+<>=/*])*$|^[-+=/*]$|^[<>]=?$/;\n  return regex.test(name) && name.length < 128;\n}\nexport function fetchPrivate(_x, _x2) {\n  return _fetchPrivate.apply(this, arguments);\n}\n\nfunction _fetchPrivate() {\n  _fetchPrivate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input, init) {\n    var defaultFetchOpts, fetchOpts, fetchResult;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            defaultFetchOpts = {\n              referrer: 'no-referrer',\n              referrerPolicy: 'no-referrer'\n            };\n            fetchOpts = Object.assign(defaultFetchOpts, init);\n            _context.next = 4;\n            return fetch(input, fetchOpts);\n\n          case 4:\n            fetchResult = _context.sent;\n            return _context.abrupt(\"return\", fetchResult);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchPrivate.apply(this, arguments);\n}\n\nexport function cvToHex(cv) {\n  var serialized = serializeCV(cv);\n  return \"0x\".concat(serialized.toString('hex'));\n}\nexport function hexToCV(hex) {\n  return deserializeCV(hex);\n}\nexport var parseReadOnlyResponse = function parseReadOnlyResponse(response) {\n  if (response.okay) {\n    return hexToCV(response.result);\n  } else {\n    throw new Error(response.cause);\n  }\n};\nexport var validateStacksAddress = function validateStacksAddress(stacksAddress) {\n  try {\n    c32addressDecode(stacksAddress);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nexport var validateTxId = function validateTxId(txid) {\n  if (txid === 'success') return true;\n  var value = with0x(txid).toLowerCase();\n  if (value.length !== 66) return false;\n  return with0x(BigInt(value).toString(16).padStart(64, '0')) === value;\n};","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Buffer } from '@stacks/common';\nimport { sha256, sha512 } from 'sha.js';\nimport { serializeCV } from './clarity';\nimport RIPEMD160 from 'ripemd160-min';\nimport randombytes from 'randombytes';\nimport { deserializeCV } from './clarity';\nimport fetch from 'cross-fetch';\nimport { c32addressDecode } from 'c32check';\nimport lodashCloneDeep from 'lodash/cloneDeep';\nimport { with0x } from '@stacks/common';\nexport { randombytes as randomBytes };\nexport class BufferArray {\n    constructor() {\n        this._value = [];\n    }\n    get value() {\n        return this._value;\n    }\n    appendHexString(hexString) {\n        this.value.push(Buffer.from(hexString, 'hex'));\n    }\n    push(buffer) {\n        return this._value.push(buffer);\n    }\n    appendByte(octet) {\n        if (!Number.isInteger(octet) || octet < 0 || octet > 255) {\n            throw new Error(`Value ${octet} is not a valid byte`);\n        }\n        this.value.push(Buffer.from([octet]));\n    }\n    concatBuffer() {\n        return Buffer.concat(this.value);\n    }\n}\nexport const leftPadHex = (hexString) => hexString.length % 2 == 0 ? hexString : `0${hexString}`;\nexport const leftPadHexToLength = (hexString, length) => hexString.padStart(length, '0');\nexport const rightPadHexToLength = (hexString, length) => hexString.padEnd(length, '0');\nexport const intToHexString = (integer, lengthBytes = 8) => integer.toString(16).padStart(lengthBytes * 2, '0');\nexport const hexStringToInt = (hexString) => parseInt(hexString, 16);\nexport const exceedsMaxLengthBytes = (string, maxLengthBytes) => string ? Buffer.from(string).length > maxLengthBytes : false;\nexport function cloneDeep(obj) {\n    return lodashCloneDeep(obj);\n}\nexport function omit(obj, prop) {\n    const clone = cloneDeep(obj);\n    delete clone[prop];\n    return clone;\n}\nexport class sha512_256 extends sha512 {\n    constructor() {\n        super();\n        Object.assign(this, {\n            _ah: 0x22312194,\n            _al: 0xfc2bf72c,\n            _bh: 0x9f555fa3,\n            _bl: 0xc84c64c2,\n            _ch: 0x2393b86b,\n            _cl: 0x6f53b151,\n            _dh: 0x96387719,\n            _dl: 0x5940eabd,\n            _eh: 0x96283ee2,\n            _el: 0xa88effe3,\n            _fh: 0xbe5e1e25,\n            _fl: 0x53863992,\n            _gh: 0x2b0199fc,\n            _gl: 0x2c85b8aa,\n            _hh: 0x0eb72ddc,\n            _hl: 0x81c52ca2,\n        });\n    }\n    digest(encoding) {\n        const buff = super.digest().slice(0, 32);\n        return encoding ? buff.toString(encoding) : buff;\n    }\n}\nexport const txidFromData = (data) => new sha512_256().update(data).digest('hex');\nexport const hash160 = (input) => {\n    const sha256Result = new sha256().update(input).digest();\n    return Buffer.from(new RIPEMD160().update(sha256Result).digest());\n};\nexport const hashP2PKH = (input) => {\n    return hash160(input).toString('hex');\n};\nexport const hashP2SH = (numSigs, pubKeys) => {\n    if (numSigs > 15 || pubKeys.length > 15) {\n        throw Error('P2SH multisig address can only contain up to 15 public keys');\n    }\n    const bufferArray = new BufferArray();\n    bufferArray.appendByte(80 + numSigs);\n    pubKeys.forEach(pubKey => {\n        bufferArray.appendByte(pubKey.length);\n        bufferArray.push(pubKey);\n    });\n    bufferArray.appendByte(80 + pubKeys.length);\n    bufferArray.appendByte(174);\n    const redeemScript = bufferArray.concatBuffer();\n    const redeemScriptHash = hash160(redeemScript);\n    return redeemScriptHash.toString('hex');\n};\nexport function isClarityName(name) {\n    const regex = /^[a-zA-Z]([a-zA-Z0-9]|[-_!?+<>=/*])*$|^[-+=/*]$|^[<>]=?$/;\n    return regex.test(name) && name.length < 128;\n}\nexport async function fetchPrivate(input, init) {\n    const defaultFetchOpts = {\n        referrer: 'no-referrer',\n        referrerPolicy: 'no-referrer',\n    };\n    const fetchOpts = Object.assign(defaultFetchOpts, init);\n    const fetchResult = await fetch(input, fetchOpts);\n    return fetchResult;\n}\nexport function cvToHex(cv) {\n    const serialized = serializeCV(cv);\n    return `0x${serialized.toString('hex')}`;\n}\nexport function hexToCV(hex) {\n    return deserializeCV(hex);\n}\nexport const parseReadOnlyResponse = (response) => {\n    if (response.okay) {\n        return hexToCV(response.result);\n    }\n    else {\n        throw new Error(response.cause);\n    }\n};\nexport const validateStacksAddress = (stacksAddress) => {\n    try {\n        c32addressDecode(stacksAddress);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n};\nexport const validateTxId = (txid) => {\n    if (txid === 'success')\n        return true;\n    const value = with0x(txid).toLowerCase();\n    if (value.length !== 66)\n        return false;\n    return with0x(BigInt(value).toString(16).padStart(64, '0')) === value;\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}