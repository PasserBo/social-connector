{"ast":null,"code":"import mock from'../mock';var data={tasks:[{id:1,title:'Buy a blender',dueDate:'2020-08-20',description:'I want deals on blenders, show me new models.',assignee:{fullName:'',avatar:''},tags:['update'],isCompleted:false,isDeleted:false,isImportant:false},{id:2,title:'Movies',dueDate:'2021-08-20',description:'Movie Trailers.',assignee:{fullName:'',avatar:''},tags:['team','medium'],isCompleted:false,isDeleted:false,isImportant:false},{id:3,title:'Amazing restaurants in Pittsburgh ❤️',dueDate:'2021-08-20',description:'Find a restaurant for my aniversary!',assignee:{fullName:'',avatar:''},tags:['high'],isCompleted:false,isDeleted:false,isImportant:false}]};// ------------------------------------------------\n// GET: Return Tasks\n// ------------------------------------------------\nmock.onGet('/apps/todo/tasks').reply(function(config){// eslint-disable-next-line object-curly-newline\nvar _config$params=config.params,_config$params$q=_config$params.q,q=_config$params$q===void 0?'':_config$params$q,filter=_config$params.filter,tag=_config$params.tag,_config$params$sortBy=_config$params.sortBy,sortByParam=_config$params$sortBy===void 0?'latest':_config$params$sortBy;/* eslint-enable */ // ------------------------------------------------\n// Get Sort by and Sort Direction\n// ------------------------------------------------\nvar sortDesc=true;var sortBy=function(){if(sortByParam==='title-asc'){sortDesc=false;return'title';}if(sortByParam==='title-desc')return'title';if(sortByParam==='assignee'){sortDesc=false;return'assignee';}if(sortByParam==='due-date'){sortDesc=false;return'dueDate';}return'id';}();// ------------------------------------------------\n// Filtering\n// ------------------------------------------------\nvar queryLowered=q.toLowerCase();var hasFilter=function hasFilter(task){if(filter==='important')return task.isImportant&&!task.isDeleted;if(filter==='completed')return task.isCompleted&&!task.isDeleted;if(filter==='deleted')return task.isDeleted;return!task.isDeleted;};/* eslint-disable */var filteredData=data.tasks.filter(function(task){return task.title.toLowerCase().includes(queryLowered)&&hasFilter(task)&&(tag?task.tags.includes(tag):true);});/* eslint-enable  */ // ------------------------------------------------\n// Perform sorting\n// ------------------------------------------------\nvar sortTasks=function sortTasks(key){return function(a,b){var fieldA;var fieldB;// If sorting is by dueDate => Convert data to date\nif(key==='dueDate'){fieldA=new Date(a[key]);fieldB=new Date(b[key]);// eslint-disable-next-line brace-style\n}// If sorting is by assignee => Use `fullName` of assignee\nelse if(key==='assignee'){fieldA=a.assignee?a.assignee.fullName:null;fieldB=b.assignee?b.assignee.fullName:null;}else{fieldA=a[key];fieldB=b[key];}var comparison=0;if(fieldA===fieldB){comparison=0;}else if(fieldA===null){comparison=1;}else if(fieldB===null){comparison=-1;}else if(fieldA>fieldB){comparison=1;}else if(fieldA<fieldB){comparison=-1;}return comparison;};};// Sort Data\nvar sortedData=filteredData.sort(sortTasks(sortBy));if(sortDesc)sortedData.reverse();return[200,sortedData];});// ------------------------------------------------\n// POST: Add new task\n// ------------------------------------------------\nmock.onPost('/apps/todo/add-tasks').reply(function(config){// Get event from post data\nvar _JSON$parse=JSON.parse(config.data),task=_JSON$parse.task;var length=data.tasks.length;var lastIndex=0;if(length){lastIndex=data.tasks[length-1].id;}task.id=lastIndex+1;data.tasks.push(task);return[201,{task:task}];});// ------------------------------------------------\n// POST: Update Task\n// ------------------------------------------------\nmock.onPost('/apps/todo/update-task').reply(function(config){var taskData=JSON.parse(config.data).task;// Convert Id to number\ntaskData.id=Number(taskData.id);var task=data.tasks.find(function(e){return e.id===Number(taskData.id);});Object.assign(task,taskData);return[200,{task:task}];});// ------------------------------------------------\n// DELETE: Remove Task\n// ------------------------------------------------\nmock.onDelete('/apps/todo/delete-task').reply(function(config){// Get task id from URL\nvar taskId=config.taskId;// Convert Id to number\ntaskId=Number(taskId);var task=data.tasks.find(function(t){return t.id===taskId;});Object.assign(task,{isDeleted:true});return[200];});","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/@fake-db/apps/todo.js"],"names":["mock","data","tasks","id","title","dueDate","description","assignee","fullName","avatar","tags","isCompleted","isDeleted","isImportant","onGet","reply","config","params","q","filter","tag","sortBy","sortByParam","sortDesc","queryLowered","toLowerCase","hasFilter","task","filteredData","includes","sortTasks","key","a","b","fieldA","fieldB","Date","comparison","sortedData","sort","reverse","onPost","JSON","parse","length","lastIndex","push","taskData","Number","find","e","Object","assign","onDelete","taskId","t"],"mappings":"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","sourcesContent":["import mock from '../mock'\n\nconst data = {\n  tasks: [\n    {\n      id: 1,\n      title: 'Buy a blender',\n      dueDate: '2020-08-20',\n      description:\n        'I want deals on blenders, show me new models.',\n      assignee: {\n        fullName: '',\n        avatar: ''\n      },\n      tags: ['update'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 2,\n      title: 'Movies',\n      dueDate: '2021-08-20',\n      description:\n        'Movie Trailers.',\n      assignee: {\n        fullName: '',\n        avatar: ''\n      },\n      tags: ['team', 'medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 3,\n      title: 'Amazing restaurants in Pittsburgh ❤️',\n      dueDate: '2021-08-20',\n      description:\n        'Find a restaurant for my aniversary!',\n      assignee: {\n        fullName: '',\n        avatar: ''\n      },\n      tags: ['high'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    }\n  ]\n}\n\n// ------------------------------------------------\n// GET: Return Tasks\n// ------------------------------------------------\nmock.onGet('/apps/todo/tasks').reply(config => {\n  // eslint-disable-next-line object-curly-newline\n  const { q = '', filter, tag, sortBy: sortByParam = 'latest' } = config.params\n  /* eslint-enable */\n  // ------------------------------------------------\n  // Get Sort by and Sort Direction\n  // ------------------------------------------------\n  let sortDesc = true\n\n  const sortBy = (() => {\n    if (sortByParam === 'title-asc') {\n      sortDesc = false\n      return 'title'\n    }\n    if (sortByParam === 'title-desc') return 'title'\n    if (sortByParam === 'assignee') {\n      sortDesc = false\n      return 'assignee'\n    }\n    if (sortByParam === 'due-date') {\n      sortDesc = false\n      return 'dueDate'\n    }\n    return 'id'\n  })()\n\n  // ------------------------------------------------\n  // Filtering\n  // ------------------------------------------------\n  const queryLowered = q.toLowerCase()\n\n  const hasFilter = task => {\n    if (filter === 'important') return task.isImportant && !task.isDeleted\n    if (filter === 'completed') return task.isCompleted && !task.isDeleted\n    if (filter === 'deleted') return task.isDeleted\n    return !task.isDeleted\n  }\n  /* eslint-disable */\n  const filteredData = data.tasks.filter(task => {\n    return task.title.toLowerCase().includes(queryLowered) && hasFilter(task) && (tag ? task.tags.includes(tag) : true)\n  })\n  /* eslint-enable  */\n\n  // ------------------------------------------------\n  // Perform sorting\n  // ------------------------------------------------\n  const sortTasks = key => (a, b) => {\n    let fieldA\n    let fieldB\n\n    // If sorting is by dueDate => Convert data to date\n    if (key === 'dueDate') {\n      fieldA = new Date(a[key])\n      fieldB = new Date(b[key])\n      // eslint-disable-next-line brace-style\n    }\n\n    // If sorting is by assignee => Use `fullName` of assignee\n    else if (key === 'assignee') {\n      fieldA = a.assignee ? a.assignee.fullName : null\n      fieldB = b.assignee ? b.assignee.fullName : null\n    } else {\n      fieldA = a[key]\n      fieldB = b[key]\n    }\n\n    let comparison = 0\n\n    if (fieldA === fieldB) {\n      comparison = 0\n    } else if (fieldA === null) {\n      comparison = 1\n    } else if (fieldB === null) {\n      comparison = -1\n    } else if (fieldA > fieldB) {\n      comparison = 1\n    } else if (fieldA < fieldB) {\n      comparison = -1\n    }\n\n    return comparison\n  }\n\n  // Sort Data\n  const sortedData = filteredData.sort(sortTasks(sortBy))\n  if (sortDesc) sortedData.reverse()\n  return [200, sortedData]\n})\n\n// ------------------------------------------------\n// POST: Add new task\n// ------------------------------------------------\nmock.onPost('/apps/todo/add-tasks').reply(config => {\n  // Get event from post data\n  const { task } = JSON.parse(config.data)\n\n  const { length } = data.tasks\n  let lastIndex = 0\n  if (length) {\n    lastIndex = data.tasks[length - 1].id\n  }\n  task.id = lastIndex + 1\n\n  data.tasks.push(task)\n\n  return [201, { task }]\n})\n\n// ------------------------------------------------\n// POST: Update Task\n// ------------------------------------------------\nmock.onPost('/apps/todo/update-task').reply(config => {\n  const taskData = JSON.parse(config.data).task\n\n  // Convert Id to number\n  taskData.id = Number(taskData.id)\n\n  const task = data.tasks.find(e => e.id === Number(taskData.id))\n  Object.assign(task, taskData)\n\n  return [200, { task }]\n})\n\n// ------------------------------------------------\n// DELETE: Remove Task\n// ------------------------------------------------\nmock.onDelete('/apps/todo/delete-task').reply(config => {\n  // Get task id from URL\n  let taskId = config.taskId\n\n  // Convert Id to number\n  taskId = Number(taskId)\n\n  const task = data.tasks.find(t => t.id === taskId)\n  Object.assign(task, { isDeleted: true })\n  return [200]\n})\n"]},"metadata":{},"sourceType":"module"}