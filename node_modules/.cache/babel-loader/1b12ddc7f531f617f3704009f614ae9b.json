{"ast":null,"code":"// ** React Imports\nimport{useState,Fragment}from'react';// ** Third Party Components\nimport Select from'react-select';import classnames from'classnames';import Cleave from'cleave.js/react';import{Check}from'react-feather';import{toast}from'react-toastify';import Flatpickr from'react-flatpickr';import'cleave.js/dist/addons/cleave-phone.us';import{useForm,Controller}from'react-hook-form';// ** Custom Components\nimport Avatar from'@components/avatar';// ** Utils\nimport{selectThemeColors}from'@utils';// ** Reactstrap Imports\nimport{Card,Form,Label,Button,CardBody,CardTitle,CardHeader,InputGroup,InputGroupText}from'reactstrap';// ** Styles\nimport'@styles/react/libs/flatpickr/flatpickr.scss';import'@styles/react/libs/react-select/_react-select.scss';import'@styles/react/pages/page-form-validation.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const colourOptions=[{value:'ocean',label:'Ocean'},{value:'blue',label:'Blue'},{value:'purple',label:'Purple'},{value:'red',label:'Red'},{value:'orange',label:'Orange'}];const defaultValues={phoneNumber:'',ReactSelect:null,reactFlatpickr:null};const ValidationThirdPartyComponents=()=>{// ** State\nconst[data,setData]=useState(null);// ** Hooks\nconst{reset,handleSubmit,control}=useForm({defaultValues});const onSubmit=data=>{setData(data);if(data.ReactSelect!==null&&data.reactFlatpickr!==null&&data.phoneNumber.length){toast.success(/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"toastify-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"success\",icon:/*#__PURE__*/_jsx(Check,{size:12})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title\",children:\"Form Submitted!\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"toastify-body\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"list-unstyled mb-0\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Select:\"}),\": \",data.ReactSelect.value]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Flatpickr\"}),\": \",String(new Date(data.reactFlatpickr[0]))]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Input Mask\"}),\": \",data.phoneNumber]})]})})]}),{icon:false,hideProgressBar:true});}};const handleReset=()=>{reset({phoneNumber:'',ReactSelect:'',reactFlatpickr:''});};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Third Party Components\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"react-select\",children:\"React Select\"}),/*#__PURE__*/_jsx(Controller,{id:\"react-select\",control:control,name:\"ReactSelect\",render:_ref=>{let{field}=_ref;return/*#__PURE__*/_jsx(Select,{isClearable:true,options:colourOptions,classNamePrefix:\"select\",theme:selectThemeColors,className:classnames('react-select',{'is-invalid':data!==null&&data.ReactSelect===null}),...field});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"react-flatpickr\",children:\"React Flatpickr\"}),/*#__PURE__*/_jsx(Controller,{control:control,id:\"react-flatpickr\",name:\"reactFlatpickr\",render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/_jsx(Flatpickr,{...field,className:classnames('form-control',{'is-invalid':data!==null&&data.reactFlatpickr===null})});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"phone-number\",children:\"Input Mask\"}),/*#__PURE__*/_jsxs(InputGroup,{className:\"input-group-merge\",children:[/*#__PURE__*/_jsx(InputGroupText,{className:classnames({'is-invalid':data!==null&&(data.phoneNumber===null||!data.phoneNumber.length)}),children:\"US (+1)\"}),/*#__PURE__*/_jsx(Controller,{id:\"phone-number\",name:\"phoneNumber\",control:control,placeholder:\"1 234 567 8900\",render:_ref3=>{let{field}=_ref3;return/*#__PURE__*/_jsx(Cleave,{...field,className:classnames('form-control',{'is-invalid':data!==null&&(data.phoneNumber===null||!data.phoneNumber.length)}),options:{phone:true,phoneRegionCode:'US'}});}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(Button,{className:\"me-1\",color:\"primary\",type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{outline:true,color:\"secondary\",type:\"reset\",onClick:handleReset,children:\"Reset\"})]})]})})]});};export default ValidationThirdPartyComponents;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/forms/validation/ValidationThirdPartyComponents.js"],"names":["useState","Fragment","Select","classnames","Cleave","Check","toast","Flatpickr","useForm","Controller","Avatar","selectThemeColors","Card","Form","Label","Button","CardBody","CardTitle","CardHeader","InputGroup","InputGroupText","colourOptions","value","label","defaultValues","phoneNumber","ReactSelect","reactFlatpickr","ValidationThirdPartyComponents","data","setData","reset","handleSubmit","control","onSubmit","length","success","String","Date","icon","hideProgressBar","handleReset","field","phone","phoneRegionCode"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport Cleave from 'cleave.js/react'\r\nimport { Check } from 'react-feather'\r\nimport { toast } from 'react-toastify'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, Form, Label, Button, CardBody, CardTitle, CardHeader, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/pages/page-form-validation.scss'\r\n\r\nconst colourOptions = [\r\n  { value: 'ocean', label: 'Ocean' },\r\n  { value: 'blue', label: 'Blue' },\r\n  { value: 'purple', label: 'Purple' },\r\n  { value: 'red', label: 'Red' },\r\n  { value: 'orange', label: 'Orange' }\r\n]\r\n\r\nconst defaultValues = {\r\n  phoneNumber: '',\r\n  ReactSelect: null,\r\n  reactFlatpickr: null\r\n}\r\n\r\nconst ValidationThirdPartyComponents = () => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  // ** Hooks\r\n  const { reset, handleSubmit, control } = useForm({ defaultValues })\r\n\r\n  const onSubmit = data => {\r\n    setData(data)\r\n    if (data.ReactSelect !== null && data.reactFlatpickr !== null && data.phoneNumber.length) {\r\n      toast.success(\r\n        <Fragment>\r\n          <div className='toastify-header'>\r\n            <div className='title-wrapper'>\r\n              <Avatar size='sm' color='success' icon={<Check size={12} />} />\r\n              <h6 className='toast-title'>Form Submitted!</h6>\r\n            </div>\r\n          </div>\r\n          <div className='toastify-body'>\r\n            <ul className='list-unstyled mb-0'>\r\n              <li>\r\n                <strong>React Select:</strong>: {data.ReactSelect.value}\r\n              </li>\r\n              <li>\r\n                <strong>Flatpickr</strong>: {String(new Date(data.reactFlatpickr[0]))}\r\n              </li>\r\n              <li>\r\n                <strong>Input Mask</strong>: {data.phoneNumber}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Fragment>,\r\n        { icon: false, hideProgressBar: true }\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    reset({\r\n      phoneNumber: '',\r\n      ReactSelect: '',\r\n      reactFlatpickr: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Third Party Components</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='react-select'>\r\n              React Select\r\n            </Label>\r\n            <Controller\r\n              id='react-select'\r\n              control={control}\r\n              name='ReactSelect'\r\n              render={({ field }) => (\r\n                <Select\r\n                  isClearable\r\n                  options={colourOptions}\r\n                  classNamePrefix='select'\r\n                  theme={selectThemeColors}\r\n                  className={classnames('react-select', { 'is-invalid': data !== null && data.ReactSelect === null })}\r\n                  {...field}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='react-flatpickr'>\r\n              React Flatpickr\r\n            </Label>\r\n            <Controller\r\n              control={control}\r\n              id='react-flatpickr'\r\n              name='reactFlatpickr'\r\n              render={({ field }) => (\r\n                <Flatpickr\r\n                  {...field}\r\n                  className={classnames('form-control', {\r\n                    'is-invalid': data !== null && data.reactFlatpickr === null\r\n                  })}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='phone-number'>\r\n              Input Mask\r\n            </Label>\r\n            <InputGroup className='input-group-merge'>\r\n              <InputGroupText\r\n                className={classnames({\r\n                  'is-invalid': data !== null && (data.phoneNumber === null || !data.phoneNumber.length)\r\n                })}\r\n              >\r\n                US (+1)\r\n              </InputGroupText>\r\n              <Controller\r\n                id='phone-number'\r\n                name='phoneNumber'\r\n                control={control}\r\n                placeholder='1 234 567 8900'\r\n                render={({ field }) => (\r\n                  <Cleave\r\n                    {...field}\r\n                    className={classnames('form-control', {\r\n                      'is-invalid': data !== null && (data.phoneNumber === null || !data.phoneNumber.length)\r\n                    })}\r\n                    options={{ phone: true, phoneRegionCode: 'US' }}\r\n                  />\r\n                )}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n          <div className='d-flex'>\r\n            <Button className='me-1' color='primary' type='submit'>\r\n              Submit\r\n            </Button>\r\n            <Button outline color='secondary' type='reset' onClick={handleReset}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ValidationThirdPartyComponents\r\n"]},"metadata":{},"sourceType":"module"}