{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar sha_js_1 = require(\"sha.js\");\n\nfunction hashSha256(input) {\n  var hashFunction = new sha_js_1.sha256();\n  return hashFunction.update(input).digest();\n}\n\nexports.hashSha256 = hashSha256;\n\nfunction hashSha256Async(input) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var isSubtleCryptoAvailable, buffer, hash, nodeCrypto;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n\n            if (!isSubtleCryptoAvailable) {\n              _context.next = 10;\n              break;\n            }\n\n            // Use the W3C Web Crypto API if available (running in a web browser).\n            buffer = typeof input === 'string' ? Buffer.from(input) : input;\n            _context.next = 6;\n            return crypto.subtle.digest('SHA-256', buffer);\n\n          case 6:\n            hash = _context.sent;\n            return _context.abrupt(\"return\", Buffer.from(hash));\n\n          case 10:\n            // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n            nodeCrypto = require('crypto');\n\n            if (nodeCrypto.createHash) {\n              _context.next = 13;\n              break;\n            }\n\n            throw new Error('`crypto` module does not contain `createHash`');\n\n          case 13:\n            return _context.abrupt(\"return\", Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest()));\n\n          case 14:\n            _context.next = 21;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' + 'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' + 'Falling back to JS implementation.');\n            return _context.abrupt(\"return\", Promise.resolve(hashSha256(input)));\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 16]]);\n  }));\n}\n\nexports.hashSha256Async = hashSha256Async;","map":{"version":3,"sources":["cryptoClients/sha256.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,SAAgB,UAAhB,CAA2B,KAA3B,EAAiD;AAC7C,MAAM,YAAY,GAAG,IAAI,QAAA,CAAA,MAAJ,EAArB;AACA,SAAO,YAAY,CAAC,MAAb,CAAoB,KAApB,EAA2B,MAA3B,EAAP;AACH;;AAHD,OAAA,CAAA,UAAA,GAAA,UAAA;;AAKA,SAAsB,eAAtB,CAAsC,KAAtC,EAA4D;;;;;;;;AAE9C,YAAA,uB,GAA0B,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,MAAM,CAAC,MAAd,KAAyB,W;;iBACtF,uB;;;;;AACA;AACM,YAAA,M,GAAS,OAAO,KAAP,KAAiB,QAAjB,GAA4B,MAAM,CAAC,IAAP,CAAY,KAAZ,CAA5B,GAAiD,K;;AACnD,mBAAM,MAAM,CAAC,MAAP,CAAc,MAAd,CAAqB,SAArB,EAAgC,MAAhC,CAAN;;;AAAP,YAAA,I;6CACC,MAAM,CAAC,IAAP,CAAY,IAAZ,C;;;AAEP;AACM,YAAA,U,GAAa,OAAO,CAAC,QAAD,C;;gBACrB,UAAU,CAAC,U;;;;;kBACN,IAAI,KAAJ,CAAU,+CAAV,C;;;6CAEH,OAAO,CAAC,OAAR,CAAgB,UAAU,CAAC,UAAX,CAAsB,QAAtB,EAAgC,MAAhC,CAAuC,KAAvC,EAA8C,MAA9C,EAAhB,C;;;;;;;;;AAGX,YAAA,OAAO,CAAC,GAAR;AACA,YAAA,OAAO,CAAC,GAAR,CACI,8EACA,6EADA,GAEA,oCAHJ;6CAIO,OAAO,CAAC,OAAR,CAAgB,UAAU,CAAC,KAAD,CAA1B,C;;;;;;;;;AAEd;;AAxBD,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"./","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sha_js_1 = require(\"sha.js\");\nfunction hashSha256(input) {\n    const hashFunction = new sha_js_1.sha256();\n    return hashFunction.update(input).digest();\n}\nexports.hashSha256 = hashSha256;\nfunction hashSha256Async(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n            if (isSubtleCryptoAvailable) {\n                // Use the W3C Web Crypto API if available (running in a web browser).\n                const buffer = typeof input === 'string' ? Buffer.from(input) : input;\n                const hash = yield crypto.subtle.digest('SHA-256', buffer);\n                return Buffer.from(hash);\n            }\n            else {\n                // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n                const nodeCrypto = require('crypto');\n                if (!nodeCrypto.createHash) {\n                    throw new Error('`crypto` module does not contain `createHash`');\n                }\n                return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n            }\n        }\n        catch (error) {\n            console.log(error);\n            console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' +\n                'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' +\n                'Falling back to JS implementation.');\n            return Promise.resolve(hashSha256(input));\n        }\n    });\n}\nexports.hashSha256Async = hashSha256Async;\n//# sourceMappingURL=sha256.js.map"]},"metadata":{},"sourceType":"script"}