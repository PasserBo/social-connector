{"ast":null,"code":"import _inherits from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { SessionData } from './sessionData';\nimport { LOCALSTORAGE_SESSION_KEY } from './constants';\nimport { NoSessionDataError } from '@stacks/common';\nexport var SessionDataStore = /*#__PURE__*/function () {\n  function SessionDataStore(sessionOptions) {\n    _classCallCheck(this, SessionDataStore);\n\n    if (sessionOptions) {\n      var newSessionData = new SessionData(sessionOptions);\n      this.setSessionData(newSessionData);\n    }\n  }\n\n  _createClass(SessionDataStore, [{\n    key: \"getSessionData\",\n    value: function getSessionData() {\n      throw new Error('Abstract class');\n    }\n  }, {\n    key: \"setSessionData\",\n    value: function setSessionData(_session) {\n      throw new Error('Abstract class');\n    }\n  }, {\n    key: \"deleteSessionData\",\n    value: function deleteSessionData() {\n      throw new Error('Abstract class');\n    }\n  }]);\n\n  return SessionDataStore;\n}();\nexport var InstanceDataStore = /*#__PURE__*/function (_SessionDataStore) {\n  _inherits(InstanceDataStore, _SessionDataStore);\n\n  var _super = _createSuper(InstanceDataStore);\n\n  function InstanceDataStore(sessionOptions) {\n    var _this;\n\n    _classCallCheck(this, InstanceDataStore);\n\n    _this = _super.call(this, sessionOptions);\n\n    if (!_this.sessionData) {\n      _this.setSessionData(new SessionData({}));\n    }\n\n    return _this;\n  }\n\n  _createClass(InstanceDataStore, [{\n    key: \"getSessionData\",\n    value: function getSessionData() {\n      if (!this.sessionData) {\n        throw new NoSessionDataError('No session data was found.');\n      }\n\n      return this.sessionData;\n    }\n  }, {\n    key: \"setSessionData\",\n    value: function setSessionData(session) {\n      this.sessionData = session;\n      return true;\n    }\n  }, {\n    key: \"deleteSessionData\",\n    value: function deleteSessionData() {\n      this.setSessionData(new SessionData({}));\n      return true;\n    }\n  }]);\n\n  return InstanceDataStore;\n}(SessionDataStore);\nexport var LocalStorageStore = /*#__PURE__*/function (_SessionDataStore2) {\n  _inherits(LocalStorageStore, _SessionDataStore2);\n\n  var _super2 = _createSuper(LocalStorageStore);\n\n  function LocalStorageStore(sessionOptions) {\n    var _this2;\n\n    _classCallCheck(this, LocalStorageStore);\n\n    _this2 = _super2.call(this, sessionOptions);\n\n    if (sessionOptions && sessionOptions.storeOptions && sessionOptions.storeOptions.localStorageKey && typeof sessionOptions.storeOptions.localStorageKey === 'string') {\n      _this2.key = sessionOptions.storeOptions.localStorageKey;\n    } else {\n      _this2.key = LOCALSTORAGE_SESSION_KEY;\n    }\n\n    var data = localStorage.getItem(_this2.key);\n\n    if (!data) {\n      var sessionData = new SessionData({});\n\n      _this2.setSessionData(sessionData);\n    }\n\n    return _this2;\n  }\n\n  _createClass(LocalStorageStore, [{\n    key: \"getSessionData\",\n    value: function getSessionData() {\n      var data = localStorage.getItem(this.key);\n\n      if (!data) {\n        throw new NoSessionDataError('No session data was found in localStorage');\n      }\n\n      var dataJSON = JSON.parse(data);\n      return SessionData.fromJSON(dataJSON);\n    }\n  }, {\n    key: \"setSessionData\",\n    value: function setSessionData(session) {\n      localStorage.setItem(this.key, session.toString());\n      return true;\n    }\n  }, {\n    key: \"deleteSessionData\",\n    value: function deleteSessionData() {\n      localStorage.removeItem(this.key);\n      this.setSessionData(new SessionData({}));\n      return true;\n    }\n  }]);\n\n  return LocalStorageStore;\n}(SessionDataStore);","map":{"version":3,"sources":["../../src/sessionStore.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { SessionData } from './sessionData';\nimport { LOCALSTORAGE_SESSION_KEY } from './constants';\nimport { NoSessionDataError } from '@stacks/common';\nexport class SessionDataStore {\n    constructor(sessionOptions) {\n        if (sessionOptions) {\n            const newSessionData = new SessionData(sessionOptions);\n            this.setSessionData(newSessionData);\n        }\n    }\n    getSessionData() {\n        throw new Error('Abstract class');\n    }\n    setSessionData(_session) {\n        throw new Error('Abstract class');\n    }\n    deleteSessionData() {\n        throw new Error('Abstract class');\n    }\n}\nexport class InstanceDataStore extends SessionDataStore {\n    constructor(sessionOptions) {\n        super(sessionOptions);\n        if (!this.sessionData) {\n            this.setSessionData(new SessionData({}));\n        }\n    }\n    getSessionData() {\n        if (!this.sessionData) {\n            throw new NoSessionDataError('No session data was found.');\n        }\n        return this.sessionData;\n    }\n    setSessionData(session) {\n        this.sessionData = session;\n        return true;\n    }\n    deleteSessionData() {\n        this.setSessionData(new SessionData({}));\n        return true;\n    }\n}\nexport class LocalStorageStore extends SessionDataStore {\n    constructor(sessionOptions) {\n        super(sessionOptions);\n        if (sessionOptions &&\n            sessionOptions.storeOptions &&\n            sessionOptions.storeOptions.localStorageKey &&\n            typeof sessionOptions.storeOptions.localStorageKey === 'string') {\n            this.key = sessionOptions.storeOptions.localStorageKey;\n        }\n        else {\n            this.key = LOCALSTORAGE_SESSION_KEY;\n        }\n        const data = localStorage.getItem(this.key);\n        if (!data) {\n            const sessionData = new SessionData({});\n            this.setSessionData(sessionData);\n        }\n    }\n    getSessionData() {\n        const data = localStorage.getItem(this.key);\n        if (!data) {\n            throw new NoSessionDataError('No session data was found in localStorage');\n        }\n        const dataJSON = JSON.parse(data);\n        return SessionData.fromJSON(dataJSON);\n    }\n    setSessionData(session) {\n        localStorage.setItem(this.key, session.toString());\n        return true;\n    }\n    deleteSessionData() {\n        localStorage.removeItem(this.key);\n        this.setSessionData(new SessionData({}));\n        return true;\n    }\n}\n//# sourceMappingURL=sessionStore.js.map"]},"metadata":{},"sourceType":"module"}