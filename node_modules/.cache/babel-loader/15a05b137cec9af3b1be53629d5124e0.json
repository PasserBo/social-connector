{"ast":null,"code":"// ** React Imports\nimport{forwardRef}from'react';// ** Third Party Components\nimport classnames from'classnames';// ** Reactstrap Imports\nimport{Badge}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Avatar=/*#__PURE__*/forwardRef((props,ref)=>{// ** Props\nconst{img,size,icon,color,status,badgeUp,content,tag:Tag,initials,imgWidth,className,badgeText,imgHeight,badgeColor,imgClassName,contentStyles,...rest}=props;// ** Function to extract initials from content\nconst getInitials=str=>{const results=[];const wordArray=str.split(' ');wordArray.forEach(e=>{results.push(e[0]);});return results.join('');};return/*#__PURE__*/_jsxs(Tag,{className:classnames('avatar',{[className]:className,[\"bg-\".concat(color)]:color,[\"avatar-\".concat(size)]:size}),ref:ref,...rest,children:[img===false||img===undefined?/*#__PURE__*/_jsxs(\"span\",{className:classnames('avatar-content',{'position-relative':badgeUp}),style:contentStyles,children:[initials?getInitials(content):content,icon?icon:null,badgeUp?/*#__PURE__*/_jsx(Badge,{color:badgeColor?badgeColor:'primary',className:\"badge-sm badge-up\",pill:true,children:badgeText?badgeText:'0'}):null]}):/*#__PURE__*/_jsx(\"img\",{className:classnames({[imgClassName]:imgClassName}),src:img,alt:\"avatarImg\",height:imgHeight&&!size?imgHeight:32,width:imgWidth&&!size?imgWidth:32}),status?/*#__PURE__*/_jsx(\"span\",{className:classnames({[\"avatar-status-\".concat(status)]:status,[\"avatar-status-\".concat(size)]:size})}):null]});});export default Avatar;// ** PropTypes\n// ** Default Props\nAvatar.defaultProps={tag:'div'};","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/@core/components/avatar/index.js"],"names":["forwardRef","classnames","Badge","Avatar","props","ref","img","size","icon","color","status","badgeUp","content","tag","Tag","initials","imgWidth","className","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","getInitials","str","results","wordArray","split","forEach","e","push","join","undefined","defaultProps"],"mappings":"AAAA;AACA,OAASA,UAAT,KAA2B,OAA3B,CAEA;AAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;AACA,OAASC,KAAT,KAAsB,YAAtB,C,wFAEA,KAAMC,CAAAA,MAAM,cAAGH,UAAU,CAAC,CAACI,KAAD,CAAQC,GAAR,GAAgB,CACxC;AACA,KAAM,CACJC,GADI,CAEJC,IAFI,CAGJC,IAHI,CAIJC,KAJI,CAKJC,MALI,CAMJC,OANI,CAOJC,OAPI,CAQJC,GAAG,CAAEC,GARD,CASJC,QATI,CAUJC,QAVI,CAWJC,SAXI,CAYJC,SAZI,CAaJC,SAbI,CAcJC,UAdI,CAeJC,YAfI,CAgBJC,aAhBI,CAiBJ,GAAGC,IAjBC,EAkBFnB,KAlBJ,CAoBA;AACA,KAAMoB,CAAAA,WAAW,CAAGC,GAAG,EAAI,CACzB,KAAMC,CAAAA,OAAO,CAAG,EAAhB,CACA,KAAMC,CAAAA,SAAS,CAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAlB,CACAD,SAAS,CAACE,OAAV,CAAkBC,CAAC,EAAI,CACrBJ,OAAO,CAACK,IAAR,CAAaD,CAAC,CAAC,CAAD,CAAd,EACD,CAFD,EAGA,MAAOJ,CAAAA,OAAO,CAACM,IAAR,CAAa,EAAb,CAAP,CACD,CAPD,CASA,mBACE,MAAC,GAAD,EACE,SAAS,CAAE/B,UAAU,CAAC,QAAD,CAAW,CAC9B,CAACgB,SAAD,EAAaA,SADiB,CAE9B,cAAOR,KAAP,GAAiBA,KAFa,CAG9B,kBAAWF,IAAX,GAAoBA,IAHU,CAAX,CADvB,CAME,GAAG,CAAEF,GANP,IAOMkB,IAPN,WASGjB,GAAG,GAAK,KAAR,EAAiBA,GAAG,GAAK2B,SAAzB,cACC,cACE,SAAS,CAAEhC,UAAU,CAAC,gBAAD,CAAmB,CACtC,oBAAqBU,OADiB,CAAnB,CADvB,CAIE,KAAK,CAAEW,aAJT,WAMGP,QAAQ,CAAGS,WAAW,CAACZ,OAAD,CAAd,CAA0BA,OANrC,CAQGJ,IAAI,CAAGA,IAAH,CAAU,IARjB,CASGG,OAAO,cACN,KAAC,KAAD,EAAO,KAAK,CAAES,UAAU,CAAGA,UAAH,CAAgB,SAAxC,CAAmD,SAAS,CAAC,mBAA7D,CAAiF,IAAI,KAArF,UACGF,SAAS,CAAGA,SAAH,CAAe,GAD3B,EADM,CAIJ,IAbN,GADD,cAiBC,YACE,SAAS,CAAEjB,UAAU,CAAC,CACpB,CAACoB,YAAD,EAAgBA,YADI,CAAD,CADvB,CAIE,GAAG,CAAEf,GAJP,CAKE,GAAG,CAAC,WALN,CAME,MAAM,CAAEa,SAAS,EAAI,CAACZ,IAAd,CAAqBY,SAArB,CAAiC,EAN3C,CAOE,KAAK,CAAEH,QAAQ,EAAI,CAACT,IAAb,CAAoBS,QAApB,CAA+B,EAPxC,EA1BJ,CAoCGN,MAAM,cACL,aACE,SAAS,CAAET,UAAU,CAAC,CACpB,yBAAkBS,MAAlB,GAA6BA,MADT,CAEpB,yBAAkBH,IAAlB,GAA2BA,IAFP,CAAD,CADvB,EADK,CAOH,IA3CN,GADF,CA+CD,CA/EwB,CAAzB,CAiFA,cAAeJ,CAAAA,MAAf,CAEA;AA4DA;AACAA,MAAM,CAAC+B,YAAP,CAAsB,CACpBrB,GAAG,CAAE,KADe,CAAtB","sourcesContent":["// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    img,\r\n    size,\r\n    icon,\r\n    color,\r\n    status,\r\n    badgeUp,\r\n    content,\r\n    tag: Tag,\r\n    initials,\r\n    imgWidth,\r\n    className,\r\n    badgeText,\r\n    imgHeight,\r\n    badgeColor,\r\n    imgClassName,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  icon: Proptypes.node,\r\n  src: Proptypes.string,\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  badgeText: Proptypes.string,\r\n  className: Proptypes.string,\r\n  imgClassName: Proptypes.string,\r\n  contentStyles: Proptypes.object,\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}