{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/utility/context/Internationalization.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, createContext } from 'react'; // ** Intl Provider Import\n\nimport { IntlProvider } from 'react-intl'; // ** Core Language Data\n\nimport { messagesEn, userMessagesEn } from '../../assets/data/locales/en.json';\nimport { messagesEs, userMessagesEs } from '../../assets/data/locales/es.json';\nimport { messagesFr, userMessagesFr } from '../../assets/data/locales/fr.json'; // ** Menu msg obj\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menuMessages = {\n  en: { ...messagesEn,\n    ...userMessagesEn\n  },\n  es: { ...messagesEs,\n    ...userMessagesEs\n  },\n  fr: { ...messagesFr,\n    ...userMessagesFr\n  }\n}; // ** Create Context\n\nconst Context = /*#__PURE__*/createContext();\n\nconst IntlProviderWrapper = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // ** States\n  const [locale, setLocale] = useState('en');\n  const [messages, setMessages] = useState(menuMessages['en']); // ** Switches Language\n\n  const switchLanguage = lang => {\n    setLocale(lang);\n    setMessages(menuMessages[lang]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      locale,\n      switchLanguage\n    },\n    children: /*#__PURE__*/_jsxDEV(IntlProvider, {\n      locale: locale,\n      messages: messages,\n      defaultLocale: \"en\",\n      children: children\n    }, locale, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IntlProviderWrapper, \"TKt8ZIK4MNlnlYDCbfZq/lCylbU=\");\n\n_c = IntlProviderWrapper;\nexport { IntlProviderWrapper, Context as IntlContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"IntlProviderWrapper\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/utility/context/Internationalization.js"],"names":["useState","createContext","IntlProvider","messagesEn","userMessagesEn","messagesEs","userMessagesEs","messagesFr","userMessagesFr","menuMessages","en","es","fr","Context","IntlProviderWrapper","children","locale","setLocale","messages","setMessages","switchLanguage","lang","IntlContext"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC,C,CAEA;;AACA,SAASC,YAAT,QAA6B,YAA7B,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,mCAA3C;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,mCAA3C;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,mCAA3C,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,EAAE,GAAGP,UAAL;AAAiB,OAAGC;AAApB,GADe;AAEnBO,EAAAA,EAAE,EAAE,EAAE,GAAGN,UAAL;AAAiB,OAAGC;AAApB,GAFe;AAGnBM,EAAAA,EAAE,EAAE,EAAE,GAAGL,UAAL;AAAiB,OAAGC;AAApB;AAHe,CAArB,C,CAMA;;AACA,MAAMK,OAAO,gBAAGZ,aAAa,EAA7B;;AAEA,MAAMa,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACS,YAAY,CAAC,IAAD,CAAb,CAAxC,CAH4C,CAK5C;;AACA,QAAMW,cAAc,GAAGC,IAAI,IAAI;AAC7BJ,IAAAA,SAAS,CAACI,IAAD,CAAT;AACAF,IAAAA,WAAW,CAACV,YAAY,CAACY,IAAD,CAAb,CAAX;AACD,GAHD;;AAKA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEL,MAAAA,MAAF;AAAUI,MAAAA;AAAV,KAAzB;AAAA,2BACE,QAAC,YAAD;AAA2B,MAAA,MAAM,EAAEJ,MAAnC;AAA2C,MAAA,QAAQ,EAAEE,QAArD;AAA+D,MAAA,aAAa,EAAC,IAA7E;AAAA,gBACGH;AADH,OAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;GAAMF,mB;;KAAAA,mB;AAoBN,SAASA,mBAAT,EAA8BD,OAAO,IAAIS,WAAzC","sourcesContent":["// ** React Imports\nimport { useState, createContext } from 'react'\n\n// ** Intl Provider Import\nimport { IntlProvider } from 'react-intl'\n\n// ** Core Language Data\nimport { messagesEn, userMessagesEn } from '../../assets/data/locales/en.json'\nimport { messagesEs, userMessagesEs } from '../../assets/data/locales/es.json'\nimport { messagesFr, userMessagesFr } from '../../assets/data/locales/fr.json'\n \n// ** Menu msg obj\nconst menuMessages = {\n  en: { ...messagesEn, ...userMessagesEn },\n  es: { ...messagesEs, ...userMessagesEs },\n  fr: { ...messagesFr, ...userMessagesFr }\n}\n\n// ** Create Context\nconst Context = createContext()\n\nconst IntlProviderWrapper = ({ children }) => {\n  // ** States\n  const [locale, setLocale] = useState('en')\n  const [messages, setMessages] = useState(menuMessages['en'])\n\n  // ** Switches Language\n  const switchLanguage = lang => {\n    setLocale(lang)\n    setMessages(menuMessages[lang])\n  }\n\n  return (\n    <Context.Provider value={{ locale, switchLanguage }}>\n      <IntlProvider key={locale} locale={locale} messages={messages} defaultLocale='en'>\n        {children}\n      </IntlProvider>\n    </Context.Provider>\n  )\n}\n\nexport { IntlProviderWrapper, Context as IntlContext }"]},"metadata":{},"sourceType":"module"}