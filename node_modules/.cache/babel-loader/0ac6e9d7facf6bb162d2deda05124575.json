{"ast":null,"code":"import mock from '../mock'; // ** Utils\n\nimport { paginateArray } from '../utils';\nconst data = [{\n  responsive_id: '',\n  id: 1,\n  avatar: '10.jpg',\n  full_name: \"Digital Spectacular in the exact center of Times Square, lowest level to the ground. Due to the volume of demand for this sign, expect moderation to take 4-5 business days.\",\n  post: 'Y',\n  email: 'kocrevy0@thetimes.co.uk',\n  city: 'New York',\n  start_date: '09/23/2016',\n  salary: '864,384',\n  age: '61',\n  experience: '828 wide x 1260 high pixels',\n  status: 2\n}, {\n  responsive_id: '',\n  id: 100,\n  avatar: '',\n  full_name: 'Glyn Giacoppo',\n  post: 'Software Test Engineer',\n  email: 'ggiacoppo2r@apache.org',\n  city: 'Butha-Buthe',\n  start_date: '04/15/2017',\n  salary: '$24973.48',\n  age: '41',\n  experience: '7 Years',\n  status: 2\n}];\nmock.onGet('/api/datatables/initial-data').reply(() => {\n  return [200, data];\n});\nmock.onGet('/api/datatables/data').reply(config => {\n  // eslint-disable-next-line object-curly-newline\n  const {\n    q = '',\n    perPage = 10,\n    page = 1\n  } = config;\n  /* eslint-enable */\n\n  const queryLowered = q.toLowerCase();\n  const filteredData = data.filter(item =>\n  /* eslint-disable operator-linebreak, implicit-arrow-linebreak */\n  item.full_name.toLowerCase().includes(queryLowered) || item.post.toLowerCase().includes(queryLowered) || item.email.toLowerCase().includes(queryLowered) || item.age.toLowerCase().includes(queryLowered) || item.salary.toLowerCase().includes(queryLowered) || item.start_date.toLowerCase().includes(queryLowered));\n  /* eslint-enable  */\n\n  return [200, {\n    allData: data,\n    invoices: paginateArray(filteredData, perPage, page),\n    total: filteredData.length\n  }];\n});","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/@fake-db/tables/datatables.js"],"names":["mock","paginateArray","data","responsive_id","id","avatar","full_name","post","email","city","start_date","salary","age","experience","status","onGet","reply","config","q","perPage","page","queryLowered","toLowerCase","filteredData","filter","item","includes","allData","invoices","total","length"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,UAA9B;AAEA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,aAAa,EAAE,EADjB;AAEEC,EAAAA,EAAE,EAAE,CAFN;AAGEC,EAAAA,MAAM,EAAE,QAHV;AAIEC,EAAAA,SAAS,EAAE,8KAJb;AAKEC,EAAAA,IAAI,EAAE,GALR;AAMEC,EAAAA,KAAK,EAAE,yBANT;AAOEC,EAAAA,IAAI,EAAE,UAPR;AAQEC,EAAAA,UAAU,EAAE,YARd;AASEC,EAAAA,MAAM,EAAE,SATV;AAUEC,EAAAA,GAAG,EAAE,IAVP;AAWEC,EAAAA,UAAU,EAAE,6BAXd;AAYEC,EAAAA,MAAM,EAAE;AAZV,CADW,EAgBX;AACEX,EAAAA,aAAa,EAAE,EADjB;AAEEC,EAAAA,EAAE,EAAE,GAFN;AAGEC,EAAAA,MAAM,EAAE,EAHV;AAIEC,EAAAA,SAAS,EAAE,eAJb;AAKEC,EAAAA,IAAI,EAAE,wBALR;AAMEC,EAAAA,KAAK,EAAE,wBANT;AAOEC,EAAAA,IAAI,EAAE,aAPR;AAQEC,EAAAA,UAAU,EAAE,YARd;AASEC,EAAAA,MAAM,EAAE,WATV;AAUEC,EAAAA,GAAG,EAAE,IAVP;AAWEC,EAAAA,UAAU,EAAE,SAXd;AAYEC,EAAAA,MAAM,EAAE;AAZV,CAhBW,CAAb;AAgCAd,IAAI,CAACe,KAAL,CAAW,8BAAX,EAA2CC,KAA3C,CAAiD,MAAM;AACrD,SAAO,CAAC,GAAD,EAAMd,IAAN,CAAP;AACD,CAFD;AAIAF,IAAI,CAACe,KAAL,CAAW,sBAAX,EAAmCC,KAAnC,CAAyCC,MAAM,IAAI;AACjD;AACA,QAAM;AAAEC,IAAAA,CAAC,GAAG,EAAN;AAAUC,IAAAA,OAAO,GAAG,EAApB;AAAwBC,IAAAA,IAAI,GAAG;AAA/B,MAAqCH,MAA3C;AACA;;AAEA,QAAMI,YAAY,GAAGH,CAAC,CAACI,WAAF,EAArB;AACA,QAAMC,YAAY,GAAGrB,IAAI,CAACsB,MAAL,CACnBC,IAAI;AACF;AACAA,EAAAA,IAAI,CAACnB,SAAL,CAAegB,WAAf,GAA6BI,QAA7B,CAAsCL,YAAtC,KACAI,IAAI,CAAClB,IAAL,CAAUe,WAAV,GAAwBI,QAAxB,CAAiCL,YAAjC,CADA,IAEAI,IAAI,CAACjB,KAAL,CAAWc,WAAX,GAAyBI,QAAzB,CAAkCL,YAAlC,CAFA,IAGAI,IAAI,CAACb,GAAL,CAASU,WAAT,GAAuBI,QAAvB,CAAgCL,YAAhC,CAHA,IAIAI,IAAI,CAACd,MAAL,CAAYW,WAAZ,GAA0BI,QAA1B,CAAmCL,YAAnC,CAJA,IAKAI,IAAI,CAACf,UAAL,CAAgBY,WAAhB,GAA8BI,QAA9B,CAAuCL,YAAvC,CARiB,CAArB;AAUA;;AAEA,SAAO,CACL,GADK,EAEL;AACEM,IAAAA,OAAO,EAAEzB,IADX;AAEE0B,IAAAA,QAAQ,EAAE3B,aAAa,CAACsB,YAAD,EAAeJ,OAAf,EAAwBC,IAAxB,CAFzB;AAGES,IAAAA,KAAK,EAAEN,YAAY,CAACO;AAHtB,GAFK,CAAP;AAQD,CA1BD","sourcesContent":["import mock from '../mock'\r\n\r\n// ** Utils\r\nimport { paginateArray } from '../utils'\r\n\r\nconst data = [\r\n  {\r\n    responsive_id: '',\r\n    id: 1,\r\n    avatar: '10.jpg',\r\n    full_name: \"Digital Spectacular in the exact center of Times Square, lowest level to the ground. Due to the volume of demand for this sign, expect moderation to take 4-5 business days.\",\r\n    post: 'Y',\r\n    email: 'kocrevy0@thetimes.co.uk',\r\n    city: 'New York',\r\n    start_date: '09/23/2016',\r\n    salary: '864,384',\r\n    age: '61',\r\n    experience: '828 wide x 1260 high pixels',\r\n    status: 2\r\n  },\r\n  \r\n  {\r\n    responsive_id: '',\r\n    id: 100,\r\n    avatar: '',\r\n    full_name: 'Glyn Giacoppo',\r\n    post: 'Software Test Engineer',\r\n    email: 'ggiacoppo2r@apache.org',\r\n    city: 'Butha-Buthe',\r\n    start_date: '04/15/2017',\r\n    salary: '$24973.48',\r\n    age: '41',\r\n    experience: '7 Years',\r\n    status: 2\r\n  }\r\n]\r\n\r\nmock.onGet('/api/datatables/initial-data').reply(() => {\r\n  return [200, data]\r\n})\r\n\r\nmock.onGet('/api/datatables/data').reply(config => {\r\n  // eslint-disable-next-line object-curly-newline\r\n  const { q = '', perPage = 10, page = 1 } = config\r\n  /* eslint-enable */\r\n\r\n  const queryLowered = q.toLowerCase()\r\n  const filteredData = data.filter(\r\n    item =>\r\n      /* eslint-disable operator-linebreak, implicit-arrow-linebreak */\r\n      item.full_name.toLowerCase().includes(queryLowered) ||\r\n      item.post.toLowerCase().includes(queryLowered) ||\r\n      item.email.toLowerCase().includes(queryLowered) ||\r\n      item.age.toLowerCase().includes(queryLowered) ||\r\n      item.salary.toLowerCase().includes(queryLowered) ||\r\n      item.start_date.toLowerCase().includes(queryLowered)\r\n  )\r\n  /* eslint-enable  */\r\n\r\n  return [\r\n    200,\r\n    {\r\n      allData: data,\r\n      invoices: paginateArray(filteredData, perPage, page),\r\n      total: filteredData.length\r\n    }\r\n  ]\r\n})\r\n"]},"metadata":{},"sourceType":"module"}