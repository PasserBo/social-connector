{"ast":null,"code":"// ** React Imports\nimport{useEffect,useState,Fragment,forwardRef}from'react';// ** Third Party Components\nimport Stepper from'bs-stepper';import classnames from'classnames';import{ChevronRight}from'react-feather';// ** Styles\nimport'bs-stepper/dist/css/bs-stepper.min.css';import'../../../@core/scss/base/plugins/forms/form-wizard.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Wizard=/*#__PURE__*/forwardRef((props,ref)=>{// ** Props\nconst{type,className,contentClassName,headerClassName,steps,separator,options,instance}=props;// ** State\nconst[activeIndex,setActiveIndex]=useState(0);// ** Vars\nlet stepper=null;// ** Step change listener on mount\nuseEffect(()=>{stepper=new Stepper(ref.current,options);ref.current.addEventListener('shown.bs-stepper',function(event){setActiveIndex(event.detail.indexStep);});if(instance){instance(stepper);}},[]);// ** Renders Wizard Header\nconst renderHeader=()=>{return steps.map((step,index)=>{return/*#__PURE__*/_jsxs(Fragment,{children:[index!==0&&index!==steps.length?/*#__PURE__*/_jsx(\"div\",{className:\"line\",children:separator}):null,/*#__PURE__*/_jsx(\"div\",{className:classnames('step',{crossed:activeIndex>index,active:index===activeIndex}),\"data-target\":\"#\".concat(step.id),children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"step-trigger\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"bs-stepper-box\",children:step.icon?step.icon:index+1}),/*#__PURE__*/_jsxs(\"span\",{className:\"bs-stepper-label\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"bs-stepper-title\",children:step.title}),step.subtitle?/*#__PURE__*/_jsx(\"span\",{className:\"bs-stepper-subtitle\",children:step.subtitle}):null]})]})})]},step.id);});};// ** Renders Wizard Content\nconst renderContent=()=>{return steps.map((step,index)=>{return/*#__PURE__*/_jsx(\"div\",{className:classnames('content',{[contentClassName]:contentClassName,'active dstepper-block':activeIndex===index}),id:step.id,children:step.content},step.id);});};return/*#__PURE__*/_jsxs(\"div\",{ref:ref,className:classnames('bs-stepper',{[className]:className,vertical:type==='vertical','vertical wizard-modern':type==='modern-vertical','wizard-modern':type==='modern-horizontal'}),children:[/*#__PURE__*/_jsx(\"div\",{className:classnames('bs-stepper-header',{[headerClassName]:headerClassName}),children:renderHeader()}),/*#__PURE__*/_jsx(\"div\",{className:\"bs-stepper-content\",children:renderContent()})]});});export default Wizard;// ** Default Props\nWizard.defaultProps={options:{},type:'horizontal',separator:/*#__PURE__*/_jsx(ChevronRight,{size:17})};// ** PropTypes","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/@core/components/wizard/index.js"],"names":["useEffect","useState","Fragment","forwardRef","Stepper","classnames","ChevronRight","Wizard","props","ref","type","className","contentClassName","headerClassName","steps","separator","options","instance","activeIndex","setActiveIndex","stepper","current","addEventListener","event","detail","indexStep","renderHeader","map","step","index","length","crossed","active","id","icon","title","subtitle","renderContent","content","vertical","defaultProps"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Stepper from 'bs-stepper'\r\nimport classnames from 'classnames'\r\nimport { PropTypes } from 'prop-types'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n// ** Styles\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\r\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const { type, className, contentClassName, headerClassName, steps, separator, options, instance } = props\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n  // ** Vars\r\n  let stepper = null\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options)\r\n\r\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\r\n      setActiveIndex(event.detail.indexStep)\r\n    })\r\n\r\n    if (instance) {\r\n      instance(stepper)\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\r\n          <div\r\n            className={classnames('step', {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type='button' className='step-trigger'>\r\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\r\n              <span className='bs-stepper-label'>\r\n                <span className='bs-stepper-title'>{step.title}</span>\r\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames('content', {\r\n            [contentClassName]: contentClassName,\r\n            'active dstepper-block': activeIndex === index\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames('bs-stepper', {\r\n        [className]: className,\r\n        vertical: type === 'vertical',\r\n        'vertical wizard-modern': type === 'modern-vertical',\r\n        'wizard-modern': type === 'modern-horizontal'\r\n      })}\r\n    >\r\n      <div className={classnames('bs-stepper-header', { [headerClassName]: headerClassName })}>{renderHeader()}</div>\r\n      <div className='bs-stepper-content'>{renderContent()}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Wizard\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  options: {},\r\n  type: 'horizontal',\r\n  separator: <ChevronRight size={17} />\r\n}\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  headerClassName: PropTypes.string,\r\n  contentClassName: PropTypes.string,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired\r\n    })\r\n  ).isRequired\r\n}\r\n"]},"metadata":{},"sourceType":"module"}