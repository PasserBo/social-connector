{"ast":null,"code":"// ** React Imports\nimport{Fragment,useState}from'react';// ** Third Party Components\nimport{Check}from'react-feather';import{toast}from'react-toastify';import{CopyToClipboard}from'react-copy-to-clipboard';// ** Custom Components\nimport Avatar from'@components/avatar';import ExtensionsHeader from'@components/extensions-header';// ** Reactstrap Imports\nimport{Row,Col,Card,CardHeader,CardTitle,CardBody,Button,Input}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ToastSuccess=()=>/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"toastify-header pb-0\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"success\",icon:/*#__PURE__*/_jsx(Check,{})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title\",children:\"Copied To Clipboard !\"})]})})});const Clipboard=()=>{// ** State\nconst[value,setValue]=useState('Copy Me!');const[copied,setCopied]=useState(false);const handleCopy=_ref=>{let{target:{value}}=_ref;setValue(value);if(copied){setCopied(false);}};const onCopy=()=>{setCopied(true);toast.success(/*#__PURE__*/_jsx(ToastSuccess,{}),{icon:false,autoClose:3000,hideProgressBar:true,closeButton:false});};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(ExtensionsHeader,{title:\"React Copy To Clipboard\",subTitle:\"Copy to clipboard React component\",link:\"https://github.com/nkbt/react-copy-to-clipboard\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Clipboard\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xl:\"3\",md:\"4\",sm:\"6\",className:\"pe-sm-0 mb-md-0 mb-1\",children:/*#__PURE__*/_jsx(Input,{value:value,onChange:handleCopy})}),/*#__PURE__*/_jsx(Col,{md:\"2\",sm:\"12\",children:/*#__PURE__*/_jsx(CopyToClipboard,{onCopy:onCopy,text:value,children:/*#__PURE__*/_jsx(Button,{color:\"primary\",outline:true,children:\"Copy!\"})})})]})})]})})})]});};export default Clipboard;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/extensions/copy-to-clipboard/index.js"],"names":["Fragment","useState","Check","toast","CopyToClipboard","Avatar","ExtensionsHeader","Row","Col","Card","CardHeader","CardTitle","CardBody","Button","Input","ToastSuccess","Clipboard","value","setValue","copied","setCopied","handleCopy","target","onCopy","success","icon","autoClose","hideProgressBar","closeButton"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,QAAnB,KAAmC,OAAnC,CAEA;AACA,OAASC,KAAT,KAAsB,eAAtB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,eAAT,KAAgC,yBAAhC,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CAEA;AACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,UAAzB,CAAqCC,SAArC,CAAgDC,QAAhD,CAA0DC,MAA1D,CAAkEC,KAAlE,KAA+E,YAA/E,C,wFAEA,KAAMC,CAAAA,YAAY,CAAG,iBACnB,KAAC,QAAD,wBACE,YAAK,SAAS,CAAC,sBAAf,uBACE,aAAK,SAAS,CAAC,eAAf,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,KAAK,CAAC,SAAxB,CAAkC,IAAI,cAAE,KAAC,KAAD,IAAxC,EADF,cAEE,WAAI,SAAS,CAAC,aAAd,mCAFF,GADF,EADF,EADF,CAWA,KAAMC,CAAAA,SAAS,CAAG,IAAM,CACtB;AACA,KAAM,CAACC,KAAD,CAAQC,QAAR,EAAoBjB,QAAQ,CAAC,UAAD,CAAlC,CACA,KAAM,CAACkB,MAAD,CAASC,SAAT,EAAsBnB,QAAQ,CAAC,KAAD,CAApC,CAEA,KAAMoB,CAAAA,UAAU,CAAG,MAA2B,IAA1B,CAAEC,MAAM,CAAE,CAAEL,KAAF,CAAV,CAA0B,MAC5CC,QAAQ,CAACD,KAAD,CAAR,CACA,GAAIE,MAAJ,CAAY,CACVC,SAAS,CAAC,KAAD,CAAT,CACD,CACF,CALD,CAOA,KAAMG,CAAAA,MAAM,CAAG,IAAM,CACnBH,SAAS,CAAC,IAAD,CAAT,CACAjB,KAAK,CAACqB,OAAN,cAAc,KAAC,YAAD,IAAd,CAAgC,CAC9BC,IAAI,CAAE,KADwB,CAE9BC,SAAS,CAAE,IAFmB,CAG9BC,eAAe,CAAE,IAHa,CAI9BC,WAAW,CAAE,KAJiB,CAAhC,EAMD,CARD,CAUA,mBACE,MAAC,QAAD,yBACE,KAAC,gBAAD,EACE,KAAK,CAAC,yBADR,CAEE,QAAQ,CAAC,mCAFX,CAGE,IAAI,CAAC,iDAHP,EADF,cAME,KAAC,GAAD,wBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,yBACE,KAAC,UAAD,wBACE,KAAC,SAAD,EAAW,GAAG,CAAC,IAAf,uBADF,EADF,cAIE,KAAC,QAAD,wBACE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,GAAf,CAAmB,EAAE,CAAC,GAAtB,CAA0B,SAAS,CAAC,sBAApC,uBACE,KAAC,KAAD,EAAO,KAAK,CAAEX,KAAd,CAAqB,QAAQ,CAAEI,UAA/B,EADF,EADF,cAIE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,KAAC,eAAD,EAAiB,MAAM,CAAEE,MAAzB,CAAiC,IAAI,CAAEN,KAAvC,uBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,OAAO,KAA/B,mBADF,EADF,EAJF,GADF,EAJF,GADF,EADF,EANF,GADF,CAgCD,CAtDD,CAwDA,cAAeD,CAAAA,SAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport { Check } from 'react-feather'\r\nimport { toast } from 'react-toastify'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Input } from 'reactstrap'\r\n\r\nconst ToastSuccess = () => (\r\n  <Fragment>\r\n    <div className='toastify-header pb-0'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Check />} />\r\n        <h6 className='toast-title'>Copied To Clipboard !</h6>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Clipboard = () => {\r\n  // ** State\r\n  const [value, setValue] = useState('Copy Me!')\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  const handleCopy = ({ target: { value } }) => {\r\n    setValue(value)\r\n    if (copied) {\r\n      setCopied(false)\r\n    }\r\n  }\r\n\r\n  const onCopy = () => {\r\n    setCopied(true)\r\n    toast.success(<ToastSuccess />, {\r\n      icon: false,\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeButton: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React Copy To Clipboard'\r\n        subTitle='Copy to clipboard React component'\r\n        link='https://github.com/nkbt/react-copy-to-clipboard'\r\n      />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle tag='h4'>Clipboard</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col xl='3' md='4' sm='6' className='pe-sm-0 mb-md-0 mb-1'>\r\n                  <Input value={value} onChange={handleCopy} />\r\n                </Col>\r\n                <Col md='2' sm='12'>\r\n                  <CopyToClipboard onCopy={onCopy} text={value}>\r\n                    <Button color='primary' outline>\r\n                      Copy!\r\n                    </Button>\r\n                  </CopyToClipboard>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Clipboard\r\n"]},"metadata":{},"sourceType":"module"}