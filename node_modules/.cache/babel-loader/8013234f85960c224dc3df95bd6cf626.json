{"ast":null,"code":"// ** React Imports\nimport{Fragment}from'react';// ** Third Party Components\nimport classnames from'classnames';// ** Custom Components\nimport Avatar from'@components/avatar';// ** Reactstrap Imports\nimport{Card,CardBody,CardText,Progress,Input,Label,UncontrolledTooltip}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ProfilePolls=_ref=>{let{data}=_ref;const renderOptions=()=>{return data.map((option,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-polls-info mt-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(Input,{type:\"radio\",name:\"polls\",id:\"radio-\".concat(option.name.toLowerCase())}),/*#__PURE__*/_jsx(Label,{className:\"form-check-label\",for:\"radio-\".concat(option.name.toLowerCase()),children:option.name})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-end\",children:option.result})]}),/*#__PURE__*/_jsx(Progress,{className:\"my-50\",value:option.result.replace('%',' ').trim()}),/*#__PURE__*/_jsx(\"div\",{className:classnames('avatar-group',{'mt-1':index>0,'my-1':index===0}),children:option.votedUser.map(user=>{return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Avatar,{imgWidth:\"26\",imgHeight:\"26\",img:user.img,className:\"pull-up\",id:user.username.toLowerCase().split(' ').join('-')}),/*#__PURE__*/_jsx(UncontrolledTooltip,{target:user.username.toLowerCase().split(' ').join('-'),placement:\"top\",children:user.username})]},user.username);})})]},option.name);});};return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-1\",children:\"Polls\"}),/*#__PURE__*/_jsx(CardText,{className:\"mb-0\",children:\"Who is the best actor in Marvel Cinematic Universe?\"}),renderOptions()]})});};export default ProfilePolls;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/views/pages/profile/ProfilePolls.js"],"names":["Fragment","classnames","Avatar","Card","CardBody","CardText","Progress","Input","Label","UncontrolledTooltip","ProfilePolls","data","renderOptions","map","option","index","name","toLowerCase","result","replace","trim","votedUser","user","img","username","split","join"],"mappings":"AAAA;AACA,OAASA,QAAT,KAAyB,OAAzB,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA;AACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,QAAzB,CAAmCC,QAAnC,CAA6CC,KAA7C,CAAoDC,KAApD,CAA2DC,mBAA3D,KAAsF,YAAtF,C,wFAEA,KAAMC,CAAAA,YAAY,CAAG,MAAc,IAAb,CAAEC,IAAF,CAAa,MACjC,KAAMC,CAAAA,aAAa,CAAG,IAAM,CAC1B,MAAOD,CAAAA,IAAI,CAACE,GAAL,CAAS,CAACC,MAAD,CAASC,KAAT,GAAmB,CACjC,mBACE,aAAuB,SAAS,CAAC,yBAAjC,wBACE,aAAK,SAAS,CAAC,gCAAf,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,IAAI,CAAC,OAAzB,CAAiC,EAAE,iBAAWD,MAAM,CAACE,IAAP,CAAYC,WAAZ,EAAX,CAAnC,EADF,cAEE,KAAC,KAAD,EAAO,SAAS,CAAC,kBAAjB,CAAoC,GAAG,iBAAWH,MAAM,CAACE,IAAP,CAAYC,WAAZ,EAAX,CAAvC,UACGH,MAAM,CAACE,IADV,EAFF,GADF,cAOE,YAAK,SAAS,CAAC,UAAf,UAA2BF,MAAM,CAACI,MAAlC,EAPF,GADF,cAUE,KAAC,QAAD,EAAU,SAAS,CAAC,OAApB,CAA4B,KAAK,CAAEJ,MAAM,CAACI,MAAP,CAAcC,OAAd,CAAsB,GAAtB,CAA2B,GAA3B,EAAgCC,IAAhC,EAAnC,EAVF,cAWE,YACE,SAAS,CAAEnB,UAAU,CAAC,cAAD,CAAiB,CACpC,OAAQc,KAAK,CAAG,CADoB,CAEpC,OAAQA,KAAK,GAAK,CAFkB,CAAjB,CADvB,UAMGD,MAAM,CAACO,SAAP,CAAiBR,GAAjB,CAAqBS,IAAI,EAAI,CAC5B,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EACE,QAAQ,CAAC,IADX,CAEE,SAAS,CAAC,IAFZ,CAGE,GAAG,CAAEA,IAAI,CAACC,GAHZ,CAIE,SAAS,CAAC,SAJZ,CAKE,EAAE,CAAED,IAAI,CAACE,QAAL,CAAcP,WAAd,GAA4BQ,KAA5B,CAAkC,GAAlC,EAAuCC,IAAvC,CAA4C,GAA5C,CALN,EADF,cAQE,KAAC,mBAAD,EAAqB,MAAM,CAAEJ,IAAI,CAACE,QAAL,CAAcP,WAAd,GAA4BQ,KAA5B,CAAkC,GAAlC,EAAuCC,IAAvC,CAA4C,GAA5C,CAA7B,CAA+E,SAAS,CAAC,KAAzF,UACGJ,IAAI,CAACE,QADR,EARF,GAAeF,IAAI,CAACE,QAApB,CADF,CAcD,CAfA,CANH,EAXF,GAAUV,MAAM,CAACE,IAAjB,CADF,CAqCD,CAtCM,CAAP,CAuCD,CAxCD,CA0CA,mBACE,KAAC,IAAD,wBACE,MAAC,QAAD,yBACE,WAAI,SAAS,CAAC,MAAd,mBADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,MAApB,iEAFF,CAGGJ,aAAa,EAHhB,GADF,EADF,CASD,CApDD,CAsDA,cAAeF,CAAAA,YAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardText, Progress, Input, Label, UncontrolledTooltip } from 'reactstrap'\r\n\r\nconst ProfilePolls = ({ data }) => {\r\n  const renderOptions = () => {\r\n    return data.map((option, index) => {\r\n      return (\r\n        <div key={option.name} className='profile-polls-info mt-2'>\r\n          <div className='d-flex justify-content-between'>\r\n            <div className='form-check'>\r\n              <Input type='radio' name='polls' id={`radio-${option.name.toLowerCase()}`} />\r\n              <Label className='form-check-label' for={`radio-${option.name.toLowerCase()}`}>\r\n                {option.name}\r\n              </Label>\r\n            </div>\r\n            <div className='text-end'>{option.result}</div>\r\n          </div>\r\n          <Progress className='my-50' value={option.result.replace('%', ' ').trim()} />\r\n          <div\r\n            className={classnames('avatar-group', {\r\n              'mt-1': index > 0,\r\n              'my-1': index === 0\r\n            })}\r\n          >\r\n            {option.votedUser.map(user => {\r\n              return (\r\n                <Fragment key={user.username}>\r\n                  <Avatar\r\n                    imgWidth='26'\r\n                    imgHeight='26'\r\n                    img={user.img}\r\n                    className='pull-up'\r\n                    id={user.username.toLowerCase().split(' ').join('-')}\r\n                  />\r\n                  <UncontrolledTooltip target={user.username.toLowerCase().split(' ').join('-')} placement='top'>\r\n                    {user.username}\r\n                  </UncontrolledTooltip>\r\n                </Fragment>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h5 className='mb-1'>Polls</h5>\r\n        <CardText className='mb-0'>Who is the best actor in Marvel Cinematic Universe?</CardText>\r\n        {renderOptions()}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ProfilePolls\r\n"]},"metadata":{},"sourceType":"module"}