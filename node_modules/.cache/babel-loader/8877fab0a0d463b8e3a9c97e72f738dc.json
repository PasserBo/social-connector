{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { forwardRef } from 'react';\nimport { Box } from '../box/index.esm.js';\nimport { useFormControl } from '../form-control/index.esm.js';\nimport useInputStyle from './styles.esm.js';\nvar Input = /*#__PURE__*/forwardRef(function (props, ref) {\n  var as = props.as,\n      ariaLabel = props['aria-label'],\n      ariaDescribedby = props['aria-describedby'],\n      isReadOnly = props.isReadOnly,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"aria-label\", \"aria-describedby\", \"isReadOnly\", \"style\"]);\n\n  var inputStyleProps = useInputStyle(props);\n  var formControl = useFormControl(props);\n  return React__default.createElement(Box, Object.assign({\n    ref: ref,\n    as: as,\n    _readOnly: formControl.isReadOnly,\n    \"aria-readonly\": isReadOnly,\n    isDisabled: formControl.isDisabled,\n    \"aria-label\": ariaLabel,\n    \"aria-invalid\": formControl.isInvalid,\n    isRequired: formControl.isRequired,\n    \"aria-required\": formControl.isRequired,\n    \"aria-disabled\": formControl.isDisabled,\n    \"aria-describedby\": ariaDescribedby,\n    textStyle: \"body.small\",\n    style: _objectSpread2({\n      WebkitAppearance: 'none'\n    }, style)\n  }, inputStyleProps, rest));\n});\nInput.defaultProps = {\n  as: 'input',\n  isFullWidth: true,\n  focusBorderColor: 'blue.300'\n};\nInput.displayName = 'Input';\nexport { Input };","map":{"version":3,"sources":["../../src/input/index.tsx"],"names":["Input","forwardRef","as","ariaLabel","ariaDescribedby","isReadOnly","style","rest","props","inputStyleProps","useInputStyle","formControl","useFormControl","React","ref","_readOnly","isDisabled","isInvalid","isRequired","textStyle","WebkitAppearance","isFullWidth","focusBorderColor"],"mappings":";;;;;IAUaA,KAAK,GAAA,aAAGC,UAAU,CAAkB,UAAA,KAAA,EAAA,GAAA,EAAA;MAE7CC,EAAAA,GAUEM,KAAAA,CAVFN,E;MACcC,SAAAA,GASZK,KAAAA,CATF,YASEA,C;MARkBJ,eAAAA,GAQlBI,KAAAA,CARF,kBAQEA,C;MAPFH,UAAAA,GAOEG,KAAAA,CAPFH,U;qBAOEG,KAAAA,CAFFF,K;MAAAA,KAAAA,GAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAQ,EAARA,GAAQ,Y;MACLC,IAAAA,GAAAA,6BAAAA,CACDC,KADCD,EACDC,CAAAA,IAAAA,EAAAA,YAAAA,EAAAA,kBAAAA,EAAAA,YAAAA,EAAAA,OAAAA,CADCD,C;;AAGL,MAAME,eAAe,GAAGC,aAAa,CAArC,KAAqC,CAArC;AACA,MAAMC,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;AAEA,SACEC,cAAAA,CAAAA,aAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AACEC,IAAAA,GAAG,EAAEA,GADPD;AAEEX,IAAAA,EAAE,EAAEA,EAFNW;AAGEE,IAAAA,SAAS,EAAEJ,WAAW,CAACN,UAHzBQ;qBAIiBR,UAJjBQ;AAKEG,IAAAA,UAAU,EAAEL,WAAW,CAACK,UAL1BH;kBAMcV,SANdU;oBAOgBF,WAAW,CAACM,SAP5BJ;AAQEK,IAAAA,UAAU,EAAEP,WAAW,CAACO,UAR1BL;qBASiBF,WAAW,CAACO,UAT7BL;qBAUiBF,WAAW,CAACK,UAV7BH;wBAWoBT,eAXpBS;AAYEM,IAAAA,SAAS,EAAC,YAZZN;AAaEP,IAAAA,KAAK,EAAA,cAAA,CAAA;AAAIc,MAAAA,gBAAgB,EAAE;AAAtB,KAAA,EAAA,KAAA;AAbPP,GAAAA,EAcOJ,eAdPI,EADF,IACEA,CAAAA,CADF;AAjB6B,CAAA,C;AAsC/Bb,KAAK,CAALA,YAAAA,GAAqB;AACnBE,EAAAA,EAAE,EADiB,OAAA;AAEnBmB,EAAAA,WAAW,EAFQ,IAAA;AAGnBC,EAAAA,gBAAgB,EAAE;AAHC,CAArBtB;AAMAA,KAAK,CAALA,WAAAA,GAAAA,OAAAA","sourcesContent":["import React from 'react';\nimport { forwardRef } from 'react';\nimport { useFormControl } from '../form-control';\nimport { PseudoBox } from '../pseudo-box';\nimport { InputProps } from './types';\n\nimport useInputStyle from './styles';\n\nexport * from './types';\n\nexport const Input = forwardRef<any, InputProps>((props, ref) => {\n  const {\n    as,\n    'aria-label': ariaLabel,\n    'aria-describedby': ariaDescribedby,\n    isReadOnly,\n    // isFullWidth,\n    // isDisabled,\n    // isInvalid,\n    // isRequired,\n    style = {},\n    ...rest\n  } = props;\n\n  const inputStyleProps = useInputStyle(props);\n  const formControl = useFormControl(props);\n\n  return (\n    <PseudoBox\n      ref={ref}\n      as={as}\n      _readOnly={formControl.isReadOnly}\n      aria-readonly={isReadOnly}\n      isDisabled={formControl.isDisabled}\n      aria-label={ariaLabel}\n      aria-invalid={formControl.isInvalid}\n      isRequired={formControl.isRequired}\n      aria-required={formControl.isRequired}\n      aria-disabled={formControl.isDisabled}\n      aria-describedby={ariaDescribedby}\n      textStyle=\"body.small\"\n      style={{ WebkitAppearance: 'none', ...style }}\n      {...(inputStyleProps as any)}\n      {...rest}\n    />\n  );\n});\n\nInput.defaultProps = {\n  as: 'input',\n  isFullWidth: true,\n  focusBorderColor: 'blue.300',\n};\n\nInput.displayName = 'Input';\n"]},"metadata":{},"sourceType":"module"}