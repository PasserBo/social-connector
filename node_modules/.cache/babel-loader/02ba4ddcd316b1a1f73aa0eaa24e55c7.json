{"ast":null,"code":"// ** React Imports\nimport{Fragment,useEffect}from'react';// ** Reactstrap Imports\nimport{Row,Col,CardText}from'reactstrap';// ** Third Party Components\nimport Prism from'prismjs';// ** Custom Components\nimport Card from'@components/card-snippet';import BreadCrumbs from'@components/breadcrumbs';// ** Demo Components\nimport BadgeGlow from'./BadgePillGlow';import BadgePillBlock from'./BadgeBlock';import BadgePillLink from'./BadgePillLink';import BadgePillLight from'./BadgePillLight';import BadgeNotification from'./BadgeNotification';import BadgePillContextual from'./BadgePillContextual';// ** Source Code\nimport{badgePillGlow,badgePillLink,badgePillBlock,badgePillLight,badgePillContextual,badgePillNotification}from'./BadgePillSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const BadgePill=()=>{useEffect(()=>{Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Pill Badges\",breadCrumbParent:\"Components\",breadCrumbActive:\"Pill Badges\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Contextual\",code:badgePillContextual,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"pill\"}),\" with \",/*#__PURE__*/_jsx(\"code\",{children:\"Badge\"}),\" tag to create badge pill.\"]}),/*#__PURE__*/_jsx(BadgePillContextual,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Glow\",code:badgePillGlow,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".badge-glow\"}),\" with \",/*#__PURE__*/_jsx(\"code\",{children:\"Badge\"}),\" tag to add glow effect to your badge.\"]}),/*#__PURE__*/_jsx(BadgeGlow,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Light\",code:badgePillLight,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"pill\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"color=\\\"light-COLOR_NAME\\\"\"}),\" with \",/*#__PURE__*/_jsx(\"code\",{children:\"Badge\"}),\" tag to create a light badge pill.\"]}),/*#__PURE__*/_jsx(BadgePillLight,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Notifications\",code:badgePillNotification,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\".badge-up\"}),\" to set pill badge to higher than other text. So that it can work with notifications also.\"]}),/*#__PURE__*/_jsx(BadgeNotification,{})]})})]}),/*#__PURE__*/_jsxs(Row,{className:\"match-height\",children:[/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Link\",code:badgePillLink,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"href=\\\"#\\\"\"}),\" prop to use badge as a link.\"]}),/*#__PURE__*/_jsx(BadgePillLink,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Block\",code:badgePillBlock,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\".d-block\"}),\" class to make badge display as block.\"]}),/*#__PURE__*/_jsx(BadgePillBlock,{})]})})]})]});};export default BadgePill;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/components/badgePills/index.js"],"names":["Fragment","useEffect","Row","Col","CardText","Prism","Card","BreadCrumbs","BadgeGlow","BadgePillBlock","BadgePillLink","BadgePillLight","BadgeNotification","BadgePillContextual","badgePillGlow","badgePillLink","badgePillBlock","badgePillLight","badgePillContextual","badgePillNotification","BadgePill","highlightAll"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,KAAmC,YAAnC,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CAEA;AACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,cAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CAEA;AACA,OACEC,aADF,CAEEC,aAFF,CAGEC,cAHF,CAIEC,cAJF,CAKEC,mBALF,CAMEC,qBANF,KAOO,uBAPP,C,wFASA,KAAMC,CAAAA,SAAS,CAAG,IAAM,CACtBnB,SAAS,CAAC,IAAM,CACdI,KAAK,CAACgB,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAGA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,eAAe,CAAC,aAA7B,CAA2C,gBAAgB,CAAC,YAA5D,CAAyE,gBAAgB,CAAC,aAA1F,EADF,cAEE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,YAAZ,CAAyB,IAAI,CAAEH,mBAA/B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,8BADX,uBACkC,+BADlC,gCADF,cAIE,KAAC,mBAAD,IAJF,GADF,EADF,cASE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,MAAZ,CAAmB,IAAI,CAAEJ,aAAzB,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,qCACY,qCADZ,uBAC0C,+BAD1C,4CADF,cAIE,KAAC,SAAD,IAJF,GADF,EATF,cAiBE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAEG,cAA1B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,8BADX,sBACiC,oDADjC,uBAC4E,+BAD5E,wCADF,cAKE,KAAC,cAAD,IALF,GADF,EAjBF,cA0BE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,eAAZ,CAA4B,IAAI,CAAEE,qBAAlC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,+BACM,mCADN,gGADF,cAKE,KAAC,iBAAD,IALF,GADF,EA1BF,GAFF,cAsCE,MAAC,GAAD,EAAK,SAAS,CAAC,cAAf,wBACE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,MAAZ,CAAmB,IAAI,CAAEJ,aAAzB,wBACE,MAAC,QAAD,gCACM,oCADN,mCADF,cAIE,KAAC,aAAD,IAJF,GADF,EADF,cASE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAEC,cAA1B,wBACE,MAAC,QAAD,gCACM,kCADN,4CADF,cAIE,KAAC,cAAD,IAJF,GADF,EATF,GAtCF,GADF,CA2DD,CA/DD,CAgEA,cAAeI,CAAAA,SAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport BadgeGlow from './BadgePillGlow'\r\nimport BadgePillBlock from './BadgeBlock'\r\nimport BadgePillLink from './BadgePillLink'\r\nimport BadgePillLight from './BadgePillLight'\r\nimport BadgeNotification from './BadgeNotification'\r\nimport BadgePillContextual from './BadgePillContextual'\r\n\r\n// ** Source Code\r\nimport {\r\n  badgePillGlow,\r\n  badgePillLink,\r\n  badgePillBlock,\r\n  badgePillLight,\r\n  badgePillContextual,\r\n  badgePillNotification\r\n} from './BadgePillSourceCode'\r\n\r\nconst BadgePill = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Pill Badges' breadCrumbParent='Components' breadCrumbActive='Pill Badges' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Contextual' code={badgePillContextual}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>pill</code> with <code>Badge</code> tag to create badge pill.\r\n            </CardText>\r\n            <BadgePillContextual />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Glow' code={badgePillGlow}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge.\r\n            </CardText>\r\n            <BadgeGlow />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Light' code={badgePillLight}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>pill</code> and <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create\r\n              a light badge pill.\r\n            </CardText>\r\n            <BadgePillLight />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Notifications' code={badgePillNotification}>\r\n            <CardText className='mb-0'>\r\n              Use <code>.badge-up</code> to set pill badge to higher than other text. So that it can work with\r\n              notifications also.\r\n            </CardText>\r\n            <BadgeNotification />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Link' code={badgePillLink}>\r\n            <CardText>\r\n              Use <code>href=\"#\"</code> prop to use badge as a link.\r\n            </CardText>\r\n            <BadgePillLink />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Block' code={badgePillBlock}>\r\n            <CardText>\r\n              Use <code>.d-block</code> class to make badge display as block.\r\n            </CardText>\r\n            <BadgePillBlock />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default BadgePill\r\n"]},"metadata":{},"sourceType":"module"}