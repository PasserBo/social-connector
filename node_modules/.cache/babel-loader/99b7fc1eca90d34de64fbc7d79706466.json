{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/index.js\";\n// ** React Imports\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Signin } from './components/Signin';\nimport { Header } from './components/Header';\nimport { Session } from './auth'; // ** Router Import\n\nimport Router from './router/Router'; // ** Redux Imports\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'; // ** Intl, CASL & ThemeColors Context\n\nimport ability from './configs/acl/ability';\nimport { ToastContainer } from 'react-toastify';\nimport { AbilityContext } from './utility/context/Can';\nimport { ThemeContext } from './utility/context/ThemeColors';\nimport { IntlProviderWrapper } from './utility/context/Internationalization'; // ** i18n\n\nimport './configs/i18n'; // ** Spinner (Splash Screen)\n\nimport Spinner from './@core/components/spinner/Fallback-spinner'; // ** Ripple Button\n\nimport './@core/components/ripple-button'; // ** Fake Database\n\nimport './@fake-db'; // ** PrismJS\n\nimport 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'prismjs/components/prism-jsx.min'; // ** React Perfect Scrollbar\n\nimport 'react-perfect-scrollbar/dist/css/styles.css'; // ** React Toastify\n\nimport '@styles/react/libs/toastify/toastify.scss'; // ** Core styles\n\nimport './@core/assets/fonts/feather/iconfont.css';\nimport './@core/scss/core.scss';\nimport './assets/scss/style.scss'; // ** Service Worker\n\nimport * as serviceWorker from './serviceWorker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display(props) {\n  const isLoggedIn = props.isLoggedIn;\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Signin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Display;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(AbilityContext.Provider, {\n      value: ability,\n      children: /*#__PURE__*/_jsxDEV(ThemeContext, {\n        children: /*#__PURE__*/_jsxDEV(IntlProviderWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            isLoggedIn: Session.isUserSignedIn()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n            newestOnTop: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nserviceWorker.unregister();\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/index.js"],"names":["React","Suspense","ReactDOM","Signin","Header","Session","Router","Provider","store","ability","ToastContainer","AbilityContext","ThemeContext","IntlProviderWrapper","Spinner","serviceWorker","Display","props","isLoggedIn","render","isUserSignedIn","document","getElementById","unregister"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,mBAAT,QAAoC,wCAApC,C,CAEA;;AACA,OAAO,gBAAP,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,6CAApB,C,CAEA;;AACA,OAAO,kCAAP,C,CAEA;;AACA,OAAO,YAAP,C,CAEA;;AACA,OAAO,SAAP;AACA,OAAO,mCAAP;AACA,OAAO,kCAAP,C,CAEA;;AACA,OAAO,6CAAP,C,CAEA;;AACA,OAAO,2CAAP,C,CAEA;;AACA,OAAO,2CAAP;AACA,OAAO,wBAAP;AACA,OAAO,0BAAP,C,CAEA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;;AAEE,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;;AACA,MAAIA,UAAJ,EAAgB;AACf,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AACA,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACF;;KANQF,O;AAQTd,QAAQ,CAACiB,MAAT,eACA,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEX,KAAjB;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAApB;AAAA,2BACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAEC,OAAhC;AAAA,6BACE,QAAC,YAAD;AAAA,+BACA,QAAC,mBAAD;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AAAS,YAAA,UAAU,EAAIJ,OAAO,CAACe,cAAR;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,cAAD;AAAgB,YAAA,WAAW;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADA,EAcAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAdA;AAgBFP,aAAa,CAACQ,UAAd","sourcesContent":["// ** React Imports\r\nimport React, { Suspense} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Signin } from './components/Signin'\r\nimport { Header } from './components/Header'\r\nimport { Session } from './auth'\r\n \r\n// ** Router Import\r\nimport Router from './router/Router'\r\n\r\n// ** Redux Imports\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store'\r\n\r\n// ** Intl, CASL & ThemeColors Context\r\nimport ability from './configs/acl/ability'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { AbilityContext } from './utility/context/Can'\r\nimport { ThemeContext } from './utility/context/ThemeColors'\r\nimport { IntlProviderWrapper } from './utility/context/Internationalization'\r\n\r\n// ** i18n\r\nimport './configs/i18n'\r\n\r\n// ** Spinner (Splash Screen)\r\nimport Spinner from './@core/components/spinner/Fallback-spinner'\r\n\r\n// ** Ripple Button\r\nimport './@core/components/ripple-button'\r\n\r\n// ** Fake Database\r\nimport './@fake-db'\r\n\r\n// ** PrismJS\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\nimport 'prismjs/components/prism-jsx.min'\r\n\r\n// ** React Perfect Scrollbar\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\n\r\n// ** React Toastify\r\nimport '@styles/react/libs/toastify/toastify.scss'\r\n\r\n// ** Core styles\r\nimport './@core/assets/fonts/feather/iconfont.css'\r\nimport './@core/scss/core.scss'\r\nimport './assets/scss/style.scss'\r\n\r\n// ** Service Worker\r\nimport * as serviceWorker from './serviceWorker'\r\n \r\n  function Display(props) {\r\n    const isLoggedIn = props.isLoggedIn\r\n    if (isLoggedIn) {\r\n     return <Router />\r\n    }\r\n     return <Signin />\r\n  }\r\n\r\n  ReactDOM.render(\r\n  <Provider store={store}>\r\n    <Suspense fallback={<Spinner />}>\r\n      <AbilityContext.Provider value={ability}>\r\n        <ThemeContext>\r\n        <IntlProviderWrapper>\r\n          <Header />\r\n          <Display isLoggedIn = {Session.isUserSignedIn()}/>\r\n          <ToastContainer newestOnTop />\r\n        </IntlProviderWrapper>\r\n        </ThemeContext>\r\n      </AbilityContext.Provider>\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\nserviceWorker.unregister()"]},"metadata":{},"sourceType":"module"}