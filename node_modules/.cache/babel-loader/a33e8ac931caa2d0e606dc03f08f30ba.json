{"ast":null,"code":"// ** React Imports\nimport{Fragment,useState,useEffect}from'react';// ** Third Party Components\nimport classnames from'classnames';import{Row,Col}from'reactstrap';// ** Calendar App Component Imports\nimport Calendar from'./Calendar';import SidebarLeft from'./SidebarLeft';import AddEventSidebar from'./AddEventSidebar';// ** Custom HooksappCalendar\nimport{useRTL}from'@hooks/useRTL';// ** Store & Actions\nimport{useSelector,useDispatch}from'react-redux';import{fetchEvents,selectEvent,updateEvent,updateFilter,updateAllFilters,addEvent,removeEvent}from'./store';// ** Styles\nimport'@styles/react/apps/app-book.scss';// ** CalendarColors\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const calendarsColor={Billboards:'primary',Screens:'success',Office:'danger',Panorama:'warning',Malls:'info'};const CalendarComponent=()=>{// ** Variables\nconst dispatch=useDispatch();const store=useSelector(state=>state.book);// ** states\nconst[calendarApi,setCalendarApi]=useState(null);const[addSidebarOpen,setAddSidebarOpen]=useState(false);const[leftSidebarOpen,setLeftSidebarOpen]=useState(false);// ** Hooks\nconst[isRtl]=useRTL();// ** AddEventSidebar Toggle Function\nconst handleAddEventSidebar=()=>setAddSidebarOpen(!addSidebarOpen);// ** LeftSidebar Toggle Function\nconst toggleSidebar=val=>setLeftSidebarOpen(val);// ** Blank Event Object\nconst blankEvent={title:'',start:'',end:'',allDay:false,url:'',extendedProps:{calendar:'',guests:[],location:'',description:''}};// ** refetchEvents\nconst refetchEvents=()=>{if(calendarApi!==null){calendarApi.refetchEvents();}};// ** Fetch Events On Mount\nuseEffect(()=>{dispatch(fetchEvents(store.selectedCalendars));},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"app-calendar overflow-hidden border\",children:/*#__PURE__*/_jsxs(Row,{className:\"g-0\",children:[/*#__PURE__*/_jsx(Col,{id:\"app-calendar-sidebar\",className:classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column',{show:leftSidebarOpen}),children:/*#__PURE__*/_jsx(SidebarLeft,{store:store,dispatch:dispatch,updateFilter:updateFilter,toggleSidebar:toggleSidebar,updateAllFilters:updateAllFilters,handleAddEventSidebar:handleAddEventSidebar})}),/*#__PURE__*/_jsx(Col,{className:\"position-relative\",children:/*#__PURE__*/_jsx(Calendar,{isRtl:isRtl,store:store,dispatch:dispatch,blankEvent:blankEvent,calendarApi:calendarApi,selectEvent:selectEvent,updateEvent:updateEvent,toggleSidebar:toggleSidebar,calendarsColor:calendarsColor,setCalendarApi:setCalendarApi,handleAddEventSidebar:handleAddEventSidebar})}),/*#__PURE__*/_jsx(\"div\",{className:classnames('body-content-overlay',{show:leftSidebarOpen===true}),onClick:()=>toggleSidebar(false)})]})}),/*#__PURE__*/_jsx(AddEventSidebar,{store:store,dispatch:dispatch,addEvent:addEvent,open:addSidebarOpen,selectEvent:selectEvent,updateEvent:updateEvent,removeEvent:removeEvent,calendarApi:calendarApi,refetchEvents:refetchEvents,calendarsColor:calendarsColor,handleAddEventSidebar:handleAddEventSidebar})]});};export default CalendarComponent;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/views/apps/book/index.js"],"names":["Fragment","useState","useEffect","classnames","Row","Col","Calendar","SidebarLeft","AddEventSidebar","useRTL","useSelector","useDispatch","fetchEvents","selectEvent","updateEvent","updateFilter","updateAllFilters","addEvent","removeEvent","calendarsColor","Billboards","Screens","Office","Panorama","Malls","CalendarComponent","dispatch","store","state","book","calendarApi","setCalendarApi","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","isRtl","handleAddEventSidebar","toggleSidebar","val","blankEvent","title","start","end","allDay","url","extendedProps","calendar","guests","location","description","refetchEvents","selectedCalendars","show"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Calendar App Component Imports\r\nimport Calendar from './Calendar'\r\nimport SidebarLeft from './SidebarLeft'\r\nimport AddEventSidebar from './AddEventSidebar'\r\n\r\n// ** Custom HooksappCalendar\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-book.scss'\r\n\r\n// ** CalendarColors\r\nconst calendarsColor = {\r\n  Billboards: 'primary',\r\n  Screens: 'success',\r\n  Office: 'danger',\r\n  Panorama: 'warning',\r\n  Malls: 'info'\r\n}\r\n\r\nconst CalendarComponent = () => {\r\n  // ** Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.book)\r\n\r\n  // ** states\r\n  const [calendarApi, setCalendarApi] = useState(null)\r\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false)\r\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\r\n\r\n  // ** Hooks\r\n  const [isRtl] = useRTL()\r\n\r\n  // ** AddEventSidebar Toggle Function\r\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\r\n\r\n  // ** LeftSidebar Toggle Function\r\n  const toggleSidebar = val => setLeftSidebarOpen(val)\r\n\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: '',\r\n    start: '',\r\n    end: '',\r\n    allDay: false,\r\n    url: '',\r\n    extendedProps: {\r\n      calendar: '',\r\n      guests: [],\r\n      location: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  // ** refetchEvents\r\n  const refetchEvents = () => {\r\n    if (calendarApi !== null) {\r\n      calendarApi.refetchEvents()\r\n    }\r\n  }\r\n\r\n  // ** Fetch Events On Mount\r\n  useEffect(() => {\r\n    dispatch(fetchEvents(store.selectedCalendars))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='app-calendar overflow-hidden border'>\r\n        <Row className='g-0'>\r\n          <Col\r\n            id='app-calendar-sidebar'\r\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\r\n              show: leftSidebarOpen\r\n            })}\r\n          >\r\n            <SidebarLeft\r\n              store={store}\r\n              dispatch={dispatch}\r\n              updateFilter={updateFilter}\r\n              toggleSidebar={toggleSidebar}\r\n              updateAllFilters={updateAllFilters}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <Col className='position-relative'>\r\n            <Calendar\r\n              isRtl={isRtl}\r\n              store={store}\r\n              dispatch={dispatch}\r\n              blankEvent={blankEvent}\r\n              calendarApi={calendarApi}\r\n              selectEvent={selectEvent}\r\n              updateEvent={updateEvent}\r\n              toggleSidebar={toggleSidebar}\r\n              calendarsColor={calendarsColor}\r\n              setCalendarApi={setCalendarApi}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: leftSidebarOpen === true\r\n            })}\r\n            onClick={() => toggleSidebar(false)}\r\n          ></div>\r\n        </Row>\r\n      </div>\r\n      <AddEventSidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        addEvent={addEvent}\r\n        open={addSidebarOpen}\r\n        selectEvent={selectEvent}\r\n        updateEvent={updateEvent}\r\n        removeEvent={removeEvent}\r\n        calendarApi={calendarApi}\r\n        refetchEvents={refetchEvents}\r\n        calendarsColor={calendarsColor}\r\n        handleAddEventSidebar={handleAddEventSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CalendarComponent"]},"metadata":{},"sourceType":"module"}