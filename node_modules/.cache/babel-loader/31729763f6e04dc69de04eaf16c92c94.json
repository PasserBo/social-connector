{"ast":null,"code":"// ** Third Party Components\nimport{X}from'react-feather';import classnames from'classnames';import PerfectScrollbar from'react-perfect-scrollbar';import{Modal,ModalHeader,ModalBody}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Sidebar=props=>{// ** Props\nconst{open,size,title,width,children,closeBtn,className,toggleSidebar,bodyClassName,contentClassName,wrapperClassName,headerClassName,...rest}=props;// ** If user passes custom close btn render that else default close btn\nconst renderCloseBtn=closeBtn?closeBtn:/*#__PURE__*/_jsx(X,{className:\"cursor-pointer\",size:15,onClick:toggleSidebar});return/*#__PURE__*/_jsxs(Modal,{isOpen:open,toggle:toggleSidebar,contentClassName:classnames('overflow-hidden',{[contentClassName]:contentClassName}),modalClassName:classnames('modal-slide-in',{[wrapperClassName]:wrapperClassName}),className:classnames({[className]:className,'sidebar-lg':size==='lg','sidebar-sm':size==='sm'})/*eslint-disable */,...(width!==undefined?{style:{width:String(width)+'px'}}:{}),...rest,children:[/*#__PURE__*/_jsx(ModalHeader,{className:classnames({[headerClassName]:headerClassName}),toggle:toggleSidebar,close:renderCloseBtn,tag:\"div\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"modal-title\",children:/*#__PURE__*/_jsx(\"span\",{className:\"align-middle\",children:title})})}),/*#__PURE__*/_jsx(PerfectScrollbar,{options:{wheelPropagation:false},children:/*#__PURE__*/_jsx(ModalBody,{className:classnames('flex-grow-1',{[bodyClassName]:bodyClassName}),children:children})})]});};export default Sidebar;// ** PropTypes","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/@core/components/sidebar/index.js"],"names":["X","classnames","PerfectScrollbar","Modal","ModalHeader","ModalBody","Sidebar","props","open","size","title","width","children","closeBtn","className","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","renderCloseBtn","undefined","style","String","wheelPropagation"],"mappings":"AAAA;AACA,OAASA,CAAT,KAAkB,eAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CAEA,OAASC,KAAT,CAAgBC,WAAhB,CAA6BC,SAA7B,KAA8C,YAA9C,C,wFAEA,KAAMC,CAAAA,OAAO,CAAGC,KAAK,EAAI,CACvB;AACA,KAAM,CACJC,IADI,CAEJC,IAFI,CAGJC,KAHI,CAIJC,KAJI,CAKJC,QALI,CAMJC,QANI,CAOJC,SAPI,CAQJC,aARI,CASJC,aATI,CAUJC,gBAVI,CAWJC,gBAXI,CAYJC,eAZI,CAaJ,GAAGC,IAbC,EAcFb,KAdJ,CAgBA;AACA,KAAMc,CAAAA,cAAc,CAAGR,QAAQ,CAAGA,QAAH,cAAc,KAAC,CAAD,EAAG,SAAS,CAAC,gBAAb,CAA8B,IAAI,CAAE,EAApC,CAAwC,OAAO,CAAEE,aAAjD,EAA7C,CAEA,mBACE,MAAC,KAAD,EACE,MAAM,CAAEP,IADV,CAEE,MAAM,CAAEO,aAFV,CAGE,gBAAgB,CAAEd,UAAU,CAAC,iBAAD,CAAoB,CAC9C,CAACgB,gBAAD,EAAoBA,gBAD0B,CAApB,CAH9B,CAME,cAAc,CAAEhB,UAAU,CAAC,gBAAD,CAAmB,CAC3C,CAACiB,gBAAD,EAAoBA,gBADuB,CAAnB,CAN5B,CASE,SAAS,CAAEjB,UAAU,CAAC,CACpB,CAACa,SAAD,EAAaA,SADO,CAEpB,aAAcL,IAAI,GAAK,IAFH,CAGpB,aAAcA,IAAI,GAAK,IAHH,CAAD,CAKrB,mBAdF,KAeOE,KAAK,GAAKW,SAAV,CACD,CACEC,KAAK,CAAE,CAAEZ,KAAK,CAAEa,MAAM,CAACb,KAAD,CAAN,CAAgB,IAAzB,CADT,CADC,CAID,EAnBN,KAqBMS,IArBN,wBAuBE,KAAC,WAAD,EACE,SAAS,CAAEnB,UAAU,CAAC,CACpB,CAACkB,eAAD,EAAmBA,eADC,CAAD,CADvB,CAIE,MAAM,CAAEJ,aAJV,CAKE,KAAK,CAAEM,cALT,CAME,GAAG,CAAC,KANN,uBAQE,WAAI,SAAS,CAAC,aAAd,uBACE,aAAM,SAAS,CAAC,cAAhB,UAAgCX,KAAhC,EADF,EARF,EAvBF,cAmCE,KAAC,gBAAD,EAAkB,OAAO,CAAE,CAAEe,gBAAgB,CAAE,KAApB,CAA3B,uBACE,KAAC,SAAD,EACE,SAAS,CAAExB,UAAU,CAAC,aAAD,CAAgB,CACnC,CAACe,aAAD,EAAiBA,aADkB,CAAhB,CADvB,UAKGJ,QALH,EADF,EAnCF,GADF,CA+CD,CApED,CAsEA,cAAeN,CAAAA,OAAf,CAEA","sourcesContent":["// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames('overflow-hidden', {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames('flex-grow-1', {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}