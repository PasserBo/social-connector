{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/pages/account-settings/AccountTabContent.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment } from 'react'; // ** Third Party Components\n\nimport { useForm } from 'react-hook-form';\nimport 'cleave.js/dist/addons/cleave-phone.us'; // ** Reactstrap Imports\n\nimport { Card, CardBody, CardTitle, CardHeader } from 'reactstrap'; // ** Stacks Transactions\n\nimport { bufferCVFromString, callReadOnlyFunction } from '@stacks/transactions';\nimport { StacksTestnet } from '@stacks/network'; // Auth Details\n// const address = Session.address.toString()\n// STX Query \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = 'ST39EMTZG4P7D55FMEQXEB8ZEQEK0ECBHB1J6QD63';\nconst contractName = 'vip-burn';\nconst functionName = 'get-last-token-id';\nconst buffer = bufferCVFromString('foo');\nconst network = new StacksTestnet();\nconst senderAddress = 'ST39EMTZG4P7D55FMEQXEB8ZEQEK0ECBHB1J6QD63';\nconst options = {\n  contractAddress,\n  contractName,\n  functionName,\n  functionArgs: [buffer],\n  network,\n  senderAddress\n};\n\nconst walletFaris = async () => {\n  await callReadOnlyFunction(options);\n};\n\nconst AccountTabs = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  // ** Hooks\n  const defaultValues = {\n    lastName: '',\n    firstName: data.fullName.split(' ')[0]\n  };\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues\n  });\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      return null;\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h4\",\n          children: \"Profile Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        className: \"py-2 my-25\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"YOU HAVE **\", walletFaris, \"** FARIS \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountTabs, \"aDSyuymgV+5DqWTkYw510NJivI4=\", false, function () {\n  return [useForm];\n});\n\n_c = AccountTabs;\nexport default AccountTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountTabs\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/pages/account-settings/AccountTabContent.js"],"names":["Fragment","useForm","Card","CardBody","CardTitle","CardHeader","bufferCVFromString","callReadOnlyFunction","StacksTestnet","contractAddress","contractName","functionName","buffer","network","senderAddress","options","functionArgs","walletFaris","AccountTabs","data","defaultValues","lastName","firstName","fullName","split","control","setError","handleSubmit","formState","errors","onSubmit","Object","values","every","field","length","key","type"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,uCAAP,C,CAEA;;AACA,SAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,YAAvD,C,CAEA;;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,sBAAzD;AACA,SAASC,aAAT,QAA8B,iBAA9B,C,CAGA;AACA;AAEA;;;AACA,MAAMC,eAAe,GAAG,2CAAxB;AACA,MAAMC,YAAY,GAAG,UAArB;AACA,MAAMC,YAAY,GAAG,mBAArB;AACA,MAAMC,MAAM,GAAGN,kBAAkB,CAAC,KAAD,CAAjC;AACA,MAAMO,OAAO,GAAG,IAAIL,aAAJ,EAAhB;AACA,MAAMM,aAAa,GAAG,2CAAtB;AAEA,MAAMC,OAAO,GAAG;AACdN,EAAAA,eADc;AAEdC,EAAAA,YAFc;AAGdC,EAAAA,YAHc;AAIdK,EAAAA,YAAY,EAAE,CAACJ,MAAD,CAJA;AAKdC,EAAAA,OALc;AAMdC,EAAAA;AANc,CAAhB;;AASA,MAAMG,WAAW,GAAG,YAAY;AAAE,QAAMV,oBAAoB,CAACQ,OAAD,CAA1B;AAAqC,CAAvE;;AAEA,MAAMG,WAAW,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAChC;AACA,QAAMC,aAAa,GAAG;AACpBC,IAAAA,QAAQ,EAAE,EADU;AAEpBC,IAAAA,SAAS,EAAEH,IAAI,CAACI,QAAL,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB;AAFS,GAAtB;AAIA,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKF5B,OAAO,CAAC;AAAEmB,IAAAA;AAAF,GAAD,CALX;;AAOC,QAAMU,QAAQ,GAAGX,IAAI,IAAI;AACxB,QAAIY,MAAM,CAACC,MAAP,CAAcb,IAAd,EAAoBc,KAApB,CAA0BC,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,CAAlD,CAAJ,EAA0D;AACxD,aAAO,IAAP;AACD,KAFD,MAEO;AACL,WAAK,MAAMC,GAAX,IAAkBjB,IAAlB,EAAwB;AACtB,YAAIA,IAAI,CAACiB,GAAD,CAAJ,CAAUD,MAAV,KAAqB,CAAzB,EAA4B;AAC1BT,UAAAA,QAAQ,CAACU,GAAD,EAAM;AACZC,YAAAA,IAAI,EAAE;AADM,WAAN,CAAR;AAGD;AACF;AACF;AACF,GAZA;;AAcD,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,YAApB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACG;AAAA,sCAAgBpB,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzCD;;GAAMC,W;UAWAjB,O;;;KAXAiB,W;AA2CN,eAAeA,WAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\n \r\nimport { useForm } from 'react-hook-form'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\n\r\n// ** Reactstrap Imports\r\nimport {  Card, CardBody, CardTitle, CardHeader } from 'reactstrap'\r\n\r\n// ** Stacks Transactions\r\nimport { bufferCVFromString, callReadOnlyFunction } from '@stacks/transactions'\r\nimport { StacksTestnet } from '@stacks/network'\r\n \r\n\r\n// Auth Details\r\n// const address = Session.address.toString()\r\n\r\n// STX Query \r\nconst contractAddress = 'ST39EMTZG4P7D55FMEQXEB8ZEQEK0ECBHB1J6QD63'\r\nconst contractName = 'vip-burn'\r\nconst functionName = 'get-last-token-id'\r\nconst buffer = bufferCVFromString('foo')\r\nconst network = new StacksTestnet()\r\nconst senderAddress = 'ST39EMTZG4P7D55FMEQXEB8ZEQEK0ECBHB1J6QD63'\r\n\r\nconst options = {\r\n  contractAddress,\r\n  contractName,\r\n  functionName,\r\n  functionArgs: [buffer],\r\n  network,\r\n  senderAddress\r\n}\r\n\r\nconst walletFaris = async () => { await callReadOnlyFunction(options) }\r\n\r\nconst AccountTabs = ({ data }) => {\r\n  // ** Hooks\r\n  const defaultValues = {\r\n    lastName: '',\r\n    firstName: data.fullName.split(' ')[0]\r\n  }\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n   const onSubmit = data => {\r\n    if (Object.values(data).every(field => field.length > 0)) {\r\n      return null\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Profile Details</CardTitle>\r\n        </CardHeader>\r\n        <CardBody className='py-2 my-25'>\r\n          <div className='d-flex'> \r\n             <b>YOU HAVE **{ walletFaris }** FARIS </b>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n        </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountTabs"]},"metadata":{},"sourceType":"module"}