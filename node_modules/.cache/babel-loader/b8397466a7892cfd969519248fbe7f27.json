{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport { Box } from '../box/index.esm.js';\nimport { oneOf } from 'prop-types';\nimport useInputStyle from '../input/styles.esm.js';\n\nvar InputAddon = function InputAddon(_ref) {\n  var _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'left' : _ref$placement,\n      props = _objectWithoutPropertiesLoose(_ref, [\"placement\"]);\n\n  var _placement = {\n    left: {\n      mr: '-1px',\n      roundedRight: 0,\n      borderRightColor: 'transparent',\n      borderLeftWidth: 0\n    },\n    right: {\n      order: 1,\n      roundedLeft: 0,\n      borderLeftColor: 'transparent',\n      borderLeftWidth: 0\n    }\n  };\n\n  var styleProps = _objectSpread2({}, useInputStyle({\n    variant: 'outline'\n  }), {\n    flex: '0 0 auto',\n    whiteSpace: 'nowrap',\n    bg: 'white',\n    fontSize: 'body.small'\n  }, _placement[placement]);\n\n  return React__default.createElement(Box, Object.assign({}, styleProps, props, {\n    css: {\n      'input:focus + &': {\n        zIndex: -1\n      }\n    }\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? InputAddon.propTypes = {\n  placement: /*#__PURE__*/oneOf(['left', 'right'])\n} : void 0;\nInputAddon.displayName = 'InputAddon';\n\nvar InputLeftAddon = function InputLeftAddon(props) {\n  return React__default.createElement(InputAddon, Object.assign({\n    placement: \"left\"\n  }, props));\n};\n\nvar InputRightAddon = function InputRightAddon(props) {\n  return React__default.createElement(InputAddon, Object.assign({\n    placement: \"right\"\n  }, props));\n};\n\nexport { InputAddon, InputLeftAddon, InputRightAddon };","map":{"version":3,"sources":["../../src/input-addon/index.tsx"],"names":["InputAddon","placement","props","_placement","left","mr","roundedRight","borderRightColor","borderLeftWidth","right","order","roundedLeft","borderLeftColor","styleProps","useInputStyle","variant","flex","whiteSpace","bg","fontSize","css","zIndex","oneOf","InputLeftAddon","React","InputRightAddon"],"mappings":";;;;;;IAQMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAA;4BAAGC,S;MAAAA,SAAAA,GAAAA,cAAAA,KAAAA,KAAAA,CAAAA,GAAY,MAAZA,GAAY,c;MAAWC,KAAAA,GAAAA,6BAAAA,CAAAA,IAAAA,EAAAA,CAAAA,WAAAA,CAAAA,C;;AAC3C,MAAMC,UAAU,GAAG;AACjBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EADE,MAAA;AAEJC,MAAAA,YAAY,EAFR,CAAA;AAGJC,MAAAA,gBAAgB,EAHZ,aAAA;AAIJC,MAAAA,eAAe,EAAE;AAJb,KADW;AAOjBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EADA,CAAA;AAELC,MAAAA,WAAW,EAFN,CAAA;AAGLC,MAAAA,eAAe,EAHV,aAAA;AAILJ,MAAAA,eAAe,EAAE;AAJZ;AAPU,GAAnB;;AAeA,MAAMK,UAAU,GAAA,cAAA,CAAA,EAAA,EACVC,aAAa,CAAC;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAD,CADH,EAAA;AAEdC,IAAAA,IAAI,EAFU,UAAA;AAGdC,IAAAA,UAAU,EAHI,QAAA;AAIdC,IAAAA,EAAE,EAJY,OAAA;AAKdC,IAAAA,QAAQ,EAAE;AALI,GAAA,EAMXhB,UAAU,CANf,SAMe,CANC,CAAhB;;AASA,SAAO,cAAA,CAAA,aAAA,CAAA,GAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAASU,UAAT,EAAyBX,KAAzB,EAAyBA;AAAOkB,IAAAA,GAAG,EAAE;AAAE,yBAAmB;AAAEC,QAAAA,MAAM,EAAE,CAAC;AAAX;AAArB;AAAZnB,GAAzB,CAAA,CAAP;AACD,C;;AAED,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,UAAU,CAAV,SAAA,GAAuB;AACrBD,EAAAA,SAAS,EAAA,aAAEqB,KAAK,CAAC,CAAA,MAAA,EAAD,OAAC,CAAD;AADK,CAAvB,GAAA,KAAA,CAAA;AAIAtB,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;;IAEMuB,cAAc,GAAG,SAAjBA,cAAiB,CAAA,KAAA,EAAA;AAAA,SAA4BC,cAAAA,CAAAA,aAAAA,CAAAA,UAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AAAYvB,IAAAA,SAAS,EAAC;AAAtBuB,GAAAA,EAA5B,KAA4BA,CAAAA,CAA5B;AAAA,C;;IACjBC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAAA;AAAA,SAA4BD,cAAAA,CAAAA,aAAAA,CAAAA,UAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AAAYvB,IAAAA,SAAS,EAAC;AAAtBuB,GAAAA,EAA5B,KAA4BA,CAAAA,CAA5B;AAAA,C","sourcesContent":["import React from 'react';\nimport { oneOf } from 'prop-types';\nimport { Box } from '../box';\nimport useInputStyle from '../input/styles';\nimport { InputAddonProps } from './types';\n\nexport * from './types';\n\nconst InputAddon = ({ placement = 'left', ...props }: InputAddonProps) => {\n  const _placement = {\n    left: {\n      mr: '-1px',\n      roundedRight: 0,\n      borderRightColor: 'transparent',\n      borderLeftWidth: 0,\n    },\n    right: {\n      order: 1,\n      roundedLeft: 0,\n      borderLeftColor: 'transparent',\n      borderLeftWidth: 0,\n    },\n  };\n\n  const styleProps = {\n    ...(useInputStyle({ variant: 'outline' }) as any),\n    flex: '0 0 auto',\n    whiteSpace: 'nowrap',\n    bg: 'white', // todo: abstract out for colorMode\n    fontSize: 'body.small',\n    ..._placement[placement],\n  };\n\n  return <Box {...styleProps} {...props} css={{ 'input:focus + &': { zIndex: -1 } }} />;\n};\n\nInputAddon.propTypes = {\n  placement: oneOf(['left', 'right']),\n};\n\nInputAddon.displayName = 'InputAddon';\n\nconst InputLeftAddon = (props: InputAddonProps) => <InputAddon placement=\"left\" {...props} />;\nconst InputRightAddon = (props: InputAddonProps) => <InputAddon placement=\"right\" {...props} />;\n\nexport { InputAddon, InputLeftAddon, InputRightAddon };\n"]},"metadata":{},"sourceType":"module"}