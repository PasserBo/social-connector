{"ast":null,"code":"import _slicedToArray from\"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// ** React Imports\nimport{useParams}from'react-router-dom';import{Fragment,useEffect,useState}from'react';// ** Email App Component Imports\nimport Mails from'./Mails';import Sidebar from'./Sidebar';// ** Third Party Components\nimport classnames from'classnames';// ** Store & Actions\nimport{useDispatch,useSelector}from'react-redux';import{getMails,selectMail,updateMails,paginateMail,selectAllMail,updateMailLabel,resetSelectedMail,selectCurrentMail}from'./store';// ** Styles\nimport'@styles/react/apps/app-email.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmailApp=function EmailApp(){// ** States\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),sidebarOpen=_useState4[0],setSidebarOpen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),composeOpen=_useState6[0],setComposeOpen=_useState6[1];// ** Toggle Compose Function\nvar toggleCompose=function toggleCompose(){return setComposeOpen(!composeOpen);};// ** Store Variables\nvar dispatch=useDispatch();var store=useSelector(function(state){return state.email;});// ** Vars\nvar params=useParams();// ** UseEffect: GET initial data on Mount\nuseEffect(function(){dispatch(getMails({q:query||'',folder:params.folder||'inbox',label:params.label||''}));},[query,params.folder,params.label]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Sidebar,{store:store,dispatch:dispatch,getMails:getMails,sidebarOpen:sidebarOpen,toggleCompose:toggleCompose,setSidebarOpen:setSidebarOpen,resetSelectedMail:resetSelectedMail}),/*#__PURE__*/_jsx(\"div\",{className:\"content-right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:classnames('body-content-overlay',{show:sidebarOpen}),onClick:function onClick(){return setSidebarOpen(false);}}),/*#__PURE__*/_jsx(Mails,{store:store,query:query,setQuery:setQuery,dispatch:dispatch,getMails:getMails,selectMail:selectMail,updateMails:updateMails,composeOpen:composeOpen,paginateMail:paginateMail,selectAllMail:selectAllMail,toggleCompose:toggleCompose,setSidebarOpen:setSidebarOpen,updateMailLabel:updateMailLabel,selectCurrentMail:selectCurrentMail,resetSelectedMail:resetSelectedMail})]})})]});};export default EmailApp;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/apps/email/index.js"],"names":["useParams","Fragment","useEffect","useState","Mails","Sidebar","classnames","useDispatch","useSelector","getMails","selectMail","updateMails","paginateMail","selectAllMail","updateMailLabel","resetSelectedMail","selectCurrentMail","EmailApp","query","setQuery","sidebarOpen","setSidebarOpen","composeOpen","setComposeOpen","toggleCompose","dispatch","store","state","email","params","q","folder","label","show"],"mappings":"yKAAA;AACA,OAASA,SAAT,KAA0B,kBAA1B,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,QAA9B,KAA8C,OAA9C,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,QADF,CAEEC,UAFF,CAGEC,WAHF,CAIEC,YAJF,CAKEC,aALF,CAMEC,eANF,CAOEC,iBAPF,CAQEC,iBARF,KASO,SATP,CAWA;AACA,MAAO,mCAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB;AACA,cAA0Bd,QAAQ,CAAC,EAAD,CAAlC,wCAAOe,KAAP,eAAcC,QAAd,eACA,eAAsChB,QAAQ,CAAC,KAAD,CAA9C,yCAAOiB,WAAP,eAAoBC,cAApB,eACA,eAAsClB,QAAQ,CAAC,KAAD,CAA9C,yCAAOmB,WAAP,eAAoBC,cAApB,eAEA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAMD,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAAtB,CAEA;AACA,GAAMG,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CACA,GAAMmB,CAAAA,KAAK,CAAGlB,WAAW,CAAC,SAAAmB,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAV,EAAN,CAAzB,CAEA;AACA,GAAMC,CAAAA,MAAM,CAAG7B,SAAS,EAAxB,CAEA;AACAE,SAAS,CAAC,UAAM,CACduB,QAAQ,CAAChB,QAAQ,CAAC,CAAEqB,CAAC,CAAEZ,KAAK,EAAI,EAAd,CAAkBa,MAAM,CAAEF,MAAM,CAACE,MAAP,EAAiB,OAA3C,CAAoDC,KAAK,CAAEH,MAAM,CAACG,KAAP,EAAgB,EAA3E,CAAD,CAAT,CAAR,CACD,CAFQ,CAEN,CAACd,KAAD,CAAQW,MAAM,CAACE,MAAf,CAAuBF,MAAM,CAACG,KAA9B,CAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EACE,KAAK,CAAEN,KADT,CAEE,QAAQ,CAAED,QAFZ,CAGE,QAAQ,CAAEhB,QAHZ,CAIE,WAAW,CAAEW,WAJf,CAKE,aAAa,CAAEI,aALjB,CAME,cAAc,CAAEH,cANlB,CAOE,iBAAiB,CAAEN,iBAPrB,EADF,cAUE,YAAK,SAAS,CAAC,eAAf,uBACE,aAAK,SAAS,CAAC,cAAf,wBACE,YACE,SAAS,CAAET,UAAU,CAAC,sBAAD,CAAyB,CAC5C2B,IAAI,CAAEb,WADsC,CAAzB,CADvB,CAIE,OAAO,CAAE,yBAAMC,CAAAA,cAAc,CAAC,KAAD,CAApB,EAJX,EADF,cAOE,KAAC,KAAD,EACE,KAAK,CAAEK,KADT,CAEE,KAAK,CAAER,KAFT,CAGE,QAAQ,CAAEC,QAHZ,CAIE,QAAQ,CAAEM,QAJZ,CAKE,QAAQ,CAAEhB,QALZ,CAME,UAAU,CAAEC,UANd,CAOE,WAAW,CAAEC,WAPf,CAQE,WAAW,CAAEW,WARf,CASE,YAAY,CAAEV,YAThB,CAUE,aAAa,CAAEC,aAVjB,CAWE,aAAa,CAAEW,aAXjB,CAYE,cAAc,CAAEH,cAZlB,CAaE,eAAe,CAAEP,eAbnB,CAcE,iBAAiB,CAAEE,iBAdrB,CAeE,iBAAiB,CAAED,iBAfrB,EAPF,GADF,EAVF,GADF,CAwCD,CA7DD,CA+DA,cAAeE,CAAAA,QAAf","sourcesContent":["// ** React Imports\r\nimport { useParams } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Email App Component Imports\r\nimport Mails from './Mails'\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMails,\r\n  selectMail,\r\n  updateMails,\r\n  paginateMail,\r\n  selectAllMail,\r\n  updateMailLabel,\r\n  resetSelectedMail,\r\n  selectCurrentMail\r\n} from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [query, setQuery] = useState('')\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n\r\n  // ** Toggle Compose Function\r\n  const toggleCompose = () => setComposeOpen(!composeOpen)\r\n\r\n  // ** Store Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.email)\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        getMails={getMails}\r\n        sidebarOpen={sidebarOpen}\r\n        toggleCompose={toggleCompose}\r\n        setSidebarOpen={setSidebarOpen}\r\n        resetSelectedMail={resetSelectedMail}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-body'>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: sidebarOpen\r\n            })}\r\n            onClick={() => setSidebarOpen(false)}\r\n          ></div>\r\n          <Mails\r\n            store={store}\r\n            query={query}\r\n            setQuery={setQuery}\r\n            dispatch={dispatch}\r\n            getMails={getMails}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            composeOpen={composeOpen}\r\n            paginateMail={paginateMail}\r\n            selectAllMail={selectAllMail}\r\n            toggleCompose={toggleCompose}\r\n            setSidebarOpen={setSidebarOpen}\r\n            updateMailLabel={updateMailLabel}\r\n            selectCurrentMail={selectCurrentMail}\r\n            resetSelectedMail={resetSelectedMail}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailApp\r\n"]},"metadata":{},"sourceType":"module"}