{"ast":null,"code":"//** React Imports\nimport{useEffect}from'react';// ** Store & Actions\nimport{handleRTL}from'@store/layout';import{useDispatch,useSelector}from'react-redux';export const useRTL=()=>{// ** Store Vars\nconst dispatch=useDispatch();const isRtl=useSelector(state=>state.layout.isRTL);// ** Return a wrapped version of useState's setter function\nconst setValue=value=>{dispatch(handleRTL(value));};useEffect(()=>{// ** Get HTML Tag\nconst element=document.getElementsByTagName('html')[0];// ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\nif(isRtl){element.setAttribute('dir','rtl');}else{element.setAttribute('dir','ltr');}},[isRtl]);return[isRtl,setValue];};","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/utility/hooks/useRTL.js"],"names":["useEffect","handleRTL","useDispatch","useSelector","useRTL","dispatch","isRtl","state","layout","isRTL","setValue","value","element","document","getElementsByTagName","setAttribute"],"mappings":"AAAA;AACA,OAASA,SAAT,KAA0B,OAA1B,CAEA;AACA,OAASC,SAAT,KAA0B,eAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAO,MAAMC,CAAAA,MAAM,CAAG,IAAM,CAC1B;AACA,KAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CACA,KAAMI,CAAAA,KAAK,CAAGH,WAAW,CAACI,KAAK,EAAIA,KAAK,CAACC,MAAN,CAAaC,KAAvB,CAAzB,CAEA;AACA,KAAMC,CAAAA,QAAQ,CAAGC,KAAK,EAAI,CACxBN,QAAQ,CAACJ,SAAS,CAACU,KAAD,CAAV,CAAR,CACD,CAFD,CAIAX,SAAS,CAAC,IAAM,CACd;AACA,KAAMY,CAAAA,OAAO,CAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAhB,CAEA;AACA,GAAIR,KAAJ,CAAW,CACTM,OAAO,CAACG,YAAR,CAAqB,KAArB,CAA4B,KAA5B,EACD,CAFD,IAEO,CACLH,OAAO,CAACG,YAAR,CAAqB,KAArB,CAA4B,KAA5B,EACD,CACF,CAVQ,CAUN,CAACT,KAAD,CAVM,CAAT,CAYA,MAAO,CAACA,KAAD,CAAQI,QAAR,CAAP,CACD,CAvBM","sourcesContent":["//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    dispatch(handleRTL(value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}