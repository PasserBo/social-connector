{"ast":null,"code":"import { useState, useCallback } from 'react';\n\nfunction useForceUpdate() {\n  var _React$useState = useState(0),\n      count = _React$useState[0],\n      setCount = _React$useState[1];\n\n  return useCallback(function () {\n    return setCount(count + 1);\n  }, [count]);\n}\n\nexport { useForceUpdate };","map":{"version":3,"sources":["../../src/hooks/use-force-update.ts"],"names":["useForceUpdate","count","setCount","React"],"mappings":";;SAKgBA,c,GAAAA;wBACYG,QAAAA,CAAAA,CAAAA,C;MAAnBF,KAAAA,GAAAA,eAAAA,CAAAA,CAAAA,C;MAAOC,QAAAA,GAAAA,eAAAA,CAAAA,CAAAA,C;;AACd,SAAO,WAAA,CAAkB,YAAA;AAAA,WAAMA,QAAQ,CAACD,KAAK,GAApB,CAAc,CAAd;AAAlB,GAAA,EAA6C,CAApD,KAAoD,CAA7C,CAAP;AACD","sourcesContent":["import * as React from 'react';\n\n/**\n * React hook for force a component to re-render\n */\nexport function useForceUpdate() {\n  const [count, setCount] = React.useState(0);\n  return React.useCallback(() => setCount(count + 1), [count]);\n}\n"]},"metadata":{},"sourceType":"module"}