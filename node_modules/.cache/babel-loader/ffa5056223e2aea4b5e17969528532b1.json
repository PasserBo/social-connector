{"ast":null,"code":"// ** React Imports\nimport{Fragment}from'react';// ** Third Party Components\nimport*as yup from'yup';import{Check}from'react-feather';import{toast}from'react-toastify';import{useForm,Controller}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';// ** Custom Components\nimport Avatar from'@components/avatar';// ** Reactstrap Imports\nimport{Card,CardHeader,CardTitle,CardBody,Button,Form,Label,Input,FormFeedback}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ValidationOnChange=()=>{const SignupSchema=yup.object().shape({email:yup.string().email().required(),lastName:yup.string().min(3).required(),firstName:yup.string().min(3).required(),password:yup.string().min(6).required()});// ** Hooks\nconst{reset,control,handleSubmit,formState:{errors}}=useForm({mode:'onChange',resolver:yupResolver(SignupSchema)});const onSubmit=data=>{if(Object.values(data).every(field=>field.length>0)){toast.success(/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"toastify-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"success\",icon:/*#__PURE__*/_jsx(Check,{size:12})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title\",children:\"Form Submitted!\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"toastify-body\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"list-unstyled mb-0\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"firstName\"}),\": \",data.firstName]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"lastName\"}),\": \",data.lastName]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"email\"}),\": \",data.email]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"password\"}),\": \",data.password]})]})})]}),{icon:false,hideProgressBar:true});}};const handleReset=()=>{reset({email:'',password:'',firstName:'',lastName:''});};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Validation Schema With OnChange\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"firstName\",children:\"First Name\"}),/*#__PURE__*/_jsx(Controller,{id:\"firstName\",name:\"firstName\",defaultValue:\"\",control:control,render:_ref=>{let{field}=_ref;return/*#__PURE__*/_jsx(Input,{...field,placeholder:\"Bruce\",invalid:errors.firstName&&true});}}),errors.firstName&&/*#__PURE__*/_jsx(FormFeedback,{children:errors.firstName.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"lastName\",children:\"Last Name\"}),/*#__PURE__*/_jsx(Controller,{id:\"lastName\",name:\"lastName\",defaultValue:\"\",control:control,render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/_jsx(Input,{...field,placeholder:\"Wayne\",invalid:errors.lastName&&true});}}),errors.lastName&&/*#__PURE__*/_jsx(FormFeedback,{children:errors.lastName.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(Controller,{id:\"email\",name:\"email\",defaultValue:\"\",control:control,render:_ref3=>{let{field}=_ref3;return/*#__PURE__*/_jsx(Input,{...field,type:\"email\",placeholder:\"bruce.wayne@email.com\",invalid:errors.email&&true});}}),errors.email&&/*#__PURE__*/_jsx(FormFeedback,{children:errors.email.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(Controller,{id:\"password\",name:\"password\",defaultValue:\"\",control:control,render:_ref4=>{let{field}=_ref4;return/*#__PURE__*/_jsx(Input,{...field,type:\"password\",placeholder:\"Password\",invalid:errors.password&&true});}}),errors.password&&/*#__PURE__*/_jsx(FormFeedback,{children:errors.password.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(Button,{className:\"me-1\",color:\"primary\",type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{outline:true,color:\"secondary\",type:\"reset\",onClick:handleReset,children:\"Reset\"})]})]})})]});};export default ValidationOnChange;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/forms/validation/ValidationSchema.js"],"names":["Fragment","yup","Check","toast","useForm","Controller","yupResolver","Avatar","Card","CardHeader","CardTitle","CardBody","Button","Form","Label","Input","FormFeedback","ValidationOnChange","SignupSchema","object","shape","email","string","required","lastName","min","firstName","password","reset","control","handleSubmit","formState","errors","mode","resolver","onSubmit","data","Object","values","every","field","length","success","icon","hideProgressBar","handleReset","message"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport * as yup from 'yup'\r\nimport { Check } from 'react-feather'\r\nimport { toast } from 'react-toastify'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, Form, Label, Input, FormFeedback } from 'reactstrap'\r\n\r\nconst ValidationOnChange = () => {\r\n  const SignupSchema = yup.object().shape({\r\n    email: yup.string().email().required(),\r\n    lastName: yup.string().min(3).required(),\r\n    firstName: yup.string().min(3).required(),\r\n    password: yup.string().min(6).required()\r\n  })\r\n\r\n  // ** Hooks\r\n  const {\r\n    reset,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ mode: 'onChange', resolver: yupResolver(SignupSchema) })\r\n\r\n  const onSubmit = data => {\r\n    if (Object.values(data).every(field => field.length > 0)) {\r\n      toast.success(\r\n        <Fragment>\r\n          <div className='toastify-header'>\r\n            <div className='title-wrapper'>\r\n              <Avatar size='sm' color='success' icon={<Check size={12} />} />\r\n              <h6 className='toast-title'>Form Submitted!</h6>\r\n            </div>\r\n          </div>\r\n          <div className='toastify-body'>\r\n            <ul className='list-unstyled mb-0'>\r\n              <li>\r\n                <strong>firstName</strong>: {data.firstName}\r\n              </li>\r\n              <li>\r\n                <strong>lastName</strong>: {data.lastName}\r\n              </li>\r\n              <li>\r\n                <strong>email</strong>: {data.email}\r\n              </li>\r\n              <li>\r\n                <strong>password</strong>: {data.password}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Fragment>,\r\n        { icon: false, hideProgressBar: true }\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    reset({\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Validation Schema With OnChange</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='firstName'>\r\n              First Name\r\n            </Label>\r\n            <Controller\r\n              id='firstName'\r\n              name='firstName'\r\n              defaultValue=''\r\n              control={control}\r\n              render={({ field }) => <Input {...field} placeholder='Bruce' invalid={errors.firstName && true} />}\r\n            />\r\n            {errors.firstName && <FormFeedback>{errors.firstName.message}</FormFeedback>}\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='lastName'>\r\n              Last Name\r\n            </Label>\r\n            <Controller\r\n              id='lastName'\r\n              name='lastName'\r\n              defaultValue=''\r\n              control={control}\r\n              render={({ field }) => <Input {...field} placeholder='Wayne' invalid={errors.lastName && true} />}\r\n            />\r\n            {errors.lastName && <FormFeedback>{errors.lastName.message}</FormFeedback>}\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='email'>\r\n              Email\r\n            </Label>\r\n            <Controller\r\n              id='email'\r\n              name='email'\r\n              defaultValue=''\r\n              control={control}\r\n              render={({ field }) => (\r\n                <Input {...field} type='email' placeholder='bruce.wayne@email.com' invalid={errors.email && true} />\r\n              )}\r\n            />\r\n            {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='password'>\r\n              Password\r\n            </Label>\r\n            <Controller\r\n              id='password'\r\n              name='password'\r\n              defaultValue=''\r\n              control={control}\r\n              render={({ field }) => (\r\n                <Input {...field} type='password' placeholder='Password' invalid={errors.password && true} />\r\n              )}\r\n            />\r\n            {errors.password && <FormFeedback>{errors.password.message}</FormFeedback>}\r\n          </div>\r\n          <div className='d-flex'>\r\n            <Button className='me-1' color='primary' type='submit'>\r\n              Submit\r\n            </Button>\r\n            <Button outline color='secondary' type='reset' onClick={handleReset}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ValidationOnChange\r\n"]},"metadata":{},"sourceType":"module"}