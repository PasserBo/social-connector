{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/pages/account-settings/AccountTabContent.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment } from 'react'; // ** Third Party Components\n\nimport Select from 'react-select';\nimport Cleave from 'cleave.js/react';\nimport { useForm, Controller } from 'react-hook-form';\nimport 'cleave.js/dist/addons/cleave-phone.us'; // ** Reactstrap Imports\n\nimport { Row, Col, Form, Card, Input, Label, Button, CardBody, CardTitle, CardHeader, FormFeedback } from 'reactstrap'; // ** Utils\n\nimport { selectThemeColors } from '@utils'; // ** Stacks Transactions\n\nimport { bufferCVFromString, callReadOnlyFunction } from '@stacks/transactions';\nimport { StacksTestnet } from '@stacks/network'; // Auth Details\n// const address = Session.address.toString()\n// STX Query \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = 'ST39EMTZG4P7D55FMEQXEB8ZEQEK0ECBHB1J6QD63';\nconst contractName = 'vip-burn';\nconst functionName = 'get-last-token-id';\nconst buffer = bufferCVFromString('foo');\nconst network = new StacksTestnet();\nconst senderAddress = 'ST39EMTZG4P7D55FMEQXEB8ZEQEK0ECBHB1J6QD63';\nconst options = {\n  contractAddress,\n  contractName,\n  functionName,\n  functionArgs: [buffer],\n  network,\n  senderAddress\n};\n\nconst walletFaris = async () => {\n  await callReadOnlyFunction(options);\n};\n\nconst countryOptions = [{\n  value: 'uk',\n  label: 'UK'\n}, {\n  value: 'usa',\n  label: 'USA'\n}, {\n  value: 'france',\n  label: 'France'\n}, {\n  value: 'russia',\n  label: 'Russia'\n}, {\n  value: 'canada',\n  label: 'Canada'\n}];\nconst languageOptions = [{\n  value: 'english',\n  label: 'English'\n}, {\n  value: 'spanish',\n  label: 'Spanish'\n}, {\n  value: 'french',\n  label: 'French'\n}, {\n  value: 'portuguese',\n  label: 'Portuguese'\n}, {\n  value: 'dutch',\n  label: 'Dutch'\n}];\nconst currencyOptions = [{\n  value: 'FARI',\n  label: 'Bitfari'\n}, {\n  value: 'BTC',\n  label: 'Bitcoin'\n}, {\n  value: 'STX',\n  label: 'Stacks'\n}, {\n  value: 'USDA',\n  label: 'USDA'\n}];\nconst timeZoneOptions = [{\n  value: '(GMT-12:00) International Date Line West',\n  label: '(GMT-12:00) International Date Line West'\n}, {\n  value: '(GMT-11:00) Midway Island, Samoa',\n  label: '(GMT-11:00) Midway Island, Samoa'\n}, {\n  value: '(GMT-10:00) Hawaii',\n  label: '(GMT-10:00) Hawaii'\n}, {\n  value: '(GMT-09:00) Alaska',\n  label: '(GMT-09:00) Alaska'\n}, {\n  value: '(GMT-08:00) Pacific Time (US & Canada)',\n  label: '(GMT-08:00) Pacific Time (US & Canada)'\n}, {\n  value: '(GMT-08:00) Tijuana, Baja California',\n  label: '(GMT-08:00) Tijuana, Baja California'\n}, {\n  value: '(GMT-07:00) Arizona',\n  label: '(GMT-07:00) Arizona'\n}, {\n  value: '(GMT-07:00) Chihuahua, La Paz, Mazatlan',\n  label: '(GMT-07:00) Chihuahua, La Paz, Mazatlan'\n}, {\n  value: '(GMT-07:00) Mountain Time (US & Canada)',\n  label: '(GMT-07:00) Mountain Time (US & Canada)'\n}, {\n  value: '(GMT-06:00) Central America',\n  label: '(GMT-06:00) Central America'\n}, {\n  value: '(GMT-06:00) Central Time (US & Canada)',\n  label: '(GMT-06:00) Central Time (US & Canada)'\n}, {\n  value: '(GMT-06:00) Guadalajara, Mexico City, Monterrey',\n  label: '(GMT-06:00) Guadalajara, Mexico City, Monterrey'\n}, {\n  value: '(GMT-06:00) Saskatchewan',\n  label: '(GMT-06:00) Saskatchewan'\n}, {\n  value: '(GMT-05:00) Bogota, Lima, Quito, Rio Branco',\n  label: '(GMT-05:00) Bogota, Lima, Quito, Rio Branco'\n}, {\n  value: '(GMT-05:00) Eastern Time (US & Canada)',\n  label: '(GMT-05:00) Eastern Time (US & Canada)'\n}, {\n  value: '(GMT-05:00) Indiana (East)',\n  label: '(GMT-05:00) Indiana (East)'\n}, {\n  value: '(GMT-04:00) Atlantic Time (Canada)',\n  label: '(GMT-04:00) Atlantic Time (Canada)'\n}, {\n  value: '(GMT-04:00) Caracas, La Paz',\n  label: '(GMT-04:00) Caracas, La Paz'\n}, {\n  value: '(GMT-04:00) Manaus',\n  label: '(GMT-04:00) Manaus'\n}, {\n  value: '(GMT-04:00) Santiago',\n  label: '(GMT-04:00) Santiago'\n}, {\n  value: '(GMT-03:30) Newfoundland',\n  label: '(GMT-03:30) Newfoundland'\n}];\n\nconst AccountTabs = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  // ** Hooks\n  const defaultValues = {\n    lastName: '',\n    firstName: data.fullName.split(' ')[0]\n  };\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues\n  });\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      return null;\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h4\",\n          children: \"Profile Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        className: \"py-2 my-25\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"YOU HAVE **\", walletFaris, \"** FARIS \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountTabs, \"aDSyuymgV+5DqWTkYw510NJivI4=\", false, function () {\n  return [useForm];\n});\n\n_c = AccountTabs;\nexport default AccountTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountTabs\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/pages/account-settings/AccountTabContent.js"],"names":["Fragment","Select","Cleave","useForm","Controller","Row","Col","Form","Card","Input","Label","Button","CardBody","CardTitle","CardHeader","FormFeedback","selectThemeColors","bufferCVFromString","callReadOnlyFunction","StacksTestnet","contractAddress","contractName","functionName","buffer","network","senderAddress","options","functionArgs","walletFaris","countryOptions","value","label","languageOptions","currencyOptions","timeZoneOptions","AccountTabs","data","defaultValues","lastName","firstName","fullName","split","control","setError","handleSubmit","formState","errors","onSubmit","Object","values","every","field","length","key","type"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport Cleave from 'cleave.js/react'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Form, Card, Input, Label, Button, CardBody, CardTitle, CardHeader, FormFeedback } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Stacks Transactions\r\nimport { bufferCVFromString, callReadOnlyFunction } from '@stacks/transactions'\r\nimport { StacksTestnet } from '@stacks/network'\r\n \r\n\r\n// Auth Details\r\n// const address = Session.address.toString()\r\n\r\n// STX Query \r\nconst contractAddress = 'ST39EMTZG4P7D55FMEQXEB8ZEQEK0ECBHB1J6QD63'\r\nconst contractName = 'vip-burn'\r\nconst functionName = 'get-last-token-id'\r\nconst buffer = bufferCVFromString('foo')\r\nconst network = new StacksTestnet()\r\nconst senderAddress = 'ST39EMTZG4P7D55FMEQXEB8ZEQEK0ECBHB1J6QD63'\r\n\r\nconst options = {\r\n  contractAddress,\r\n  contractName,\r\n  functionName,\r\n  functionArgs: [buffer],\r\n  network,\r\n  senderAddress\r\n}\r\n\r\nconst walletFaris = async () => { await callReadOnlyFunction(options) }\r\n\r\nconst countryOptions = [\r\n  { value: 'uk', label: 'UK' },\r\n  { value: 'usa', label: 'USA' },\r\n  { value: 'france', label: 'France' },\r\n  { value: 'russia', label: 'Russia' },\r\n  { value: 'canada', label: 'Canada' }\r\n]\r\n\r\nconst languageOptions = [\r\n  { value: 'english', label: 'English' },\r\n  { value: 'spanish', label: 'Spanish' },\r\n  { value: 'french', label: 'French' },\r\n  { value: 'portuguese', label: 'Portuguese' },\r\n  { value: 'dutch', label: 'Dutch' }\r\n]\r\n\r\nconst currencyOptions = [\r\n  { value: 'FARI', label: 'Bitfari' },\r\n  { value: 'BTC', label: 'Bitcoin' },\r\n  { value: 'STX', label: 'Stacks' },\r\n  { value: 'USDA', label: 'USDA' }\r\n]\r\n\r\nconst timeZoneOptions = [\r\n  { value: '(GMT-12:00) International Date Line West', label: '(GMT-12:00) International Date Line West' },\r\n  { value: '(GMT-11:00) Midway Island, Samoa', label: '(GMT-11:00) Midway Island, Samoa' },\r\n  { value: '(GMT-10:00) Hawaii', label: '(GMT-10:00) Hawaii' },\r\n  { value: '(GMT-09:00) Alaska', label: '(GMT-09:00) Alaska' },\r\n  { value: '(GMT-08:00) Pacific Time (US & Canada)', label: '(GMT-08:00) Pacific Time (US & Canada)' },\r\n  { value: '(GMT-08:00) Tijuana, Baja California', label: '(GMT-08:00) Tijuana, Baja California' },\r\n  { value: '(GMT-07:00) Arizona', label: '(GMT-07:00) Arizona' },\r\n  { value: '(GMT-07:00) Chihuahua, La Paz, Mazatlan', label: '(GMT-07:00) Chihuahua, La Paz, Mazatlan' },\r\n  { value: '(GMT-07:00) Mountain Time (US & Canada)', label: '(GMT-07:00) Mountain Time (US & Canada)' },\r\n  { value: '(GMT-06:00) Central America', label: '(GMT-06:00) Central America' },\r\n  { value: '(GMT-06:00) Central Time (US & Canada)', label: '(GMT-06:00) Central Time (US & Canada)' },\r\n  {\r\n    value: '(GMT-06:00) Guadalajara, Mexico City, Monterrey',\r\n    label: '(GMT-06:00) Guadalajara, Mexico City, Monterrey'\r\n  },\r\n  { value: '(GMT-06:00) Saskatchewan', label: '(GMT-06:00) Saskatchewan' },\r\n  { value: '(GMT-05:00) Bogota, Lima, Quito, Rio Branco', label: '(GMT-05:00) Bogota, Lima, Quito, Rio Branco' },\r\n  { value: '(GMT-05:00) Eastern Time (US & Canada)', label: '(GMT-05:00) Eastern Time (US & Canada)' },\r\n  { value: '(GMT-05:00) Indiana (East)', label: '(GMT-05:00) Indiana (East)' },\r\n  { value: '(GMT-04:00) Atlantic Time (Canada)', label: '(GMT-04:00) Atlantic Time (Canada)' },\r\n  { value: '(GMT-04:00) Caracas, La Paz', label: '(GMT-04:00) Caracas, La Paz' },\r\n  { value: '(GMT-04:00) Manaus', label: '(GMT-04:00) Manaus' },\r\n  { value: '(GMT-04:00) Santiago', label: '(GMT-04:00) Santiago' },\r\n  { value: '(GMT-03:30) Newfoundland', label: '(GMT-03:30) Newfoundland' }\r\n]\r\n \r\nconst AccountTabs = ({ data }) => {\r\n  // ** Hooks\r\n  const defaultValues = {\r\n    lastName: '',\r\n    firstName: data.fullName.split(' ')[0]\r\n  }\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n   const onSubmit = data => {\r\n    if (Object.values(data).every(field => field.length > 0)) {\r\n      return null\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Profile Details</CardTitle>\r\n        </CardHeader>\r\n        <CardBody className='py-2 my-25'>\r\n          <div className='d-flex'> \r\n             <b>YOU HAVE **{ walletFaris }** FARIS </b>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n        </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountTabs"]},"metadata":{},"sourceType":"module"}