{"ast":null,"code":"// ** React Imports\nimport{useEffect,useState}from'react';// ** Custom Hooks\nimport{useSkin}from'@hooks/useSkin';// ** Third Party Components\nimport classnames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";const BlankLayout=_ref=>{let{children}=_ref;// ** States\nconst[isMounted,setIsMounted]=useState(false);// ** Hooks\nconst{skin}=useSkin();useEffect(()=>{setIsMounted(true);return()=>setIsMounted(false);},[]);if(!isMounted){return null;}return/*#__PURE__*/_jsx(\"div\",{className:classnames('blank-page',{'dark-layout':skin==='dark'}),children:/*#__PURE__*/_jsx(\"div\",{className:\"app-content content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-body\",children:children})})})});};export default BlankLayout;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/@core/layouts/BlankLayout.js"],"names":["useEffect","useState","useSkin","classnames","BlankLayout","children","isMounted","setIsMounted","skin"],"mappings":"AAAA;AACA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA;AACA,OAASC,OAAT,KAAwB,gBAAxB,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,2CAEA,KAAMC,CAAAA,WAAW,CAAG,MAAkB,IAAjB,CAAEC,QAAF,CAAiB,MACpC;AACA,KAAM,CAACC,SAAD,CAAYC,YAAZ,EAA4BN,QAAQ,CAAC,KAAD,CAA1C,CAEA;AACA,KAAM,CAAEO,IAAF,EAAWN,OAAO,EAAxB,CAEAF,SAAS,CAAC,IAAM,CACdO,YAAY,CAAC,IAAD,CAAZ,CACA,MAAO,IAAMA,YAAY,CAAC,KAAD,CAAzB,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAI,CAACD,SAAL,CAAgB,CACd,MAAO,KAAP,CACD,CAED,mBACE,YACE,SAAS,CAAEH,UAAU,CAAC,YAAD,CAAe,CAClC,cAAeK,IAAI,GAAK,MADU,CAAf,CADvB,uBAKE,YAAK,SAAS,CAAC,qBAAf,uBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,YAAK,SAAS,CAAC,cAAf,UAA+BH,QAA/B,EADF,EADF,EALF,EADF,CAaD,CA7BD,CA+BA,cAAeD,CAAAA,WAAf","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\nconst BlankLayout = ({ children }) => {\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('blank-page', {\r\n        'dark-layout': skin === 'dark'\r\n      })}\r\n    >\r\n      <div className='app-content content'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n"]},"metadata":{},"sourceType":"module"}