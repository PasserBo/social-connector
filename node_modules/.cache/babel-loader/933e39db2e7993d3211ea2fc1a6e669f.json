{"ast":null,"code":"// ** React Imports\nimport{Link}from'react-router-dom';// ** Custom Components\nimport Avatar from'@components/avatar';// ** Blank Avatar Image\nimport blankAvatar from'@src/assets/images/avatars/avatar-blank.png';// ** Third Party Components\nimport classnames from'classnames';import{ReactSortable}from'react-sortablejs';import PerfectScrollbar from'react-perfect-scrollbar';import{Menu,Search,MoreVertical}from'react-feather';// ** Reactstrap Imports\nimport{Input,Badge,InputGroup,DropdownMenu,DropdownItem,InputGroupText,DropdownToggle,UncontrolledDropdown}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Tasks=props=>{// ** Props\nconst{query,tasks,params,setSort,dispatch,getTasks,setQuery,updateTask,selectTask,reOrderTasks,handleTaskSidebar,handleMainSidebar}=props;// ** Function to selectTask on click\nconst handleTaskClick=obj=>{dispatch(selectTask(obj));handleTaskSidebar();};// ** Returns avatar color based on task tag\nconst resolveAvatarVariant=tags=>{if(tags.includes('high'))return'light-primary';if(tags.includes('medium'))return'light-warning';if(tags.includes('low'))return'light-success';if(tags.includes('update'))return'light-danger';if(tags.includes('team'))return'light-info';return'light-primary';};// ** Renders task tags\nconst renderTags=arr=>{const badgeColor={team:'light-primary',low:'light-success',medium:'light-warning',high:'light-danger',update:'light-info'};return arr.map(item=>/*#__PURE__*/_jsx(Badge,{className:\"text-capitalize\",color:badgeColor[item],pill:true,children:item},item));};// ** Renders Avatar\nconst renderAvatar=obj=>{const item=obj.assignee;if(item.avatar===undefined||item.avatar===null){return/*#__PURE__*/_jsx(Avatar,{img:blankAvatar,imgHeight:\"32\",imgWidth:\"32\"});}else if(item.avatar!==''){return/*#__PURE__*/_jsx(Avatar,{img:item.avatar,imgHeight:\"32\",imgWidth:\"32\"});}else{return/*#__PURE__*/_jsx(Avatar,{color:resolveAvatarVariant(obj.tags),content:item.fullName,initials:true});}};const renderTasks=()=>{return/*#__PURE__*/_jsx(PerfectScrollbar,{className:\"list-group focus-task-list-wrapper\",options:{wheelPropagation:false},containerRef:ref=>{if(ref){ref._getBoundingClientRect=ref.getBoundingClientRect;ref.getBoundingClientRect=()=>{const original=ref._getBoundingClientRect();return{...original,height:Math.floor(original.height)};};}},children:tasks.length?/*#__PURE__*/_jsx(ReactSortable,{tag:\"ul\",list:tasks,handle:\".drag-icon\",className:\"focus-task-list media-list\",setList:newState=>dispatch(reOrderTasks(newState)),children:tasks.map(item=>{return/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleTaskClick(item),className:classnames('focus-item',{completed:item.isCompleted}),children:/*#__PURE__*/_jsxs(\"div\",{className:\"focus-title-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"focus-title-area\",children:[/*#__PURE__*/_jsx(MoreVertical,{className:\"drag-icon\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-check\",children:/*#__PURE__*/_jsx(Input,{type:\"checkbox\",id:item.title,checked:item.isCompleted,onClick:e=>e.stopPropagation(),onChange:e=>{e.stopPropagation();dispatch(updateTask({...item,isCompleted:e.target.checked}));}})}),/*#__PURE__*/_jsx(\"span\",{className:\"focus-title\",children:item.title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"focus-item-action mt-lg-0 mt-50\",children:[item.tags.length?/*#__PURE__*/_jsx(\"div\",{className:\"badge-wrapper me-1\",children:renderTags(item.tags)}):null,item.dueDate?/*#__PURE__*/_jsxs(\"small\",{className:\"text-nowrap text-muted me-1\",children:[new Date(item.dueDate).toLocaleString('default',{month:'short'}),' ',new Date(item.dueDate).getDate().toString().padStart(2,'0')]}):null,item.assignee?renderAvatar(item):null]})]})},item.id);})}):/*#__PURE__*/_jsx(\"div\",{className:\"no-results show\",children:/*#__PURE__*/_jsx(\"h5\",{children:\"No Goals Found\"})})});};// ** Function to getTasks based on search query\nconst handleFilter=e=>{setQuery(e.target.value);dispatch(getTasks(params));};// ** Function to getTasks based on sort\nconst handleSort=(e,val)=>{e.preventDefault();setSort(val);dispatch(getTasks({...params}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"focus-app-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app-fixed-search d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-toggle cursor-pointer d-block d-lg-none ms-1\",onClick:handleMainSidebar,children:/*#__PURE__*/_jsx(Menu,{size:21})}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex align-content-center justify-content-between w-100\",children:/*#__PURE__*/_jsxs(InputGroup,{className:\"input-group-merge\",children:[/*#__PURE__*/_jsx(InputGroupText,{children:/*#__PURE__*/_jsx(Search,{className:\"text-muted\",size:14})}),/*#__PURE__*/_jsx(Input,{placeholder:\"Search wishes\",value:query,onChange:handleFilter})]})}),/*#__PURE__*/_jsxs(UncontrolledDropdown,{children:[/*#__PURE__*/_jsx(DropdownToggle,{className:\"hide-arrow me-1\",tag:\"a\",href:\"/\",onClick:e=>e.preventDefault(),children:/*#__PURE__*/_jsx(MoreVertical,{className:\"text-body\",size:16})}),/*#__PURE__*/_jsxs(DropdownMenu,{end:true,children:[/*#__PURE__*/_jsx(DropdownItem,{tag:Link,to:\"/\",onClick:e=>handleSort(e,'title-asc'),children:\"Sort A-Z\"}),/*#__PURE__*/_jsx(DropdownItem,{tag:Link,to:\"/\",onClick:e=>handleSort(e,'title-desc'),children:\"Sort Z-A\"}),/*#__PURE__*/_jsx(DropdownItem,{tag:Link,to:\"/\",onClick:e=>handleSort(e,''),children:\"Reset Sort\"})]})]})]}),renderTasks()]});};export default Tasks;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/apps/focus/Tasks.js"],"names":["Link","Avatar","blankAvatar","classnames","ReactSortable","PerfectScrollbar","Menu","Search","MoreVertical","Input","Badge","InputGroup","DropdownMenu","DropdownItem","InputGroupText","DropdownToggle","UncontrolledDropdown","Tasks","props","query","tasks","params","setSort","dispatch","getTasks","setQuery","updateTask","selectTask","reOrderTasks","handleTaskSidebar","handleMainSidebar","handleTaskClick","obj","resolveAvatarVariant","tags","includes","renderTags","arr","badgeColor","team","low","medium","high","update","map","item","renderAvatar","assignee","avatar","undefined","fullName","renderTasks","wheelPropagation","ref","_getBoundingClientRect","getBoundingClientRect","original","height","Math","floor","length","newState","completed","isCompleted","title","e","stopPropagation","target","checked","dueDate","Date","toLocaleString","month","getDate","toString","padStart","id","handleFilter","value","handleSort","val","preventDefault"],"mappings":"AAAA;AACA,OAASA,IAAT,KAAqB,kBAArB,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA;AACA,MAAOC,CAAAA,WAAP,KAAwB,6CAAxB,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,YAAvB,KAA2C,eAA3C,CAEA;AACA,OACEC,KADF,CAEEC,KAFF,CAGEC,UAHF,CAIEC,YAJF,CAKEC,YALF,CAMEC,cANF,CAOEC,cAPF,CAQEC,oBARF,KASO,YATP,C,wFAWA,KAAMC,CAAAA,KAAK,CAAGC,KAAK,EAAI,CACrB;AACA,KAAM,CACJC,KADI,CAEJC,KAFI,CAGJC,MAHI,CAIJC,OAJI,CAKJC,QALI,CAMJC,QANI,CAOJC,QAPI,CAQJC,UARI,CASJC,UATI,CAUJC,YAVI,CAWJC,iBAXI,CAYJC,iBAZI,EAaFZ,KAbJ,CAeA;AACA,KAAMa,CAAAA,eAAe,CAAGC,GAAG,EAAI,CAC7BT,QAAQ,CAACI,UAAU,CAACK,GAAD,CAAX,CAAR,CACAH,iBAAiB,GAClB,CAHD,CAKA;AACA,KAAMI,CAAAA,oBAAoB,CAAGC,IAAI,EAAI,CACnC,GAAIA,IAAI,CAACC,QAAL,CAAc,MAAd,CAAJ,CAA2B,MAAO,eAAP,CAC3B,GAAID,IAAI,CAACC,QAAL,CAAc,QAAd,CAAJ,CAA6B,MAAO,eAAP,CAC7B,GAAID,IAAI,CAACC,QAAL,CAAc,KAAd,CAAJ,CAA0B,MAAO,eAAP,CAC1B,GAAID,IAAI,CAACC,QAAL,CAAc,QAAd,CAAJ,CAA6B,MAAO,cAAP,CAC7B,GAAID,IAAI,CAACC,QAAL,CAAc,MAAd,CAAJ,CAA2B,MAAO,YAAP,CAC3B,MAAO,eAAP,CACD,CAPD,CASA;AACA,KAAMC,CAAAA,UAAU,CAAGC,GAAG,EAAI,CACxB,KAAMC,CAAAA,UAAU,CAAG,CACjBC,IAAI,CAAE,eADW,CAEjBC,GAAG,CAAE,eAFY,CAGjBC,MAAM,CAAE,eAHS,CAIjBC,IAAI,CAAE,cAJW,CAKjBC,MAAM,CAAE,YALS,CAAnB,CAQA,MAAON,CAAAA,GAAG,CAACO,GAAJ,CAAQC,IAAI,eACjB,KAAC,KAAD,EAAO,SAAS,CAAC,iBAAjB,CAA8C,KAAK,CAAEP,UAAU,CAACO,IAAD,CAA/D,CAAuE,IAAI,KAA3E,UACGA,IADH,EAAwCA,IAAxC,CADK,CAAP,CAKD,CAdD,CAgBA;AACA,KAAMC,CAAAA,YAAY,CAAGd,GAAG,EAAI,CAC1B,KAAMa,CAAAA,IAAI,CAAGb,GAAG,CAACe,QAAjB,CAEA,GAAIF,IAAI,CAACG,MAAL,GAAgBC,SAAhB,EAA6BJ,IAAI,CAACG,MAAL,GAAgB,IAAjD,CAAuD,CACrD,mBAAO,KAAC,MAAD,EAAQ,GAAG,CAAE9C,WAAb,CAA0B,SAAS,CAAC,IAApC,CAAyC,QAAQ,CAAC,IAAlD,EAAP,CACD,CAFD,IAEO,IAAI2C,IAAI,CAACG,MAAL,GAAgB,EAApB,CAAwB,CAC7B,mBAAO,KAAC,MAAD,EAAQ,GAAG,CAAEH,IAAI,CAACG,MAAlB,CAA0B,SAAS,CAAC,IAApC,CAAyC,QAAQ,CAAC,IAAlD,EAAP,CACD,CAFM,IAEA,CACL,mBAAO,KAAC,MAAD,EAAQ,KAAK,CAAEf,oBAAoB,CAACD,GAAG,CAACE,IAAL,CAAnC,CAA+C,OAAO,CAAEW,IAAI,CAACK,QAA7D,CAAuE,QAAQ,KAA/E,EAAP,CACD,CACF,CAVD,CAYA,KAAMC,CAAAA,WAAW,CAAG,IAAM,CACxB,mBACE,KAAC,gBAAD,EACE,SAAS,CAAC,oCADZ,CAEE,OAAO,CAAE,CAAEC,gBAAgB,CAAE,KAApB,CAFX,CAGE,YAAY,CAAEC,GAAG,EAAI,CACnB,GAAIA,GAAJ,CAAS,CACPA,GAAG,CAACC,sBAAJ,CAA6BD,GAAG,CAACE,qBAAjC,CAEAF,GAAG,CAACE,qBAAJ,CAA4B,IAAM,CAChC,KAAMC,CAAAA,QAAQ,CAAGH,GAAG,CAACC,sBAAJ,EAAjB,CAEA,MAAO,CAAE,GAAGE,QAAL,CAAeC,MAAM,CAAEC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACC,MAApB,CAAvB,CAAP,CACD,CAJD,CAKD,CACF,CAbH,UAeGrC,KAAK,CAACwC,MAAN,cACC,KAAC,aAAD,EACE,GAAG,CAAC,IADN,CAEE,IAAI,CAAExC,KAFR,CAGE,MAAM,CAAC,YAHT,CAIE,SAAS,CAAC,4BAJZ,CAKE,OAAO,CAAEyC,QAAQ,EAAItC,QAAQ,CAACK,YAAY,CAACiC,QAAD,CAAb,CAL/B,UAOGzC,KAAK,CAACwB,GAAN,CAAUC,IAAI,EAAI,CACjB,mBACE,WAEE,OAAO,CAAE,IAAMd,eAAe,CAACc,IAAD,CAFhC,CAGE,SAAS,CAAE1C,UAAU,CAAC,YAAD,CAAe,CAClC2D,SAAS,CAAEjB,IAAI,CAACkB,WADkB,CAAf,CAHvB,uBAOE,aAAK,SAAS,CAAC,qBAAf,wBACE,aAAK,SAAS,CAAC,kBAAf,wBACE,KAAC,YAAD,EAAc,SAAS,CAAC,WAAxB,EADF,cAEE,YAAK,SAAS,CAAC,YAAf,uBACE,KAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,EAAE,CAAElB,IAAI,CAACmB,KAFX,CAGE,OAAO,CAAEnB,IAAI,CAACkB,WAHhB,CAIE,OAAO,CAAEE,CAAC,EAAIA,CAAC,CAACC,eAAF,EAJhB,CAKE,QAAQ,CAAED,CAAC,EAAI,CACbA,CAAC,CAACC,eAAF,GACA3C,QAAQ,CAACG,UAAU,CAAC,CAAE,GAAGmB,IAAL,CAAWkB,WAAW,CAAEE,CAAC,CAACE,MAAF,CAASC,OAAjC,CAAD,CAAX,CAAR,CACD,CARH,EADF,EAFF,cAcE,aAAM,SAAS,CAAC,aAAhB,UAA+BvB,IAAI,CAACmB,KAApC,EAdF,GADF,cAiBE,aAAK,SAAS,CAAC,iCAAf,WACGnB,IAAI,CAACX,IAAL,CAAU0B,MAAV,cAAmB,YAAK,SAAS,CAAC,oBAAf,UAAqCxB,UAAU,CAACS,IAAI,CAACX,IAAN,CAA/C,EAAnB,CAAuF,IAD1F,CAEGW,IAAI,CAACwB,OAAL,cACC,eAAO,SAAS,CAAC,6BAAjB,WACG,GAAIC,CAAAA,IAAJ,CAASzB,IAAI,CAACwB,OAAd,EAAuBE,cAAvB,CAAsC,SAAtC,CAAiD,CAAEC,KAAK,CAAE,OAAT,CAAjD,CADH,CACyE,GADzE,CAEG,GAAIF,CAAAA,IAAJ,CAASzB,IAAI,CAACwB,OAAd,EAAuBI,OAAvB,GAAiCC,QAAjC,GAA4CC,QAA5C,CAAqD,CAArD,CAAwD,GAAxD,CAFH,GADD,CAKG,IAPN,CAQG9B,IAAI,CAACE,QAAL,CAAgBD,YAAY,CAACD,IAAD,CAA5B,CAAqC,IARxC,GAjBF,GAPF,EACOA,IAAI,CAAC+B,EADZ,CADF,CAsCD,CAvCA,CAPH,EADD,cAkDC,YAAK,SAAS,CAAC,iBAAf,uBACE,sCADF,EAjEJ,EADF,CAwED,CAzED,CA2EA;AACA,KAAMC,CAAAA,YAAY,CAAGZ,CAAC,EAAI,CACxBxC,QAAQ,CAACwC,CAAC,CAACE,MAAF,CAASW,KAAV,CAAR,CACAvD,QAAQ,CAACC,QAAQ,CAACH,MAAD,CAAT,CAAR,CACD,CAHD,CAKA;AACA,KAAM0D,CAAAA,UAAU,CAAG,CAACd,CAAD,CAAIe,GAAJ,GAAY,CAC7Bf,CAAC,CAACgB,cAAF,GACA3D,OAAO,CAAC0D,GAAD,CAAP,CACAzD,QAAQ,CAACC,QAAQ,CAAC,CAAE,GAAGH,MAAL,CAAD,CAAT,CAAR,CACD,CAJD,CAMA,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,aAAK,SAAS,CAAC,4CAAf,wBACE,YAAK,SAAS,CAAC,sDAAf,CAAsE,OAAO,CAAES,iBAA/E,uBACE,KAAC,IAAD,EAAM,IAAI,CAAE,EAAZ,EADF,EADF,cAIE,YAAK,SAAS,CAAC,2DAAf,uBACE,MAAC,UAAD,EAAY,SAAS,CAAC,mBAAtB,wBACE,KAAC,cAAD,wBACE,KAAC,MAAD,EAAQ,SAAS,CAAC,YAAlB,CAA+B,IAAI,CAAE,EAArC,EADF,EADF,cAIE,KAAC,KAAD,EAAO,WAAW,CAAC,eAAnB,CAAmC,KAAK,CAAEX,KAA1C,CAAiD,QAAQ,CAAE0D,YAA3D,EAJF,GADF,EAJF,cAYE,MAAC,oBAAD,yBACE,KAAC,cAAD,EAAgB,SAAS,CAAC,iBAA1B,CAA4C,GAAG,CAAC,GAAhD,CAAoD,IAAI,CAAC,GAAzD,CAA6D,OAAO,CAAEZ,CAAC,EAAIA,CAAC,CAACgB,cAAF,EAA3E,uBACE,KAAC,YAAD,EAAc,SAAS,CAAC,WAAxB,CAAoC,IAAI,CAAE,EAA1C,EADF,EADF,cAIE,MAAC,YAAD,EAAc,GAAG,KAAjB,wBACE,KAAC,YAAD,EAAc,GAAG,CAAEjF,IAAnB,CAAyB,EAAE,CAAC,GAA5B,CAAgC,OAAO,CAAEiE,CAAC,EAAIc,UAAU,CAACd,CAAD,CAAI,WAAJ,CAAxD,sBADF,cAIE,KAAC,YAAD,EAAc,GAAG,CAAEjE,IAAnB,CAAyB,EAAE,CAAC,GAA5B,CAAgC,OAAO,CAAEiE,CAAC,EAAIc,UAAU,CAACd,CAAD,CAAI,YAAJ,CAAxD,sBAJF,cAOE,KAAC,YAAD,EAAc,GAAG,CAAEjE,IAAnB,CAAyB,EAAE,CAAC,GAA5B,CAAgC,OAAO,CAAEiE,CAAC,EAAIc,UAAU,CAACd,CAAD,CAAI,EAAJ,CAAxD,wBAPF,GAJF,GAZF,GADF,CA8BGd,WAAW,EA9Bd,GADF,CAkCD,CAzLD,CA2LA,cAAelC,CAAAA,KAAf","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Blank Avatar Image\r\nimport blankAvatar from '@src/assets/images/avatars/avatar-blank.png'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { Menu, Search, MoreVertical } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Input,\r\n  Badge,\r\n  InputGroup,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  InputGroupText,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst Tasks = props => {\r\n  // ** Props\r\n  const {\r\n    query,\r\n    tasks,\r\n    params,\r\n    setSort,\r\n    dispatch,\r\n    getTasks,\r\n    setQuery,\r\n    updateTask,\r\n    selectTask,\r\n    reOrderTasks,\r\n    handleTaskSidebar,\r\n    handleMainSidebar\r\n  } = props\r\n\r\n  // ** Function to selectTask on click\r\n  const handleTaskClick = obj => {\r\n    dispatch(selectTask(obj))\r\n    handleTaskSidebar()\r\n  }\r\n\r\n  // ** Returns avatar color based on task tag\r\n  const resolveAvatarVariant = tags => {\r\n    if (tags.includes('high')) return 'light-primary'\r\n    if (tags.includes('medium')) return 'light-warning'\r\n    if (tags.includes('low')) return 'light-success'\r\n    if (tags.includes('update')) return 'light-danger'\r\n    if (tags.includes('team')) return 'light-info'\r\n    return 'light-primary'\r\n  }\r\n\r\n  // ** Renders task tags\r\n  const renderTags = arr => {\r\n    const badgeColor = {\r\n      team: 'light-primary',\r\n      low: 'light-success',\r\n      medium: 'light-warning',\r\n      high: 'light-danger',\r\n      update: 'light-info'\r\n    }\r\n\r\n    return arr.map(item => (\r\n      <Badge className='text-capitalize' key={item} color={badgeColor[item]} pill>\r\n        {item}\r\n      </Badge>\r\n    ))\r\n  }\r\n\r\n  // ** Renders Avatar\r\n  const renderAvatar = obj => {\r\n    const item = obj.assignee\r\n\r\n    if (item.avatar === undefined || item.avatar === null) {\r\n      return <Avatar img={blankAvatar} imgHeight='32' imgWidth='32' />\r\n    } else if (item.avatar !== '') {\r\n      return <Avatar img={item.avatar} imgHeight='32' imgWidth='32' />\r\n    } else {\r\n      return <Avatar color={resolveAvatarVariant(obj.tags)} content={item.fullName} initials />\r\n    }\r\n  }\r\n\r\n  const renderTasks = () => {\r\n    return (\r\n      <PerfectScrollbar\r\n        className='list-group focus-task-list-wrapper'\r\n        options={{ wheelPropagation: false }}\r\n        containerRef={ref => {\r\n          if (ref) {\r\n            ref._getBoundingClientRect = ref.getBoundingClientRect\r\n\r\n            ref.getBoundingClientRect = () => {\r\n              const original = ref._getBoundingClientRect()\r\n\r\n              return { ...original, height: Math.floor(original.height) }\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {tasks.length ? (\r\n          <ReactSortable\r\n            tag='ul'\r\n            list={tasks}\r\n            handle='.drag-icon'\r\n            className='focus-task-list media-list'\r\n            setList={newState => dispatch(reOrderTasks(newState))}\r\n          >\r\n            {tasks.map(item => {\r\n              return (\r\n                <li\r\n                  key={item.id}\r\n                  onClick={() => handleTaskClick(item)}\r\n                  className={classnames('focus-item', {\r\n                    completed: item.isCompleted\r\n                  })}\r\n                >\r\n                  <div className='focus-title-wrapper'>\r\n                    <div className='focus-title-area'>\r\n                      <MoreVertical className='drag-icon' />\r\n                      <div className='form-check'>\r\n                        <Input\r\n                          type='checkbox'\r\n                          id={item.title}\r\n                          checked={item.isCompleted}\r\n                          onClick={e => e.stopPropagation()}\r\n                          onChange={e => {\r\n                            e.stopPropagation()\r\n                            dispatch(updateTask({ ...item, isCompleted: e.target.checked }))\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <span className='focus-title'>{item.title}</span>\r\n                    </div>\r\n                    <div className='focus-item-action mt-lg-0 mt-50'>\r\n                      {item.tags.length ? <div className='badge-wrapper me-1'>{renderTags(item.tags)}</div> : null}\r\n                      {item.dueDate ? (\r\n                        <small className='text-nowrap text-muted me-1'>\r\n                          {new Date(item.dueDate).toLocaleString('default', { month: 'short' })}{' '}\r\n                          {new Date(item.dueDate).getDate().toString().padStart(2, '0')}\r\n                        </small>\r\n                      ) : null}\r\n                      {item.assignee ? renderAvatar(item) : null}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ReactSortable>\r\n        ) : (\r\n          <div className='no-results show'>\r\n            <h5>No Goals Found</h5>\r\n          </div>\r\n        )}\r\n      </PerfectScrollbar>\r\n    )\r\n  }\r\n\r\n  // ** Function to getTasks based on search query\r\n  const handleFilter = e => {\r\n    setQuery(e.target.value)\r\n    dispatch(getTasks(params))\r\n  }\r\n\r\n  // ** Function to getTasks based on sort\r\n  const handleSort = (e, val) => {\r\n    e.preventDefault()\r\n    setSort(val)\r\n    dispatch(getTasks({ ...params }))\r\n  }\r\n\r\n  return (\r\n    <div className='focus-app-list'>\r\n      <div className='app-fixed-search d-flex align-items-center'>\r\n        <div className='sidebar-toggle cursor-pointer d-block d-lg-none ms-1' onClick={handleMainSidebar}>\r\n          <Menu size={21} />\r\n        </div>\r\n        <div className='d-flex align-content-center justify-content-between w-100'>\r\n          <InputGroup className='input-group-merge'>\r\n            <InputGroupText>\r\n              <Search className='text-muted' size={14} />\r\n            </InputGroupText>\r\n            <Input placeholder='Search wishes' value={query} onChange={handleFilter} />\r\n          </InputGroup>\r\n        </div>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle className='hide-arrow me-1' tag='a' href='/' onClick={e => e.preventDefault()}>\r\n            <MoreVertical className='text-body' size={16} />\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            <DropdownItem tag={Link} to='/' onClick={e => handleSort(e, 'title-asc')}>\r\n              Sort A-Z\r\n            </DropdownItem>\r\n            <DropdownItem tag={Link} to='/' onClick={e => handleSort(e, 'title-desc')}>\r\n              Sort Z-A\r\n            </DropdownItem>\r\n            <DropdownItem tag={Link} to='/' onClick={e => handleSort(e, '')}>\r\n              Reset Sort\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n      {renderTasks()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n"]},"metadata":{},"sourceType":"module"}