{"ast":null,"code":"// ** Redux Imports\nimport{createSlice,createAsyncThunk}from'@reduxjs/toolkit';// ** Axios Imports\nimport axios from'axios';export const getAllData=createAsyncThunk('appUsers/getAllData',async()=>{const response=await axios.get('/api/users/list/all-data');return response.data;});export const getData=createAsyncThunk('appUsers/getData',async params=>{const response=await axios.get('/api/users/list/data',params);return{params,data:response.data.users,totalPages:response.data.total};});export const getUser=createAsyncThunk('appUsers/getUser',async id=>{const response=await axios.get('/api/users/user',{id});return response.data.user;});export const addUser=createAsyncThunk('appUsers/addUser',async(user,_ref)=>{let{dispatch,getState}=_ref;await axios.post('/apps/users/add-user',user);await dispatch(getData(getState().users.params));await dispatch(getAllData());return user;});export const deleteUser=createAsyncThunk('appUsers/deleteUser',async(id,_ref2)=>{let{dispatch,getState}=_ref2;await axios.delete('/apps/users/delete',{id});await dispatch(getData(getState().users.params));await dispatch(getAllData());return id;});export const appUsersSlice=createSlice({name:'appUsers',initialState:{data:[],total:1,params:{},allData:[],selectedUser:null},reducers:{},extraReducers:builder=>{builder.addCase(getAllData.fulfilled,(state,action)=>{state.allData=action.payload;}).addCase(getData.fulfilled,(state,action)=>{state.data=action.payload.data;state.params=action.payload.params;state.total=action.payload.totalPages;}).addCase(getUser.fulfilled,(state,action)=>{state.selectedUser=action.payload;});}});export default appUsersSlice.reducer;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/apps/user/store/index.js"],"names":["createSlice","createAsyncThunk","axios","getAllData","response","get","data","getData","params","users","totalPages","total","getUser","id","user","addUser","dispatch","getState","post","deleteUser","delete","appUsersSlice","name","initialState","allData","selectedUser","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"mappings":"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","sourcesContent":["// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\n// ** Axios Imports\r\nimport axios from 'axios'\r\n\r\nexport const getAllData = createAsyncThunk('appUsers/getAllData', async () => {\r\n  const response = await axios.get('/api/users/list/all-data')\r\n  return response.data\r\n})\r\n\r\nexport const getData = createAsyncThunk('appUsers/getData', async params => {\r\n  const response = await axios.get('/api/users/list/data', params)\r\n  return {\r\n    params,\r\n    data: response.data.users,\r\n    totalPages: response.data.total\r\n  }\r\n})\r\n\r\nexport const getUser = createAsyncThunk('appUsers/getUser', async id => {\r\n  const response = await axios.get('/api/users/user', { id })\r\n  return response.data.user\r\n})\r\n\r\nexport const addUser = createAsyncThunk('appUsers/addUser', async (user, { dispatch, getState }) => {\r\n  await axios.post('/apps/users/add-user', user)\r\n  await dispatch(getData(getState().users.params))\r\n  await dispatch(getAllData())\r\n  return user\r\n})\r\n\r\nexport const deleteUser = createAsyncThunk('appUsers/deleteUser', async (id, { dispatch, getState }) => {\r\n  await axios.delete('/apps/users/delete', { id })\r\n  await dispatch(getData(getState().users.params))\r\n  await dispatch(getAllData())\r\n  return id\r\n})\r\n\r\nexport const appUsersSlice = createSlice({\r\n  name: 'appUsers',\r\n  initialState: {\r\n    data: [],\r\n    total: 1,\r\n    params: {},\r\n    allData: [],\r\n    selectedUser: null\r\n  },\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(getAllData.fulfilled, (state, action) => {\r\n        state.allData = action.payload\r\n      })\r\n      .addCase(getData.fulfilled, (state, action) => {\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.totalPages\r\n      })\r\n      .addCase(getUser.fulfilled, (state, action) => {\r\n        state.selectedUser = action.payload\r\n      })\r\n  }\r\n})\r\n\r\nexport default appUsersSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}