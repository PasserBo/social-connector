{"ast":null,"code":"import _slicedToArray from\"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// ** React Imports\nimport{useState}from'react';// ** Third Party Components\nimport classnames from'classnames';import{ReactSortable}from'react-sortablejs';// ** Custom Hooks\nimport{useRTL}from'@hooks/useRTL';// ** Reactstrap Imports\nimport{Card,CardHeader,CardTitle,CardBody,CardText,Row,Col,Badge}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DndClone=function DndClone(){// ** State\nvar _useRTL=useRTL(),_useRTL2=_slicedToArray(_useRTL,1),isRtl=_useRTL2[0];var source1=[{text:'Youtube',color:'light-secondary'},{text:'Facebook',color:'light-primary'},{text:'Google',color:'light-success'},{text:'Instagram',color:'light-danger'},{text:'Twitter',color:'light-info'},{text:'Discord',color:'light-warning'}];var source2=[{text:'Github',color:'light-secondary'},{text:'Gitlab',color:'light-primary'},{text:'Slack',color:'light-success'},{text:'Pinterest',color:'light-danger'},{text:'Tinder',color:'light-info'},{text:'Amazon',color:'light-warning'}];var _useState=useState(source1),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var _useState3=useState(source2),_useState4=_slicedToArray(_useState3,2),list2=_useState4[0],setList2=_useState4[1];return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Clone List\"})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Add \",/*#__PURE__*/_jsx(\"code\",{children:\"pull:clone\"}),\" with your group prop to clone items.\"]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:\"6\",sm:\"12\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"my-1\",children:\"Badge Source 1\"}),/*#__PURE__*/_jsx(ReactSortable,{list:list,setList:setList,group:{name:'shared-badge-group',pull:'clone'},className:classnames('demo-inline-spacing sortable',{'flex-row-reverse':isRtl}),children:list.map(function(item,index){return/*#__PURE__*/_jsx(Badge,{className:\"draggable\",color:item.color,pill:true,children:item.text},\"\".concat(item.text,\"-\").concat(index));})})]}),/*#__PURE__*/_jsxs(Col,{md:\"6\",sm:\"12\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"my-1\",children:\"Badge Source 2\"}),/*#__PURE__*/_jsx(ReactSortable,{list:list2,setList:setList2,group:{name:'shared-badge-group',pull:'clone'},className:classnames('demo-inline-spacing sortable',{'flex-row-reverse':isRtl}),children:list2.map(function(item,index){return/*#__PURE__*/_jsx(Badge,{className:\"draggable\",color:item.color,pill:true,children:item.text},\"\".concat(item.text,\"-\").concat(index));})})]})]})]})]});};export default DndClone;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/extensions/drag-and-drop/DndClone.js"],"names":["useState","classnames","ReactSortable","useRTL","Card","CardHeader","CardTitle","CardBody","CardText","Row","Col","Badge","DndClone","isRtl","source1","text","color","source2","list","setList","list2","setList2","name","pull","map","item","index"],"mappings":"yKAAA;AACA,OAASA,QAAT,KAAyB,OAAzB,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CAEA;AACA,OAASC,MAAT,KAAuB,eAAvB,CAEA;AACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,SAA3B,CAAsCC,QAAtC,CAAgDC,QAAhD,CAA0DC,GAA1D,CAA+DC,GAA/D,CAAoEC,KAApE,KAAiF,YAAjF,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB;AACA,YAAgBT,MAAM,EAAtB,oCAAOU,KAAP,aAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,IAAI,CAAE,SADR,CAEEC,KAAK,CAAE,iBAFT,CADc,CAKd,CACED,IAAI,CAAE,UADR,CAEEC,KAAK,CAAE,eAFT,CALc,CASd,CACED,IAAI,CAAE,QADR,CAEEC,KAAK,CAAE,eAFT,CATc,CAad,CACED,IAAI,CAAE,WADR,CAEEC,KAAK,CAAE,cAFT,CAbc,CAiBd,CACED,IAAI,CAAE,SADR,CAEEC,KAAK,CAAE,YAFT,CAjBc,CAqBd,CACED,IAAI,CAAE,SADR,CAEEC,KAAK,CAAE,eAFT,CArBc,CAAhB,CA0BA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEF,IAAI,CAAE,QADR,CAEEC,KAAK,CAAE,iBAFT,CADc,CAKd,CACED,IAAI,CAAE,QADR,CAEEC,KAAK,CAAE,eAFT,CALc,CASd,CACED,IAAI,CAAE,OADR,CAEEC,KAAK,CAAE,eAFT,CATc,CAad,CACED,IAAI,CAAE,WADR,CAEEC,KAAK,CAAE,cAFT,CAbc,CAiBd,CACED,IAAI,CAAE,QADR,CAEEC,KAAK,CAAE,YAFT,CAjBc,CAqBd,CACED,IAAI,CAAE,QADR,CAEEC,KAAK,CAAE,eAFT,CArBc,CAAhB,CA2BA,cAAwBhB,QAAQ,CAACc,OAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAA0BnB,QAAQ,CAACiB,OAAD,CAAlC,yCAAOG,KAAP,eAAcC,QAAd,eAEA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,wBACE,KAAC,SAAD,EAAW,GAAG,CAAC,IAAf,wBADF,EADF,cAIE,MAAC,QAAD,yBACE,MAAC,QAAD,gCACM,oCADN,2CADF,cAIE,MAAC,GAAD,yBACE,MAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,wBACE,WAAI,SAAS,CAAC,MAAd,4BADF,cAEE,KAAC,aAAD,EACE,IAAI,CAAEH,IADR,CAEE,OAAO,CAAEC,OAFX,CAGE,KAAK,CAAE,CAAEG,IAAI,CAAE,oBAAR,CAA8BC,IAAI,CAAE,OAApC,CAHT,CAIE,SAAS,CAAEtB,UAAU,CAAC,8BAAD,CAAiC,CACpD,mBAAoBY,KADgC,CAAjC,CAJvB,UAQGK,IAAI,CAACM,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACzB,mBACE,KAAC,KAAD,EAAO,SAAS,CAAC,WAAjB,CAA2D,KAAK,CAAED,IAAI,CAACT,KAAvE,CAA8E,IAAI,KAAlF,UACGS,IAAI,CAACV,IADR,YAAqCU,IAAI,CAACV,IAA1C,aAAkDW,KAAlD,EADF,CAKD,CANA,CARH,EAFF,GADF,cAoBE,MAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,wBACE,WAAI,SAAS,CAAC,MAAd,4BADF,cAEE,KAAC,aAAD,EACE,IAAI,CAAEN,KADR,CAEE,OAAO,CAAEC,QAFX,CAGE,KAAK,CAAE,CAAEC,IAAI,CAAE,oBAAR,CAA8BC,IAAI,CAAE,OAApC,CAHT,CAIE,SAAS,CAAEtB,UAAU,CAAC,8BAAD,CAAiC,CACpD,mBAAoBY,KADgC,CAAjC,CAJvB,UAQGO,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC1B,mBACE,KAAC,KAAD,EAAO,SAAS,CAAC,WAAjB,CAA2D,KAAK,CAAED,IAAI,CAACT,KAAvE,CAA8E,IAAI,KAAlF,UACGS,IAAI,CAACV,IADR,YAAqCU,IAAI,CAACV,IAA1C,aAAkDW,KAAlD,EADF,CAKD,CANA,CARH,EAFF,GApBF,GAJF,GAJF,GADF,CAoDD,CAhHD,CAkHA,cAAed,CAAAA,QAAf","sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ReactSortable } from 'react-sortablejs'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap'\r\n\r\nconst DndClone = () => {\r\n  // ** State\r\n  const [isRtl] = useRTL()\r\n\r\n  const source1 = [\r\n    {\r\n      text: 'Youtube',\r\n      color: 'light-secondary'\r\n    },\r\n    {\r\n      text: 'Facebook',\r\n      color: 'light-primary'\r\n    },\r\n    {\r\n      text: 'Google',\r\n      color: 'light-success'\r\n    },\r\n    {\r\n      text: 'Instagram',\r\n      color: 'light-danger'\r\n    },\r\n    {\r\n      text: 'Twitter',\r\n      color: 'light-info'\r\n    },\r\n    {\r\n      text: 'Discord',\r\n      color: 'light-warning'\r\n    }\r\n  ]\r\n  const source2 = [\r\n    {\r\n      text: 'Github',\r\n      color: 'light-secondary'\r\n    },\r\n    {\r\n      text: 'Gitlab',\r\n      color: 'light-primary'\r\n    },\r\n    {\r\n      text: 'Slack',\r\n      color: 'light-success'\r\n    },\r\n    {\r\n      text: 'Pinterest',\r\n      color: 'light-danger'\r\n    },\r\n    {\r\n      text: 'Tinder',\r\n      color: 'light-info'\r\n    },\r\n    {\r\n      text: 'Amazon',\r\n      color: 'light-warning'\r\n    }\r\n  ]\r\n\r\n  const [list, setList] = useState(source1)\r\n  const [list2, setList2] = useState(source2)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Clone List</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          Add <code>pull:clone</code> with your group prop to clone items.\r\n        </CardText>\r\n        <Row>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>Badge Source 1</h4>\r\n            <ReactSortable\r\n              list={list}\r\n              setList={setList}\r\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\r\n              className={classnames('demo-inline-spacing sortable', {\r\n                'flex-row-reverse': isRtl\r\n              })}\r\n            >\r\n              {list.map((item, index) => {\r\n                return (\r\n                  <Badge className='draggable' key={`${item.text}-${index}`} color={item.color} pill>\r\n                    {item.text}\r\n                  </Badge>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>Badge Source 2</h4>\r\n            <ReactSortable\r\n              list={list2}\r\n              setList={setList2}\r\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\r\n              className={classnames('demo-inline-spacing sortable', {\r\n                'flex-row-reverse': isRtl\r\n              })}\r\n            >\r\n              {list2.map((item, index) => {\r\n                return (\r\n                  <Badge className='draggable' key={`${item.text}-${index}`} color={item.color} pill>\r\n                    {item.text}\r\n                  </Badge>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndClone\r\n"]},"metadata":{},"sourceType":"module"}