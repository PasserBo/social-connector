{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { createElement } from 'react';\nimport { Svg } from '../svg/index.esm.js';\n\nvar rotate = function rotate(direction) {\n  if (direction === void 0) {\n    direction = 'up';\n  }\n\n  switch (direction) {\n    case 'up':\n      return 0;\n\n    case 'right':\n      return '90';\n\n    case 'down':\n      return '180';\n\n    case 'left':\n      return '270';\n\n    default:\n      throw new Error('`rotate` must receive direction parameter');\n  }\n};\n\nvar ArrowIcon = function ArrowIcon(_ref) {\n  var direction = _ref.direction,\n      style = _ref.style,\n      props = _objectWithoutPropertiesLoose(_ref, [\"direction\", \"style\"]);\n\n  return createElement(Svg, Object.assign({\n    width: \"11px\",\n    height: \"14px\",\n    viewBox: \"0 0 11 14\",\n    style: _objectSpread2({}, style, {\n      transform: \"rotate(\" + rotate(direction) + \"deg)\"\n    })\n  }, props), createElement(\"path\", {\n    d: \"M5.5 13.559c.444 0 .759-.315.759-.766V4.351l-.055-1.477 1.77 1.976 1.56 1.545a.765.765 0 00.54.225c.416 0 .73-.314.73-.745a.754.754 0 00-.239-.547L6.061.816a.78.78 0 00-1.128 0L.435 5.328a.754.754 0 00-.24.547c0 .43.308.745.725.745.219 0 .41-.089.547-.225L3.019 4.85l1.777-1.983-.062 1.484v8.442c0 .451.315.766.766.766z\",\n    fill: \"currentColor\"\n  }));\n};\n\nexport { ArrowIcon };","map":{"version":3,"sources":["../../src/icons/arrow-icon.tsx"],"names":["rotate","direction","ArrowIcon","style","props","width","height","viewBox","transform","d","fill"],"mappings":";;;;AASA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,SAAA,EAAA;MAACC,SAAAA,KAAAA,KAAAA,C,EAAAA;AAAAA,IAAAA,SAAAA,GAAuB,IAAvBA;;;AACd,UAAA,SAAA;AACE,SAAA,IAAA;AACE,aAAA,CAAA;;AACF,SAAA,OAAA;AACE,aAAA,IAAA;;AACF,SAAA,MAAA;AACE,aAAA,KAAA;;AACF,SAAA,MAAA;AACE,aAAA,KAAA;;AACF;AACE,YAAM,IAAA,KAAA,CAAN,2CAAM,CAAN;AAVJ;AADF,CAAA;;IAeaC,SAAS,GAA6B,SAAtCA,SAAsC,CAAA,IAAA,EAAA;AAAA,MAAGD,SAAH,GAAA,IAAA,CAAA,SAAA;AAAA,MAAcE,KAAd,GAAA,IAAA,CAAA,KAAA;AAAA,MAAwBC,KAAxB,GAAA,6BAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,SACjD,aAAA,CAAA,GAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACEC,IAAAA,KAAK,EAAC,MADR;AAEEC,IAAAA,MAAM,EAAC,MAFT;AAGEC,IAAAA,OAAO,EAAC,WAHV;AAIEJ,IAAAA,KAAK,EAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAcK,MAAAA,SAAS,EAAA,YAAYR,MAAM,CAAlB,SAAkB,CAAlB,GAAA;AAAvB,KAAA;AAJP,GAAA,EAAA,KAAA,CAAA,EAOE,aAAA,CAAA,MAAA,EAAA;AACES,IAAAA,CAAC,EAAC,iUADJ;AAEEC,IAAAA,IAAI,EAAC;AAFP,GAAA,CAPF,CADiD;AAAA,C","sourcesContent":["import * as React from 'react';\nimport { Svg } from '../svg';\nimport { BoxProps } from '../box';\nimport { Direction } from './icon-utils';\n\ninterface ArrowIconProps extends BoxProps {\n  direction?: Direction;\n}\n\nconst rotate = (direction: Direction = 'up') => {\n  switch (direction) {\n    case 'up':\n      return 0;\n    case 'right':\n      return '90';\n    case 'down':\n      return '180';\n    case 'left':\n      return '270';\n    default:\n      throw new Error('`rotate` must receive direction parameter');\n  }\n};\n\nexport const ArrowIcon: React.FC<ArrowIconProps> = ({ direction, style, ...props }) => (\n  <Svg\n    width=\"11px\"\n    height=\"14px\"\n    viewBox=\"0 0 11 14\"\n    style={{ ...style, transform: `rotate(${rotate(direction)}deg)` }}\n    {...props}\n  >\n    <path\n      d=\"M5.5 13.559c.444 0 .759-.315.759-.766V4.351l-.055-1.477 1.77 1.976 1.56 1.545a.765.765 0 00.54.225c.416 0 .73-.314.73-.745a.754.754 0 00-.239-.547L6.061.816a.78.78 0 00-1.128 0L.435 5.328a.754.754 0 00-.24.547c0 .43.308.745.725.745.219 0 .41-.089.547-.225L3.019 4.85l1.777-1.983-.062 1.484v8.442c0 .451.315.766.766.766z\"\n      fill=\"currentColor\"\n    />\n  </Svg>\n);\n"]},"metadata":{},"sourceType":"module"}