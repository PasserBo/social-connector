{"ast":null,"code":"window.global = window;\nimport { TransactionVersion as t, ChainID as s, fetchPrivate as e } from \"@stacks/common/dist/polyfill\";\nconst n = \"https://stacks-node-api.mainnet.stacks.co\",\n      i = \"https://stacks-node-api.testnet.stacks.co\",\n      r = \"http://localhost:3999\",\n      o = [\"mainnet\", \"testnet\"];\n\nclass a {\n  constructor(e) {\n    this.version = t.Mainnet, this.chainId = s.Mainnet, this.bnsLookupUrl = \"https://stacks-node-api.mainnet.stacks.co\", this.broadcastEndpoint = \"/v2/transactions\", this.transferFeeEstimateEndpoint = \"/v2/fees/transfer\", this.transactionFeeEstimateEndpoint = \"/v2/fees/transaction\", this.accountEndpoint = \"/v2/accounts\", this.contractAbiEndpoint = \"/v2/contracts/interface\", this.readOnlyFunctionCallEndpoint = \"/v2/contracts/call-read\", this.isMainnet = () => this.version === t.Mainnet, this.getBroadcastApiUrl = () => \"\".concat(this.coreApiUrl).concat(this.broadcastEndpoint), this.getTransferFeeEstimateApiUrl = () => \"\".concat(this.coreApiUrl).concat(this.transferFeeEstimateEndpoint), this.getTransactionFeeEstimateApiUrl = () => \"\".concat(this.coreApiUrl).concat(this.transactionFeeEstimateEndpoint), this.getAccountApiUrl = t => \"\".concat(this.coreApiUrl).concat(this.accountEndpoint, \"/\").concat(t, \"?proof=0\"), this.getAbiApiUrl = (t, s) => \"\".concat(this.coreApiUrl).concat(this.contractAbiEndpoint, \"/\").concat(t, \"/\").concat(s), this.getReadOnlyFunctionCallApiUrl = (t, s, e) => \"\".concat(this.coreApiUrl).concat(this.readOnlyFunctionCallEndpoint, \"/\").concat(t, \"/\").concat(s, \"/\").concat(encodeURIComponent(e)), this.getInfoUrl = () => \"\".concat(this.coreApiUrl, \"/v2/info\"), this.getBlockTimeInfoUrl = () => \"\".concat(this.coreApiUrl, \"/extended/v1/info/network_block_times\"), this.getPoxInfoUrl = () => \"\".concat(this.coreApiUrl, \"/v2/pox\"), this.getRewardsUrl = (t, s) => {\n      let e = \"\".concat(this.coreApiUrl, \"/extended/v1/burnchain/rewards/\").concat(t);\n      return s && (e = \"\".concat(e, \"?limit=\").concat(s.limit, \"&offset=\").concat(s.offset)), e;\n    }, this.getRewardsTotalUrl = t => \"\".concat(this.coreApiUrl, \"/extended/v1/burnchain/rewards/\").concat(t, \"/total\"), this.getRewardHoldersUrl = (t, s) => {\n      let e = \"\".concat(this.coreApiUrl, \"/extended/v1/burnchain/reward_slot_holders/\").concat(t);\n      return s && (e = \"\".concat(e, \"?limit=\").concat(s.limit, \"&offset=\").concat(s.offset)), e;\n    }, this.getStackerInfoUrl = (t, s) => \"\".concat(this.coreApiUrl).concat(this.readOnlyFunctionCallEndpoint, \"\\n    \").concat(t, \"/\").concat(s, \"/get-stacker-info\"), this.coreApiUrl = e.url;\n  }\n\n  getNameInfo(t) {\n    const s = \"\".concat(this.bnsLookupUrl, \"/v1/names/\").concat(t);\n    return e(s).then(t => {\n      if (404 === t.status) throw new Error(\"Name not found\");\n      if (200 !== t.status) throw new Error(\"Bad response status: \".concat(t.status));\n      return t.json();\n    }).then(t => t.address ? Object.assign({}, t, {\n      address: t.address\n    }) : t);\n  }\n\n}\n\na.fromName = t => {\n  switch (t) {\n    case \"mainnet\":\n      return new c();\n\n    case \"testnet\":\n      return new l();\n\n    default:\n      throw new Error(\"Invalid network name provided. Must be one of the following: \".concat(o.join(\", \")));\n  }\n}, a.fromNameOrNetwork = t => \"string\" != typeof t && \"version\" in t ? t : a.fromName(t);\n\nclass c extends a {\n  constructor() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      url: \"https://stacks-node-api.mainnet.stacks.co\"\n    };\n    super(e), this.version = t.Mainnet, this.chainId = s.Mainnet;\n  }\n\n}\n\nclass l extends a {\n  constructor() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      url: \"https://stacks-node-api.testnet.stacks.co\"\n    };\n    super(e), this.version = t.Testnet, this.chainId = s.Testnet;\n  }\n\n}\n\nclass h extends a {\n  constructor() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      url: \"http://localhost:3999\"\n    };\n    super(e), this.version = t.Testnet, this.chainId = s.Testnet;\n  }\n\n}\n\nexport { n as HIRO_MAINNET_DEFAULT, r as HIRO_MOCKNET_DEFAULT, i as HIRO_TESTNET_DEFAULT, c as StacksMainnet, h as StacksMocknet, a as StacksNetwork, o as StacksNetworks, l as StacksTestnet };","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/node_modules/@stacks/network/dist/polyfill/index.js"],"names":["window","global","TransactionVersion","t","ChainID","s","fetchPrivate","e","n","i","r","o","a","constructor","version","Mainnet","chainId","bnsLookupUrl","broadcastEndpoint","transferFeeEstimateEndpoint","transactionFeeEstimateEndpoint","accountEndpoint","contractAbiEndpoint","readOnlyFunctionCallEndpoint","isMainnet","getBroadcastApiUrl","coreApiUrl","getTransferFeeEstimateApiUrl","getTransactionFeeEstimateApiUrl","getAccountApiUrl","getAbiApiUrl","getReadOnlyFunctionCallApiUrl","encodeURIComponent","getInfoUrl","getBlockTimeInfoUrl","getPoxInfoUrl","getRewardsUrl","limit","offset","getRewardsTotalUrl","getRewardHoldersUrl","getStackerInfoUrl","url","getNameInfo","then","status","Error","json","address","Object","assign","fromName","c","l","join","fromNameOrNetwork","Testnet","h","HIRO_MAINNET_DEFAULT","HIRO_MOCKNET_DEFAULT","HIRO_TESTNET_DEFAULT","StacksMainnet","StacksMocknet","StacksNetwork","StacksNetworks","StacksTestnet"],"mappings":"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","sourcesContent":["window.global=window;import{TransactionVersion as t,ChainID as s,fetchPrivate as e}from\"@stacks/common/dist/polyfill\";const n=\"https://stacks-node-api.mainnet.stacks.co\",i=\"https://stacks-node-api.testnet.stacks.co\",r=\"http://localhost:3999\",o=[\"mainnet\",\"testnet\"];class a{constructor(e){this.version=t.Mainnet,this.chainId=s.Mainnet,this.bnsLookupUrl=\"https://stacks-node-api.mainnet.stacks.co\",this.broadcastEndpoint=\"/v2/transactions\",this.transferFeeEstimateEndpoint=\"/v2/fees/transfer\",this.transactionFeeEstimateEndpoint=\"/v2/fees/transaction\",this.accountEndpoint=\"/v2/accounts\",this.contractAbiEndpoint=\"/v2/contracts/interface\",this.readOnlyFunctionCallEndpoint=\"/v2/contracts/call-read\",this.isMainnet=()=>this.version===t.Mainnet,this.getBroadcastApiUrl=()=>`${this.coreApiUrl}${this.broadcastEndpoint}`,this.getTransferFeeEstimateApiUrl=()=>`${this.coreApiUrl}${this.transferFeeEstimateEndpoint}`,this.getTransactionFeeEstimateApiUrl=()=>`${this.coreApiUrl}${this.transactionFeeEstimateEndpoint}`,this.getAccountApiUrl=t=>`${this.coreApiUrl}${this.accountEndpoint}/${t}?proof=0`,this.getAbiApiUrl=(t,s)=>`${this.coreApiUrl}${this.contractAbiEndpoint}/${t}/${s}`,this.getReadOnlyFunctionCallApiUrl=(t,s,e)=>`${this.coreApiUrl}${this.readOnlyFunctionCallEndpoint}/${t}/${s}/${encodeURIComponent(e)}`,this.getInfoUrl=()=>`${this.coreApiUrl}/v2/info`,this.getBlockTimeInfoUrl=()=>`${this.coreApiUrl}/extended/v1/info/network_block_times`,this.getPoxInfoUrl=()=>`${this.coreApiUrl}/v2/pox`,this.getRewardsUrl=(t,s)=>{let e=`${this.coreApiUrl}/extended/v1/burnchain/rewards/${t}`;return s&&(e=`${e}?limit=${s.limit}&offset=${s.offset}`),e},this.getRewardsTotalUrl=t=>`${this.coreApiUrl}/extended/v1/burnchain/rewards/${t}/total`,this.getRewardHoldersUrl=(t,s)=>{let e=`${this.coreApiUrl}/extended/v1/burnchain/reward_slot_holders/${t}`;return s&&(e=`${e}?limit=${s.limit}&offset=${s.offset}`),e},this.getStackerInfoUrl=(t,s)=>`${this.coreApiUrl}${this.readOnlyFunctionCallEndpoint}\\n    ${t}/${s}/get-stacker-info`,this.coreApiUrl=e.url}getNameInfo(t){const s=`${this.bnsLookupUrl}/v1/names/${t}`;return e(s).then((t=>{if(404===t.status)throw new Error(\"Name not found\");if(200!==t.status)throw new Error(`Bad response status: ${t.status}`);return t.json()})).then((t=>t.address?Object.assign({},t,{address:t.address}):t))}}a.fromName=t=>{switch(t){case\"mainnet\":return new c;case\"testnet\":return new l;default:throw new Error(`Invalid network name provided. Must be one of the following: ${o.join(\", \")}`)}},a.fromNameOrNetwork=t=>\"string\"!=typeof t&&\"version\"in t?t:a.fromName(t);class c extends a{constructor(e={url:\"https://stacks-node-api.mainnet.stacks.co\"}){super(e),this.version=t.Mainnet,this.chainId=s.Mainnet}}class l extends a{constructor(e={url:\"https://stacks-node-api.testnet.stacks.co\"}){super(e),this.version=t.Testnet,this.chainId=s.Testnet}}class h extends a{constructor(e={url:\"http://localhost:3999\"}){super(e),this.version=t.Testnet,this.chainId=s.Testnet}}export{n as HIRO_MAINNET_DEFAULT,r as HIRO_MOCKNET_DEFAULT,i as HIRO_TESTNET_DEFAULT,c as StacksMainnet,h as StacksMocknet,a as StacksNetwork,o as StacksNetworks,l as StacksTestnet};\n"]},"metadata":{},"sourceType":"module"}