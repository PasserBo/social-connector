{"ast":null,"code":"// ** React Imports\nimport{useEffect,useState}from'react';// ** Third Party Components\nimport axios from'axios';import{UserCheck}from'react-feather';// ** Custom Components\nimport StatsWithLineChart from'@components/widgets/stats/StatsWithLineChart';import{jsx as _jsx}from\"react/jsx-runtime\";const ActiveUsers=_ref=>{let{success}=_ref;// ** State\nconst[data,setData]=useState(null);useEffect(()=>{axios.get('/card/card-network/active-users').then(res=>setData(res.data));},[]);const options={chart:{id:'activeUsers',toolbar:{show:false},sparkline:{enabled:true},dropShadow:{enabled:true,top:5,left:0,blur:4,opacity:0.1}},grid:{show:false},colors:[success],dataLabels:{enabled:false},stroke:{curve:'smooth',width:5},fill:{type:'gradient',gradient:{shadeIntensity:1,gradientToColors:['#55DD92'],opacityFrom:1,opacityTo:1,stops:[0,100,100,100]}},xaxis:{labels:{show:false},axisBorder:{show:false}},yaxis:{labels:{show:false}},tooltip:{x:{show:false}}};return data!==null?/*#__PURE__*/_jsx(StatsWithLineChart,{icon:/*#__PURE__*/_jsx(UserCheck,{size:21}),color:\"success\",stats:\"659.8k\",statTitle:\"Active Users\",series:data.series,options:options,type:\"line\"}):null;};export default ActiveUsers;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/ui-elements/cards/network/ActiveUsers.js"],"names":["useEffect","useState","axios","UserCheck","StatsWithLineChart","ActiveUsers","success","data","setData","get","then","res","options","chart","id","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","type","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","series"],"mappings":"AAAA;AACA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,eAA1B,CAEA;AACA,MAAOC,CAAAA,kBAAP,KAA+B,8CAA/B,C,2CAEA,KAAMC,CAAAA,WAAW,CAAG,MAAiB,IAAhB,CAAEC,OAAF,CAAgB,MACnC;AACA,KAAM,CAACC,IAAD,CAAOC,OAAP,EAAkBP,QAAQ,CAAC,IAAD,CAAhC,CAEAD,SAAS,CAAC,IAAM,CACdE,KAAK,CAACO,GAAN,CAAU,iCAAV,EAA6CC,IAA7C,CAAkDC,GAAG,EAAIH,OAAO,CAACG,GAAG,CAACJ,IAAL,CAAhE,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,KAAMK,CAAAA,OAAO,CAAG,CACdC,KAAK,CAAE,CACLC,EAAE,CAAE,aADC,CAELC,OAAO,CAAE,CACPC,IAAI,CAAE,KADC,CAFJ,CAKLC,SAAS,CAAE,CACTC,OAAO,CAAE,IADA,CALN,CAQLC,UAAU,CAAE,CACVD,OAAO,CAAE,IADC,CAEVE,GAAG,CAAE,CAFK,CAGVC,IAAI,CAAE,CAHI,CAIVC,IAAI,CAAE,CAJI,CAKVC,OAAO,CAAE,GALC,CARP,CADO,CAiBdC,IAAI,CAAE,CACJR,IAAI,CAAE,KADF,CAjBQ,CAoBdS,MAAM,CAAE,CAACnB,OAAD,CApBM,CAqBdoB,UAAU,CAAE,CACVR,OAAO,CAAE,KADC,CArBE,CAwBdS,MAAM,CAAE,CACNC,KAAK,CAAE,QADD,CAENC,KAAK,CAAE,CAFD,CAxBM,CA4BdC,IAAI,CAAE,CACJC,IAAI,CAAE,UADF,CAEJC,QAAQ,CAAE,CACRC,cAAc,CAAE,CADR,CAERC,gBAAgB,CAAE,CAAC,SAAD,CAFV,CAGRC,WAAW,CAAE,CAHL,CAIRC,SAAS,CAAE,CAJH,CAKRC,KAAK,CAAE,CAAC,CAAD,CAAI,GAAJ,CAAS,GAAT,CAAc,GAAd,CALC,CAFN,CA5BQ,CAuCdC,KAAK,CAAE,CACLC,MAAM,CAAE,CACNvB,IAAI,CAAE,KADA,CADH,CAILwB,UAAU,CAAE,CACVxB,IAAI,CAAE,KADI,CAJP,CAvCO,CA+CdyB,KAAK,CAAE,CACLF,MAAM,CAAE,CACNvB,IAAI,CAAE,KADA,CADH,CA/CO,CAoDd0B,OAAO,CAAE,CACPC,CAAC,CAAE,CAAE3B,IAAI,CAAE,KAAR,CADI,CApDK,CAAhB,CAyDA,MAAOT,CAAAA,IAAI,GAAK,IAAT,cACL,KAAC,kBAAD,EACE,IAAI,cAAE,KAAC,SAAD,EAAW,IAAI,CAAE,EAAjB,EADR,CAEE,KAAK,CAAC,SAFR,CAGE,KAAK,CAAC,QAHR,CAIE,SAAS,CAAC,cAJZ,CAKE,MAAM,CAAEA,IAAI,CAACqC,MALf,CAME,OAAO,CAAEhC,OANX,CAOE,IAAI,CAAC,MAPP,EADK,CAUH,IAVJ,CAWD,CA5ED,CA8EA,cAAeP,CAAAA,WAAf","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { UserCheck } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst ActiveUsers = ({ success }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/active-users').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'activeUsers',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 4,\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [success],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        gradientToColors: ['#55DD92'],\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100, 100, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<UserCheck size={21} />}\r\n      color='success'\r\n      stats='659.8k'\r\n      statTitle='Active Users'\r\n      series={data.series}\r\n      options={options}\r\n      type='line'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ActiveUsers\r\n"]},"metadata":{},"sourceType":"module"}