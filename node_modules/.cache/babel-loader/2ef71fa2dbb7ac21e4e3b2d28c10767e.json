{"ast":null,"code":"// ** React Imports\nimport{useState,Fragment}from'react';// ** Reactstrap Imports\nimport{Card,CardHeader,CardTitle,CardBody,Button,ListGroup,ListGroupItem}from'reactstrap';// ** Custom Components\nimport Avatar from'@components/avatar';// ** Third Party Imports\nimport{toast}from'react-toastify';import{useDropzone}from'react-dropzone';import{X,DownloadCloud}from'react-feather';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ErrorToast=()=>/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toastify-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"danger\",icon:/*#__PURE__*/_jsx(X,{size:12})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title\",children:\"Error!\"})]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"a second ago\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"toastify-body\",children:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"toast-text\",children:\"\\uD83D\\uDC4B You can only upload image Files!.\"})})]});const FileUploaderRestrictions=()=>{// ** State\nconst[files,setFiles]=useState([]);const{getRootProps,getInputProps}=useDropzone({multiple:false,accept:'image/*',onDrop:(acceptedFiles,rejectedFiles)=>{if(rejectedFiles.length){toast.error(/*#__PURE__*/_jsx(ErrorToast,{}),{icon:false,hideProgressBar:true});}else{setFiles([...files,...acceptedFiles.map(file=>Object.assign(file))]);}}});const handleRemoveFile=file=>{const uploadedFiles=files;const filtered=uploadedFiles.filter(i=>i.name!==file.name);setFiles([...filtered]);};const renderFileSize=size=>{if(Math.round(size/100)/10>1000){return\"\".concat((Math.round(size/100)/10000).toFixed(1),\" mb\");}else{return\"\".concat((Math.round(size/100)/10).toFixed(1),\" kb\");}};const fileList=files.map((file,index)=>/*#__PURE__*/_jsxs(ListGroupItem,{className:\"d-flex align-items-center justify-content-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-details d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-preview me-1\",children:/*#__PURE__*/_jsx(\"img\",{className:\"rounded\",alt:file.name,src:URL.createObjectURL(file),height:\"28\",width:\"28\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"file-name mb-0\",children:file.name}),/*#__PURE__*/_jsx(\"p\",{className:\"file-size mb-0\",children:renderFileSize(file.size)})]})]}),/*#__PURE__*/_jsx(Button,{color:\"danger\",outline:true,size:\"sm\",className:\"btn-icon\",onClick:()=>handleRemoveFile(file),children:/*#__PURE__*/_jsx(X,{size:14})})]},\"\".concat(file.name,\"-\").concat(index)));const handleRemoveAllFiles=()=>{setFiles([]);};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Restrictions\"})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(\"div\",{...getRootProps({className:'dropzone'}),children:[/*#__PURE__*/_jsx(\"input\",{...getInputProps()}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center justify-content-center flex-column\",children:[/*#__PURE__*/_jsx(DownloadCloud,{size:64}),/*#__PURE__*/_jsx(\"h5\",{children:\"Drop Files here or click to upload\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-secondary\",children:[\"Drop files here or click\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"/\",onClick:e=>e.preventDefault(),children:\"browse\"}),' ',\"thorough your machine\"]})]})]}),files.length?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(ListGroup,{className:\"my-2\",children:fileList}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-end\",children:[/*#__PURE__*/_jsx(Button,{className:\"me-1\",color:\"danger\",outline:true,onClick:handleRemoveAllFiles,children:\"Remove All\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",children:\"Upload Files\"})]})]}):null]})]});};export default FileUploaderRestrictions;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/views/forms/form-elements/file-uploader/FileUploaderRestrictions.js"],"names":["useState","Fragment","Card","CardHeader","CardTitle","CardBody","Button","ListGroup","ListGroupItem","Avatar","toast","useDropzone","X","DownloadCloud","ErrorToast","FileUploaderRestrictions","files","setFiles","getRootProps","getInputProps","multiple","accept","onDrop","acceptedFiles","rejectedFiles","length","error","icon","hideProgressBar","map","file","Object","assign","handleRemoveFile","uploadedFiles","filtered","filter","i","name","renderFileSize","size","Math","round","toFixed","fileList","index","URL","createObjectURL","handleRemoveAllFiles","className","e","preventDefault"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Imports\r\nimport { toast } from 'react-toastify'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { X, DownloadCloud } from 'react-feather'\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='toast-title'>Error!</h6>\r\n      </div>\r\n      <small className='text-muted'>a second ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        ðŸ‘‹ You can only upload image Files!.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst FileUploaderRestrictions = () => {\r\n  // ** State\r\n  const [files, setFiles] = useState([])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles, rejectedFiles) => {\r\n      if (rejectedFiles.length) {\r\n        toast.error(<ErrorToast />, { icon: false, hideProgressBar: true })\r\n      } else {\r\n        setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\r\n      }\r\n    }\r\n  })\r\n\r\n  const handleRemoveFile = file => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const renderFileSize = size => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\r\n    }\r\n  }\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\r\n      <div className='file-details d-flex align-items-center'>\r\n        <div className='file-preview me-1'>\r\n          <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\r\n        </div>\r\n        <div>\r\n          <p className='file-name mb-0'>{file.name}</p>\r\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Restrictions</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div {...getRootProps({ className: 'dropzone' })}>\r\n          <input {...getInputProps()} />\r\n          <div className='d-flex align-items-center justify-content-center flex-column'>\r\n            <DownloadCloud size={64} />\r\n            <h5>Drop Files here or click to upload</h5>\r\n            <p className='text-secondary'>\r\n              Drop files here or click{' '}\r\n              <a href='/' onClick={e => e.preventDefault()}>\r\n                browse\r\n              </a>{' '}\r\n              thorough your machine\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className='my-2'>{fileList}</ListGroup>\r\n            <div className='d-flex justify-content-end'>\r\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\r\n                Remove All\r\n              </Button>\r\n              <Button color='primary'>Upload Files</Button>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUploaderRestrictions\r\n"]},"metadata":{},"sourceType":"module"}