{"ast":null,"code":"// ** React Imports\nimport{useEffect,useState}from'react';// ** Third Party Components\nimport axios from'axios';// ** Custom Components\nimport TinyChartStats from'@components/widgets/stats/TinyChartStats';import{jsx as _jsx}from\"react/jsx-runtime\";const OrdersBarChart=_ref=>{let{warning}=_ref;// ** State\nconst[data,setData]=useState(null);useEffect(()=>{axios.get('/card/card-network/orders-bar-chart').then(res=>setData(res.data));return()=>setData(null);},[]);const options={chart:{stacked:true,toolbar:{show:false}},grid:{show:false,padding:{left:0,right:0,top:-15,bottom:-15}},plotOptions:{bar:{horizontal:false,columnWidth:'20%',borderRadius:[0,5],colors:{backgroundBarColors:['#f3f3f3','#f3f3f3','#f3f3f3','#f3f3f3','#f3f3f3'],backgroundBarRadius:5}}},legend:{show:false},dataLabels:{enabled:false},colors:[warning],xaxis:{labels:{show:false},axisBorder:{show:false},axisTicks:{show:false}},yaxis:{show:false},tooltip:{x:{show:false}}};return data!==null?/*#__PURE__*/_jsx(TinyChartStats,{height:70,type:\"bar\",options:options,title:data.title,stats:data.statistics,series:data.series}):null;};export default OrdersBarChart;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/ui-elements/cards/network/OrdersBarChart.js"],"names":["useEffect","useState","axios","TinyChartStats","OrdersBarChart","warning","data","setData","get","then","res","options","chart","stacked","toolbar","show","grid","padding","left","right","top","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","colors","backgroundBarColors","backgroundBarRadius","legend","dataLabels","enabled","xaxis","labels","axisBorder","axisTicks","yaxis","tooltip","x","title","statistics","series"],"mappings":"AAAA;AACA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAOC,CAAAA,cAAP,KAA2B,0CAA3B,C,2CAEA,KAAMC,CAAAA,cAAc,CAAG,MAAiB,IAAhB,CAAEC,OAAF,CAAgB,MACtC;AACA,KAAM,CAACC,IAAD,CAAOC,OAAP,EAAkBN,QAAQ,CAAC,IAAD,CAAhC,CAEAD,SAAS,CAAC,IAAM,CACdE,KAAK,CAACM,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAsDC,GAAG,EAAIH,OAAO,CAACG,GAAG,CAACJ,IAAL,CAApE,EACA,MAAO,IAAMC,OAAO,CAAC,IAAD,CAApB,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,KAAMI,CAAAA,OAAO,CAAG,CACdC,KAAK,CAAE,CACLC,OAAO,CAAE,IADJ,CAELC,OAAO,CAAE,CACPC,IAAI,CAAE,KADC,CAFJ,CADO,CAOdC,IAAI,CAAE,CACJD,IAAI,CAAE,KADF,CAEJE,OAAO,CAAE,CACPC,IAAI,CAAE,CADC,CAEPC,KAAK,CAAE,CAFA,CAGPC,GAAG,CAAE,CAAC,EAHC,CAIPC,MAAM,CAAE,CAAC,EAJF,CAFL,CAPQ,CAgBdC,WAAW,CAAE,CACXC,GAAG,CAAE,CACHC,UAAU,CAAE,KADT,CAEHC,WAAW,CAAE,KAFV,CAGHC,YAAY,CAAE,CAAC,CAAD,CAAI,CAAJ,CAHX,CAIHC,MAAM,CAAE,CACNC,mBAAmB,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CADf,CAENC,mBAAmB,CAAE,CAFf,CAJL,CADM,CAhBC,CA2BdC,MAAM,CAAE,CACNf,IAAI,CAAE,KADA,CA3BM,CA8BdgB,UAAU,CAAE,CACVC,OAAO,CAAE,KADC,CA9BE,CAiCdL,MAAM,CAAE,CAACtB,OAAD,CAjCM,CAkCd4B,KAAK,CAAE,CACLC,MAAM,CAAE,CACNnB,IAAI,CAAE,KADA,CADH,CAILoB,UAAU,CAAE,CACVpB,IAAI,CAAE,KADI,CAJP,CAOLqB,SAAS,CAAE,CACTrB,IAAI,CAAE,KADG,CAPN,CAlCO,CA6CdsB,KAAK,CAAE,CACLtB,IAAI,CAAE,KADD,CA7CO,CAgDduB,OAAO,CAAE,CACPC,CAAC,CAAE,CACDxB,IAAI,CAAE,KADL,CADI,CAhDK,CAAhB,CAuDA,MAAOT,CAAAA,IAAI,GAAK,IAAT,cACL,KAAC,cAAD,EACE,MAAM,CAAE,EADV,CAEE,IAAI,CAAC,KAFP,CAGE,OAAO,CAAEK,OAHX,CAIE,KAAK,CAAEL,IAAI,CAACkC,KAJd,CAKE,KAAK,CAAElC,IAAI,CAACmC,UALd,CAME,MAAM,CAAEnC,IAAI,CAACoC,MANf,EADK,CASH,IATJ,CAUD,CA1ED,CA4EA,cAAetC,CAAAA,cAAf","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst OrdersBarChart = ({ warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/orders-bar-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    grid: {\r\n      show: false,\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: -15,\r\n        bottom: -15\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '20%',\r\n        borderRadius: [0, 5],\r\n        colors: {\r\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\r\n          backgroundBarRadius: 5\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    colors: [warning],\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='bar'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default OrdersBarChart\r\n"]},"metadata":{},"sourceType":"module"}