{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/www-bitfari/src/views/pages/payment/PaymentCards.js\";\nimport { makeSTXTokenTransfer, broadcastTransaction, AnchorMode } from '@stacks/transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaymentCards = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Booked Ads Ready for Publishing:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"/action_page.php\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ad Title: Place Your Ad Here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Network: Billboards.btc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Duration: 1 Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Please Provide a Budget (FARI):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"budgetProvided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          name: \"pay\",\n          id: \"pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annual-plan\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-price mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pricing-duration text-body font-medium-1 fw-bold ms-25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n\n_c = PaymentCards;\nconst txOptions = {\n  recipient: 'SP3FGQ8Z7JY9BWYZ5WM53E0M9NK7WHJF0691NZ159',\n  amount: 1000n,\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  network: 'testnet',\n  // for mainnet, use 'mainnet'\n  memo: 'Budget for Bitfari Ads',\n  //nonce: 0n, // set a nonce manually if you don't want builder to fetch from a Stacks node\n  //fee: 200n, // set a tx fee if you don't want the builder to estimate\n  anchorMode: AnchorMode.Any\n};\nconst transaction = await makeSTXTokenTransfer(txOptions); // to see the raw serialized tx\n\nconst serializedTx = transaction.serialize().toString('hex'); // broadcasting transaction to the specified network\n\nconst broadcastResponse = await broadcastTransaction(transaction);\nconst txId = broadcastResponse.txid;\nexport default PaymentCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentCards\");","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/pages/payment/PaymentCards.js"],"names":["makeSTXTokenTransfer","broadcastTransaction","AnchorMode","PaymentCards","txOptions","recipient","amount","senderKey","network","memo","anchorMode","Any","transaction","serializedTx","serialize","toString","broadcastResponse","txId","txid"],"mappings":";AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,UAArD,QAAuE,sBAAvE;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACxB,sBACW;AAAA,4BACA;AAAA,8BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA;AAAM,QAAA,MAAM,EAAC,kBAAb;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAKwC;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBALxC,eAMA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,KAA1B;AAAgC,UAAA,EAAE,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAkBA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBA;AAAA,kBADX;AA0BC,CA3BJ;;KAAMA,Y;AAgCH,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,2CADK;AAEhBC,EAAAA,MAAM,EAAE,KAFQ;AAGhBC,EAAAA,SAAS,EAAE,oEAHK;AAIhBC,EAAAA,OAAO,EAAE,SAJO;AAII;AACpBC,EAAAA,IAAI,EAAE,wBALU;AAMhB;AACA;AACAC,EAAAA,UAAU,EAAER,UAAU,CAACS;AARP,CAAlB;AAWA,MAAMC,WAAW,GAAG,MAAMZ,oBAAoB,CAACI,SAAD,CAA9C,C,CAEA;;AACA,MAAMS,YAAY,GAAGD,WAAW,CAACE,SAAZ,GAAwBC,QAAxB,CAAiC,KAAjC,CAArB,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG,MAAMf,oBAAoB,CAACW,WAAD,CAApD;AACA,MAAMK,IAAI,GAAGD,iBAAiB,CAACE,IAA/B;AAEH,eAAef,YAAf","sourcesContent":["import { makeSTXTokenTransfer, broadcastTransaction, AnchorMode } from '@stacks/transactions';  \r\n\r\nconst PaymentCards = () => {\r\n   return (\r\n              <>\r\n              <center>\r\n\r\n              <h2>Booked Ads Ready for Publishing:</h2>\r\n              <hr/>\r\n\r\n              <form action=\"/action_page.php\">\r\n              <h3>Ad Title: Place Your Ad Here!</h3>\r\n              <h4>Network: Billboards.btc</h4>\r\n              <h4>Duration: 1 Day</h4>\r\n\r\n              <h4>Please Provide a Budget (FARI):</h4><input name=\"budgetProvided\" /> \r\n              <input type=\"submit\" name=\"pay\" id=\"pay\" />\r\n              </form>\r\n\r\n\r\n              </center> \r\n\r\n              <div className='annual-plan'>\r\n                <div className='plan-price mt-2'>                 \r\n                  <span className='pricing-duration text-body font-medium-1 fw-bold ms-25'></span>\r\n                </div>\r\n              </div>   \r\n              </>         \r\n          )\r\n   }\r\n\r\n\r\n\r\n\r\n   const txOptions = {\r\n     recipient: 'SP3FGQ8Z7JY9BWYZ5WM53E0M9NK7WHJF0691NZ159',\r\n     amount: 1000n,\r\n     senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\r\n     network: 'testnet', // for mainnet, use 'mainnet'\r\n     memo: 'Budget for Bitfari Ads',\r\n     //nonce: 0n, // set a nonce manually if you don't want builder to fetch from a Stacks node\r\n     //fee: 200n, // set a tx fee if you don't want the builder to estimate\r\n     anchorMode: AnchorMode.Any,\r\n   };\r\n   \r\n   const transaction = await makeSTXTokenTransfer(txOptions);\r\n   \r\n   // to see the raw serialized tx\r\n   const serializedTx = transaction.serialize().toString('hex');\r\n   \r\n   // broadcasting transaction to the specified network\r\n   const broadcastResponse = await broadcastTransaction(transaction);\r\n   const txId = broadcastResponse.txid;\r\n\r\nexport default PaymentCards\r\n"]},"metadata":{},"sourceType":"module"}