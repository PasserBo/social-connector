{"ast":null,"code":"import mock from'../mock';// ** Utils\nimport{paginateArray}from'../utils';const data={permissions:[{id:1,name:'Management',assignedTo:['administrator'],createdDate:'14 Apr 2021, 8:43 PM'},{id:2,assignedTo:['administrator'],name:'Manage Billing & Roles',createdDate:'16 Sep 2021, 5:20 PM'},{id:3,name:'Add & Remove Users',createdDate:'14 Oct 2021, 10:20 AM',assignedTo:['administrator','manager']},{id:4,name:'Project Planning',createdDate:'14 Oct 2021, 10:20 AM',assignedTo:['administrator','user','support']},{id:5,name:'Manage Email Sequences',createdDate:'23 Aug 2021, 2:00 PM',assignedTo:['administrator','user','support']},{id:6,name:'Client Communication',createdDate:'15 Apr 2021, 11:30 AM',assignedTo:['administrator','manager']},{id:7,name:'Only View',createdDate:'04 Dec 2021, 8:15 PM',assignedTo:['administrator','restricted-user']},{id:8,name:'Financial Management',createdDate:'25 Feb 2021, 10:30 AM',assignedTo:['administrator','manager']},{id:9,name:'Manage Othersâ€™ Tasks',createdDate:'04 Nov 2021, 11:45 AM',assignedTo:['administrator','support']}]};// ------------------------------------------------\n// GET: Return Permissions List\n// ------------------------------------------------\nmock.onGet('/apps/permissions/data').reply(config=>{const{q='',perPage=10,page=1,assignedTo=''}=config.params;const queryLowered=q.toLowerCase();const filteredData=data.permissions.filter(permission=>{if(assignedTo!==''){return(permission.name.toLowerCase().includes(queryLowered)||permission.createdDate.toLowerCase().includes(queryLowered))&&permission.assignedTo.includes(assignedTo);}else{return permission.name.toLowerCase().includes(queryLowered)||permission.createdDate.toLowerCase().includes(queryLowered);}});return[200,{params:config.params,allData:data.permissions,total:filteredData.length,permissions:paginateArray(filteredData,perPage,page)}];});// POST: Add new permission\nmock.onPost('/apps/permissions/add-permission').reply(config=>{// Get permission from post data\nconst permission=JSON.parse(config.data).permission;const{length}=data.permissions;let lastIndex=0;if(length){lastIndex=data.permissions[length-1].id;}permission.id=lastIndex+1;permission.assignedTo=['administrator'];const now=new Date();const months=now.toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric'}).replace(',','');const time=now.toLocaleString('en-US',{hour:'numeric',minute:'numeric',hour12:true});const monthsArr=months.split(' ');/*eslint-disable */const moveElement=(array,sourceIndex,destinationIndex)=>{return array.map(a=>a===sourceIndex?array.find(a=>a===destinationIndex):a===destinationIndex?array.find(a=>a===sourceIndex):a);};const finalDate=moveElement(monthsArr,monthsArr[0],monthsArr[1]).join(' ');permission.createdDate=\"\".concat(finalDate,\", \").concat(time);data.permissions.unshift(permission);return[201,{permission}];});mock.onPost('/apps/permissions/update-permission').reply(config=>{// Get permission from post data\nconst{id,name}=JSON.parse(config.data);data.permissions.find(i=>{if(i.id===id){i.name=name;}});return[201];});// DELETE: Deletes Permissions\nmock.onDelete('/apps/permissions/delete').reply(config=>{// Get  id from URL\nlet permissionID=config.id;// Convert Id to number\npermissionID=Number(permissionID);const permissionIndex=data.permissions.findIndex(t=>t.id===permissionID);data.permissions.splice(permissionIndex,1);return[200];});","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/@local-db/apps/permissionsList.js"],"names":["mock","paginateArray","data","permissions","id","name","assignedTo","createdDate","onGet","reply","config","q","perPage","page","params","queryLowered","toLowerCase","filteredData","filter","permission","includes","allData","total","length","onPost","JSON","parse","lastIndex","now","Date","months","toLocaleDateString","year","month","day","replace","time","toLocaleString","hour","minute","hour12","monthsArr","split","moveElement","array","sourceIndex","destinationIndex","map","a","find","finalDate","join","unshift","i","onDelete","permissionID","Number","permissionIndex","findIndex","t","splice"],"mappings":"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","sourcesContent":["import mock from '../mock'\r\n\r\n// ** Utils\r\nimport { paginateArray } from '../utils'\r\n\r\nconst data = {\r\n  permissions: [\r\n    {\r\n      id: 1,\r\n      name: 'Management',\r\n      assignedTo: ['administrator'],\r\n      createdDate: '14 Apr 2021, 8:43 PM'\r\n    },\r\n    {\r\n      id: 2,\r\n      assignedTo: ['administrator'],\r\n      name: 'Manage Billing & Roles',\r\n      createdDate: '16 Sep 2021, 5:20 PM'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Add & Remove Users',\r\n      createdDate: '14 Oct 2021, 10:20 AM',\r\n      assignedTo: ['administrator', 'manager']\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Project Planning',\r\n      createdDate: '14 Oct 2021, 10:20 AM',\r\n      assignedTo: ['administrator', 'user', 'support']\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Manage Email Sequences',\r\n      createdDate: '23 Aug 2021, 2:00 PM',\r\n      assignedTo: ['administrator', 'user', 'support']\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Client Communication',\r\n      createdDate: '15 Apr 2021, 11:30 AM',\r\n      assignedTo: ['administrator', 'manager']\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Only View',\r\n      createdDate: '04 Dec 2021, 8:15 PM',\r\n      assignedTo: ['administrator', 'restricted-user']\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Financial Management',\r\n      createdDate: '25 Feb 2021, 10:30 AM',\r\n      assignedTo: ['administrator', 'manager']\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Manage Othersâ€™ Tasks',\r\n      createdDate: '04 Nov 2021, 11:45 AM',\r\n      assignedTo: ['administrator', 'support']\r\n    }\r\n  ]\r\n}\r\n\r\n// ------------------------------------------------\r\n// GET: Return Permissions List\r\n// ------------------------------------------------\r\nmock.onGet('/apps/permissions/data').reply(config => {\r\n  const { q = '', perPage = 10, page = 1, assignedTo = '' } = config.params\r\n  const queryLowered = q.toLowerCase()\r\n  const filteredData = data.permissions.filter(permission => {\r\n    if (assignedTo !== '') {\r\n      return (\r\n        (permission.name.toLowerCase().includes(queryLowered) ||\r\n          permission.createdDate.toLowerCase().includes(queryLowered)) &&\r\n        permission.assignedTo.includes(assignedTo)\r\n      )\r\n    } else {\r\n      return (\r\n        permission.name.toLowerCase().includes(queryLowered) ||\r\n        permission.createdDate.toLowerCase().includes(queryLowered)\r\n      )\r\n    }\r\n  })\r\n\r\n  return [\r\n    200,\r\n    {\r\n      params: config.params,\r\n      allData: data.permissions,\r\n      total: filteredData.length,\r\n      permissions: paginateArray(filteredData, perPage, page)\r\n    }\r\n  ]\r\n})\r\n\r\n// POST: Add new permission\r\nmock.onPost('/apps/permissions/add-permission').reply(config => {\r\n  // Get permission from post data\r\n  const permission = JSON.parse(config.data).permission\r\n\r\n  const { length } = data.permissions\r\n  let lastIndex = 0\r\n  if (length) {\r\n    lastIndex = data.permissions[length - 1].id\r\n  }\r\n  permission.id = lastIndex + 1\r\n\r\n  permission.assignedTo = ['administrator']\r\n\r\n  const now = new Date()\r\n  const months = now\r\n    .toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    })\r\n    .replace(',', '')\r\n  const time = now.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n\r\n  const monthsArr = months.split(' ')\r\n  /*eslint-disable */\r\n  const moveElement = (array, sourceIndex, destinationIndex) => {\r\n    return array.map(a =>\r\n      a === sourceIndex\r\n        ? array.find(a => a === destinationIndex)\r\n        : a === destinationIndex\r\n        ? array.find(a => a === sourceIndex)\r\n        : a\r\n    )\r\n  }\r\n\r\n  const finalDate = moveElement(monthsArr, monthsArr[0], monthsArr[1]).join(' ')\r\n\r\n  permission.createdDate = `${finalDate}, ${time}`\r\n\r\n  data.permissions.unshift(permission)\r\n\r\n  return [201, { permission }]\r\n})\r\n\r\nmock.onPost('/apps/permissions/update-permission').reply(config => {\r\n  // Get permission from post data\r\n  const { id, name } = JSON.parse(config.data)\r\n\r\n  data.permissions.find(i => {\r\n    if (i.id === id) {\r\n      i.name = name\r\n    }\r\n  })\r\n\r\n  return [201]\r\n})\r\n\r\n// DELETE: Deletes Permissions\r\nmock.onDelete('/apps/permissions/delete').reply(config => {\r\n  // Get  id from URL\r\n  let permissionID = config.id\r\n\r\n  // Convert Id to number\r\n  permissionID = Number(permissionID)\r\n\r\n  const permissionIndex = data.permissions.findIndex(t => t.id === permissionID)\r\n  data.permissions.splice(permissionIndex, 1)\r\n\r\n  return [200]\r\n})\r\n"]},"metadata":{},"sourceType":"module"}