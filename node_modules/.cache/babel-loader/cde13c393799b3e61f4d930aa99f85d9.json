{"ast":null,"code":"// ** React Imports\nimport{useEffect,useState}from'react';// ** Third Party Components\nimport axios from'axios';import classnames from'classnames';import Chart from'react-apexcharts';import*as Icon from'react-feather';// ** Reactstrap Imports\nimport{Card,CardBody,CardTitle,CardHeader,DropdownMenu,DropdownItem,DropdownToggle,UncontrolledDropdown}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SessionByDevice=props=>{// ** State\nconst[data,setData]=useState(null);useEffect(()=>{axios.get('/card/card-development/sessions-device').then(res=>setData(res.data));},[]);const options={chart:{toolbar:{show:false}},labels:['Desktop','Mobile','Tablet'],dataLabels:{enabled:false},legend:{show:false},comparedResult:[2,-3,8],stroke:{width:0},colors:[props.primary,props.warning,props.danger]},series=[58.6,34.9,6.5];const renderChartInfo=()=>{return data.chart_info.map((item,index)=>{const IconTag=Icon[item.icon];return/*#__PURE__*/_jsxs(\"div\",{className:classnames('d-flex justify-content-between',{'mb-1':index!==data.chart_info.length-1}),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(IconTag,{size:17,className:classnames({[item.iconColor]:item.iconColor})}),/*#__PURE__*/_jsx(\"span\",{className:\"fw-bold ms-75 me-25\",children:item.name}),/*#__PURE__*/_jsxs(\"span\",{children:[\"- \",item.usage,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[item.upDown,\"%\"]}),item.upDown>0?/*#__PURE__*/_jsx(Icon.ArrowUp,{size:14,className:\"ms-25 text-success\"}):/*#__PURE__*/_jsx(Icon.ArrowDown,{size:14,className:\"ms-25 text-danger\"})]})]},index);});};return data!==null?/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"align-items-end\",children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Session By Device\"}),/*#__PURE__*/_jsxs(UncontrolledDropdown,{className:\"chart-dropdown\",children:[/*#__PURE__*/_jsx(DropdownToggle,{color:\"\",className:\"bg-transparent btn-sm border-0 p-50\",children:\"Last 7 days\"}),/*#__PURE__*/_jsx(DropdownMenu,{end:true,children:data.last_days.map(item=>/*#__PURE__*/_jsx(DropdownItem,{className:\"w-100\",children:item},item))})]})]}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Chart,{className:\"my-1\",options:options,series:series,type:\"donut\",height:300}),renderChartInfo()]})]}):null;};export default SessionByDevice;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/ui-elements/cards/development/SessionByDevice.js"],"names":["useEffect","useState","axios","classnames","Chart","Icon","Card","CardBody","CardTitle","CardHeader","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","SessionByDevice","props","data","setData","get","then","res","options","chart","toolbar","show","labels","dataLabels","enabled","legend","comparedResult","stroke","width","colors","primary","warning","danger","series","renderChartInfo","chart_info","map","item","index","IconTag","icon","length","iconColor","name","usage","upDown","last_days"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport classnames from 'classnames'\r\nimport Chart from 'react-apexcharts'\r\nimport * as Icon from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst SessionByDevice = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-development/sessions-device').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n      chart: {\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      labels: ['Desktop', 'Mobile', 'Tablet'],\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      legend: { show: false },\r\n      comparedResult: [2, -3, 8],\r\n      stroke: { width: 0 },\r\n      colors: [props.primary, props.warning, props.danger]\r\n    },\r\n    series = [58.6, 34.9, 6.5]\r\n\r\n  const renderChartInfo = () => {\r\n    return data.chart_info.map((item, index) => {\r\n      const IconTag = Icon[item.icon]\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={classnames('d-flex justify-content-between', {\r\n            'mb-1': index !== data.chart_info.length - 1\r\n          })}\r\n        >\r\n          <div className='d-flex align-items-center'>\r\n            <IconTag\r\n              size={17}\r\n              className={classnames({\r\n                [item.iconColor]: item.iconColor\r\n              })}\r\n            />\r\n            <span className='fw-bold ms-75 me-25'>{item.name}</span>\r\n            <span>- {item.usage}%</span>\r\n          </div>\r\n          <div>\r\n            <span>{item.upDown}%</span>\r\n            {item.upDown > 0 ? (\r\n              <Icon.ArrowUp size={14} className='ms-25 text-success' />\r\n            ) : (\r\n              <Icon.ArrowDown size={14} className='ms-25 text-danger' />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader className='align-items-end'>\r\n        <CardTitle tag='h4'>Session By Device</CardTitle>\r\n        <UncontrolledDropdown className='chart-dropdown'>\r\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n            Last 7 days\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            {data.last_days.map(item => (\r\n              <DropdownItem className='w-100' key={item}>\r\n                {item}\r\n              </DropdownItem>\r\n            ))}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Chart className='my-1' options={options} series={series} type='donut' height={300} />\r\n        {renderChartInfo()}\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default SessionByDevice\r\n"]},"metadata":{},"sourceType":"module"}