{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/tables/data-tables/advance/TableAdvSearch.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, Fragment } from 'react'; // ** Table Columns\n\nimport { data, advSearchColumns } from '../data'; // ** Third Party Components\n\nimport Flatpickr from 'react-flatpickr';\nimport ReactPaginate from 'react-paginate';\nimport { ChevronDown } from 'react-feather';\nimport DataTable from 'react-data-table-component'; // ** Reactstrap Imports\n\nimport { Card, CardHeader, CardBody, CardTitle, Input, Label, Row, Col } from 'reactstrap'; // ** Styles\n\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataTableAdvSearch = () => {\n  _s();\n\n  // ** States\n  const [Picker, setPicker] = useState('');\n  const [searchState, setSearchState] = useState('');\n  const [searchPost, setSearchPost] = useState('');\n  const [searchCity, setSearchCity] = useState('');\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchEmail, setSearchEmail] = useState('');\n  const [searchTraffic, setSearchTraffic] = useState('');\n  const [filteredData, setFilteredData] = useState([]); // ** Function to handle Pagination\n\n  const handlePagination = page => setCurrentPage(page.selected); // ** Table data to render\n\n\n  const dataToRender = () => {\n    if (searchState.length || searchPost.length || searchEmail.length || searchCity.length || searchTraffic.length || Picker.length) {\n      return filteredData;\n    } else {\n      return data;\n    }\n  }; // ** Custom Pagination\n\n\n  const CustomPagination = () => /*#__PURE__*/_jsxDEV(ReactPaginate, {\n    previousLabel: '',\n    nextLabel: '',\n    forcePage: currentPage,\n    onPageChange: page => handlePagination(page),\n    pageCount: Math.ceil(dataToRender().length / 7) || 1,\n    breakLabel: '...',\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 2,\n    activeClassState: \"active\",\n    pageClassState: \"page-item\",\n    breakClassState: \"page-item\",\n    nextLinkClassState: \"page-link\",\n    pageLinkClassState: \"page-link\",\n    breakLinkClassState: \"page-link\",\n    previousLinkClassState: \"page-link\",\n    nextClassState: \"page-item next-item\",\n    previousClassState: \"page-item prev-item\",\n    containerClassState: 'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this); // ** Function to handle State filter\n\n\n  const handleStateFilter = e => {\n    const value = e.target.value;\n    let updatedData = [];\n\n    const dataToFilter = () => {\n      if (searchEmail.length || searchPost.length || searchCity.length || searchTraffic.length || Picker.length) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchState(value);\n\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.full_State.toLowerCase().startsWith(value.toLowerCase());\n        const includes = item.full_State.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchState(value);\n    }\n  }; // ** Function to handle email filter\n\n\n  const handleEmailFilter = e => {\n    const value = e.target.value;\n    let updatedData = [];\n\n    const dataToFilter = () => {\n      if (searchState.length || searchPost.length || searchCity.length || searchTraffic.length || Picker.length) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchEmail(value);\n\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.email.toLowerCase().startsWith(value.toLowerCase());\n        const includes = item.email.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchEmail(value);\n    }\n  }; // ** Function to handle post filter\n\n\n  const handlePostFilter = e => {\n    const value = e.target.value;\n    let updatedData = [];\n\n    const dataToFilter = () => {\n      if (searchEmail.length || searchState.length || searchCity.length || searchTraffic.length || Picker.length) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchPost(value);\n\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.post.toLowerCase().startsWith(value.toLowerCase());\n        const includes = item.post.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchPost(value);\n    }\n  }; // ** Function to handle city filter\n\n\n  const handleCityFilter = e => {\n    const value = e.target.value;\n    let updatedData = [];\n\n    const dataToFilter = () => {\n      if (searchEmail.length || searchState.length || searchPost.length || searchTraffic.length || Picker.length) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchCity(value);\n\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.city.toLowerCase().startsWith(value.toLowerCase());\n        const includes = item.city.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchCity(value);\n    }\n  }; // ** Function to handle Traffic filter\n\n\n  const handleTrafficFilter = e => {\n    const value = e.target.value;\n    let updatedData = [];\n\n    const dataToFilter = () => {\n      if (searchEmail.length || searchState.length || searchPost.length || searchCity.length || Picker.length) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchTraffic(value);\n\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.Traffic.toLowerCase().startsWith(value.toLowerCase());\n        const includes = item.Traffic.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchTraffic(value);\n    }\n  }; // ** Function to handle date filter\n\n\n  const handleDateFilter = range => {\n    const arr = [];\n    let updatedData = [];\n\n    const dataToFilter = () => {\n      if (searchEmail.length || searchState.length || searchPost.length || searchCity.length || searchTraffic.length) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    range.map(i => {\n      const date = new Date(i);\n      const year = date.getFullYear();\n      let month = (1 + date.getMonth()).toString();\n      month = month.length > 1 ? month : `0${month}`;\n      let day = date.getDate().toString();\n      day = day.length > 1 ? day : `0${day}`;\n      arr.push(`${month}/${day}/${year}`);\n      return true;\n    });\n    setPicker(range);\n\n    if (range.length) {\n      updatedData = dataToFilter().filter(item => {\n        return new Date(item.start_date).getTime() >= new Date(arr[0]).getTime() && new Date(item.start_date).getTime() <= new Date(arr[1]).getTime();\n      });\n      setFilteredData([...updatedData]);\n      setPicker(range);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        classState: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h4\",\n          children: \"Advanced Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          classState: \"mt-1 mb-50\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            md: \"6\",\n            classState: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              classState: \"form-label\",\n              for: \"State\",\n              children: \"State:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"State\",\n              placeholder: \"Bruce Wayne\",\n              value: searchState,\n              onChange: handleStateFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            md: \"6\",\n            classState: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              classState: \"form-label\",\n              for: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              id: \"email\",\n              placeholder: \"Bwayne@email.com\",\n              value: searchEmail,\n              onChange: handleEmailFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            md: \"6\",\n            classState: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              classState: \"form-label\",\n              for: \"post\",\n              children: \"Post:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"post\",\n              placeholder: \"Web Designer\",\n              value: searchPost,\n              onChange: handlePostFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            md: \"6\",\n            classState: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              classState: \"form-label\",\n              for: \"city\",\n              children: \"City:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"city\",\n              placeholder: \"San Diego\",\n              value: searchCity,\n              onChange: handleCityFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            md: \"6\",\n            classState: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              classState: \"form-label\",\n              for: \"date\",\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n              classState: \"form-control\",\n              id: \"date\",\n              value: Picker,\n              options: {\n                mode: 'range',\n                dateFormat: 'm/d/Y'\n              },\n              onChange: date => handleDateFilter(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            md: \"6\",\n            classState: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              classState: \"form-label\",\n              for: \"Traffic\",\n              children: \"Foot Traffic:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"Traffic\",\n              placeholder: \"10000\",\n              value: searchTraffic,\n              onChange: handleTrafficFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        classState: \"react-dataTable\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          noHeader: true,\n          pagination: true,\n          columns: advSearchColumns,\n          paginationPerPage: 7,\n          classState: \"react-dataTable\",\n          sortIcon: /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 23\n          }, this),\n          paginationDefaultPage: currentPage + 1,\n          paginationComponent: CustomPagination,\n          data: dataToRender()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataTableAdvSearch, \"gm30HtUdcBUxv5B83Dz4wlATFXM=\");\n\n_c = DataTableAdvSearch;\nexport default DataTableAdvSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableAdvSearch\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/tables/data-tables/advance/TableAdvSearch.js"],"names":["useState","Fragment","data","advSearchColumns","Flatpickr","ReactPaginate","ChevronDown","DataTable","Card","CardHeader","CardBody","CardTitle","Input","Label","Row","Col","DataTableAdvSearch","Picker","setPicker","searchState","setSearchState","searchPost","setSearchPost","searchCity","setSearchCity","currentPage","setCurrentPage","searchEmail","setSearchEmail","searchTraffic","setSearchTraffic","filteredData","setFilteredData","handlePagination","page","selected","dataToRender","length","CustomPagination","Math","ceil","handleStateFilter","e","value","target","updatedData","dataToFilter","filter","item","startsWith","full_State","toLowerCase","includes","handleEmailFilter","email","handlePostFilter","post","handleCityFilter","city","handleTrafficFilter","Traffic","handleDateFilter","range","arr","map","i","date","Date","year","getFullYear","month","getMonth","toString","day","getDate","push","start_date","getTime","mode","dateFormat"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Table Columns\r\nimport { data, advSearchColumns } from '../data'\r\n\r\n// ** Third Party Components\r\nimport Flatpickr from 'react-flatpickr'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Input, Label, Row, Col } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\n\r\nconst DataTableAdvSearch = () => {\r\n  // ** States\r\n  const [Picker, setPicker] = useState('')\r\n  const [searchState, setSearchState] = useState('')\r\n  const [searchPost, setSearchPost] = useState('')\r\n  const [searchCity, setSearchCity] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n  const [searchEmail, setSearchEmail] = useState('')\r\n  const [searchTraffic, setSearchTraffic] = useState('')\r\n  const [filteredData, setFilteredData] = useState([])\r\n\r\n  // ** Function to handle Pagination\r\n  const handlePagination = page => setCurrentPage(page.selected)\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    if (\r\n      searchState.length ||\r\n      searchPost.length ||\r\n      searchEmail.length ||\r\n      searchCity.length ||\r\n      searchTraffic.length ||\r\n      Picker.length\r\n    ) {\r\n      return filteredData\r\n    } else {\r\n      return data\r\n    }\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => (\r\n    <ReactPaginate\r\n      previousLabel={''}\r\n      nextLabel={''}\r\n      forcePage={currentPage}\r\n      onPageChange={page => handlePagination(page)}\r\n      pageCount={Math.ceil(dataToRender().length / 7) || 1}\r\n      breakLabel={'...'}\r\n      pageRangeDisplayed={2}\r\n      marginPagesDisplayed={2}\r\n      activeClassState='active'\r\n      pageClassState='page-item'\r\n      breakClassState='page-item'\r\n      nextLinkClassState='page-link'\r\n      pageLinkClassState='page-link'\r\n      breakLinkClassState='page-link'\r\n      previousLinkClassState='page-link'\r\n      nextClassState='page-item next-item'\r\n      previousClassState='page-item prev-item'\r\n      containerClassState={'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'}\r\n    />\r\n  )\r\n\r\n  // ** Function to handle State filter\r\n  const handleStateFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    const dataToFilter = () => {\r\n      if (searchEmail.length || searchPost.length || searchCity.length || searchTraffic.length || Picker.length) {\r\n        return filteredData\r\n      } else {\r\n        return data\r\n      }\r\n    }\r\n\r\n    setSearchState(value)\r\n    if (value.length) {\r\n      updatedData = dataToFilter().filter(item => {\r\n        const startsWith = item.full_State.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n        const includes = item.full_State.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData([...updatedData])\r\n      setSearchState(value)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle email filter\r\n  const handleEmailFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    const dataToFilter = () => {\r\n      if (searchState.length || searchPost.length || searchCity.length || searchTraffic.length || Picker.length) {\r\n        return filteredData\r\n      } else {\r\n        return data\r\n      }\r\n    }\r\n\r\n    setSearchEmail(value)\r\n    if (value.length) {\r\n      updatedData = dataToFilter().filter(item => {\r\n        const startsWith = item.email.toLowerCase().startsWith(value.toLowerCase())\r\n        const includes = item.email.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData([...updatedData])\r\n      setSearchEmail(value)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle post filter\r\n  const handlePostFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    const dataToFilter = () => {\r\n      if (searchEmail.length || searchState.length || searchCity.length || searchTraffic.length || Picker.length) {\r\n        return filteredData\r\n      } else {\r\n        return data\r\n      }\r\n    }\r\n\r\n    setSearchPost(value)\r\n    if (value.length) {\r\n      updatedData = dataToFilter().filter(item => {\r\n        const startsWith = item.post.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n        const includes = item.post.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData([...updatedData])\r\n      setSearchPost(value)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle city filter\r\n  const handleCityFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    const dataToFilter = () => {\r\n      if (searchEmail.length || searchState.length || searchPost.length || searchTraffic.length || Picker.length) {\r\n        return filteredData\r\n      } else {\r\n        return data\r\n      }\r\n    }\r\n\r\n    setSearchCity(value)\r\n    if (value.length) {\r\n      updatedData = dataToFilter().filter(item => {\r\n        const startsWith = item.city.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n        const includes = item.city.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData([...updatedData])\r\n      setSearchCity(value)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle Traffic filter\r\n  const handleTrafficFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    const dataToFilter = () => {\r\n      if (searchEmail.length || searchState.length || searchPost.length || searchCity.length || Picker.length) {\r\n        return filteredData\r\n      } else {\r\n        return data\r\n      }\r\n    }\r\n\r\n    setSearchTraffic(value)\r\n    if (value.length) {\r\n      updatedData = dataToFilter().filter(item => {\r\n        const startsWith = item.Traffic.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n        const includes = item.Traffic.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData([...updatedData])\r\n      setSearchTraffic(value)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle date filter\r\n  const handleDateFilter = range => {\r\n    const arr = []\r\n    let updatedData = []\r\n    const dataToFilter = () => {\r\n      if (searchEmail.length || searchState.length || searchPost.length || searchCity.length || searchTraffic.length) {\r\n        return filteredData\r\n      } else {\r\n        return data\r\n      }\r\n    }\r\n\r\n    range.map(i => {\r\n      const date = new Date(i)\r\n\r\n      const year = date.getFullYear()\r\n\r\n      let month = (1 + date.getMonth()).toString()\r\n      month = month.length > 1 ? month : `0${month}`\r\n\r\n      let day = date.getDate().toString()\r\n      day = day.length > 1 ? day : `0${day}`\r\n\r\n      arr.push(`${month}/${day}/${year}`)\r\n      return true\r\n    })\r\n\r\n    setPicker(range)\r\n\r\n    if (range.length) {\r\n      updatedData = dataToFilter().filter(item => {\r\n        return (\r\n          new Date(item.start_date).getTime() >= new Date(arr[0]).getTime() &&\r\n          new Date(item.start_date).getTime() <= new Date(arr[1]).getTime()\r\n        )\r\n      })\r\n      setFilteredData([...updatedData])\r\n      setPicker(range)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader classState='border-bottom'>\r\n          <CardTitle tag='h4'>Advanced Search</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row classState='mt-1 mb-50'>\r\n            <Col lg='4' md='6' classState='mb-1'>\r\n              <Label classState='form-label' for='State'>\r\n                State:\r\n              </Label>\r\n              <Input id='State' placeholder='Bruce Wayne' value={searchState} onChange={handleStateFilter} />\r\n            </Col>\r\n            <Col lg='4' md='6' classState='mb-1'>\r\n              <Label classState='form-label' for='email'>\r\n                Email:\r\n              </Label>\r\n              <Input\r\n                type='email'\r\n                id='email'\r\n                placeholder='Bwayne@email.com'\r\n                value={searchEmail}\r\n                onChange={handleEmailFilter}\r\n              />\r\n            </Col>\r\n            <Col lg='4' md='6' classState='mb-1'>\r\n              <Label classState='form-label' for='post'>\r\n                Post:\r\n              </Label>\r\n              <Input id='post' placeholder='Web Designer' value={searchPost} onChange={handlePostFilter} />\r\n            </Col>\r\n            <Col lg='4' md='6' classState='mb-1'>\r\n              <Label classState='form-label' for='city'>\r\n                City:\r\n              </Label>\r\n              <Input id='city' placeholder='San Diego' value={searchCity} onChange={handleCityFilter} />\r\n            </Col>\r\n            <Col lg='4' md='6' classState='mb-1'>\r\n              <Label classState='form-label' for='date'>\r\n                Date:\r\n              </Label>\r\n              <Flatpickr\r\n                classState='form-control'\r\n                id='date'\r\n                value={Picker}\r\n                options={{ mode: 'range', dateFormat: 'm/d/Y' }}\r\n                onChange={date => handleDateFilter(date)}\r\n              />\r\n            </Col>\r\n            <Col lg='4' md='6' classState='mb-1'>\r\n              <Label classState='form-label' for='Traffic'>\r\n                Foot Traffic:\r\n              </Label>\r\n              <Input id='Traffic' placeholder='10000' value={searchTraffic} onChange={handleTrafficFilter} />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n        <div classState='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            columns={advSearchColumns}\r\n            paginationPerPage={7}\r\n            classState='react-dataTable'\r\n            sortIcon={<ChevronDown size={10} />}\r\n            paginationDefaultPage={currentPage + 1}\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DataTableAdvSearch\r\n"]},"metadata":{},"sourceType":"module"}