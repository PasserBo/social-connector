{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { forwardRef } from 'react';\nimport { Box } from '../box/index.esm.js';\nimport { useButtonStyle } from './styles.esm.js';\nimport { Spinner } from '../spinner/index.esm.js';\nimport { useHover } from 'use-events';\n\nvar HoverChange = function HoverChange(_ref) {\n  var isHovered = _ref.isHovered,\n      isDisabled = _ref.isDisabled;\n  return React__default.createElement(Box, {\n    borderRadius: \"6px\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    left: 0,\n    top: 0,\n    bg: \"darken.150\",\n    opacity: !isDisabled && isHovered ? 1 : 0,\n    zIndex: 1,\n    transition: \"all 250ms\"\n  });\n};\n\nvar Button = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var isDisabled = _ref2.isDisabled,\n      isActive = _ref2.isActive,\n      children = _ref2.children,\n      Comp = _ref2.as,\n      _ref2$mode = _ref2.mode,\n      mode = _ref2$mode === void 0 ? 'primary' : _ref2$mode,\n      _ref2$variant = _ref2.variant,\n      variant = _ref2$variant === void 0 ? 'solid' : _ref2$variant,\n      type = _ref2.type,\n      _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? 'md' : _ref2$size,\n      isLoading = _ref2.isLoading,\n      loadingText = _ref2.loadingText,\n      customStyles = _ref2.customStyles,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"isDisabled\", \"isActive\", \"children\", \"as\", \"mode\", \"variant\", \"type\", \"size\", \"isLoading\", \"loadingText\", \"customStyles\"]);\n\n  var styles = useButtonStyle({\n    variant: variant,\n    mode: mode,\n    size: size,\n    customStyles: customStyles\n  });\n\n  var _useHover = useHover(),\n      hovered = _useHover[0],\n      bind = _useHover[1];\n\n  return React__default.createElement(Box, Object.assign({\n    disabled: isDisabled,\n    \"aria-disabled\": isDisabled,\n    ref: ref,\n    type: type,\n    borderRadius: \"6px\",\n    fontWeight: \"medium\",\n    position: \"relative\",\n    \"data-active\": isActive ? 'true' : undefined,\n    as: Comp || 'button'\n  }, rest, styles, bind), React__default.createElement(Box, {\n    as: \"span\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    zIndex: 5\n  }, isLoading && React__default.createElement(Spinner, {\n    position: loadingText ? 'relative' : 'absolute',\n    mx: !loadingText ? 'auto' : 'unset',\n    color: \"currentColor\",\n    size: size === 'sm' ? 'xs' : 'sm'\n  }), isLoading ? React__default.createElement(Box, {\n    ml: \"tight\"\n  }, loadingText) || React__default.createElement(Box, {\n    ml: \"tight\",\n    as: \"span\",\n    opacity: 0\n  }, children) : children), mode === 'primary' ? React__default.createElement(HoverChange, {\n    isDisabled: isDisabled || false,\n    isHovered: hovered\n  }) : null);\n});\nButton.displayName = 'Button';\nexport { Button };","map":{"version":3,"sources":["../../src/button/index.tsx"],"names":["HoverChange","isHovered","isDisabled","borderRadius","position","width","height","left","top","bg","opacity","zIndex","transition","Button","forwardRef","isActive","children","as","Comp","mode","variant","type","size","isLoading","loadingText","customStyles","rest","styles","useButtonStyle","hovered","bind","useHover","React","disabled","ref","fontWeight","undefined","display","alignItems","justifyContent","mx","color","ml"],"mappings":";;;;;;;AAUA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA;AAAA,MAAGC,SAAH,GAAA,IAAA,CAAA,SAAA;AAAA,MAAcC,UAAd,GAAA,IAAA,CAAA,UAAA;AAAA,SAClB,cAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACEC,IAAAA,YAAY,EAAC,KADf;AAEEC,IAAAA,QAAQ,EAAC,UAFX;AAGEC,IAAAA,KAAK,EAAC,MAHR;AAIEC,IAAAA,MAAM,EAAC,MAJT;AAKEC,IAAAA,IAAI,EAAE,CALR;AAMEC,IAAAA,GAAG,EAAE,CANP;AAOEC,IAAAA,EAAE,EAAC,YAPL;AAQEC,IAAAA,OAAO,EAAE,CAAA,UAAA,IAAA,SAAA,GAAA,CAAA,GAA+B,CAR1C;AASEC,IAAAA,MAAM,EAAE,CATV;AAUEC,IAAAA,UAAU,EAAC;AAVb,GAAA,CADkB;AAApB,CAAA;;IAeaC,MAAM,GAAA,aAAGC,UAAU,CAC9B,UAAA,KAAA,EAAA,GAAA,EAAA;MAEIZ,UAAAA,GAAAA,KAAAA,CAAAA,U;MACAa,QAAAA,GAAAA,KAAAA,CAAAA,Q;MACAC,QAAAA,GAAAA,KAAAA,CAAAA,Q;MACIE,IAAAA,GAAAA,KAAAA,CAAJD,E;yBACAE,I;MAAAA,IAAAA,GAAAA,UAAAA,KAAAA,KAAAA,CAAAA,GAAO,SAAPA,GAAO,U;4BACPC,O;MAAAA,OAAAA,GAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAU,OAAVA,GAAU,a;MACVC,IAAAA,GAAAA,KAAAA,CAAAA,I;yBACAC,I;MAAAA,IAAAA,GAAAA,UAAAA,KAAAA,KAAAA,CAAAA,GAAO,IAAPA,GAAO,U;MACPC,SAAAA,GAAAA,KAAAA,CAAAA,S;MACAC,WAAAA,GAAAA,KAAAA,CAAAA,W;MACAC,YAAAA,GAAAA,KAAAA,CAAAA,Y;MACGC,IAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,YAAAA,EAAAA,UAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,MAAAA,EAAAA,SAAAA,EAAAA,MAAAA,EAAAA,MAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,cAAAA,CAAAA,C;;AAIL,MAAMC,MAAM,GAAGC,cAAc,CAAC;AAC5BR,IAAAA,OAAO,EADqB,OAAA;AAE5BD,IAAAA,IAAI,EAFwB,IAAA;AAG5BG,IAAAA,IAAI,EAHwB,IAAA;AAI5BG,IAAAA,YAAY,EAAZA;AAJ4B,GAAD,CAA7B;;kBAOwBM,QAAQ,E;MAAzBF,OAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;MAASC,IAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;;AAEhB,SACEE,cAAAA,CAAAA,aAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AACEC,IAAAA,QAAQ,EAAE/B,UADZ8B;qBAEiB9B,UAFjB8B;AAGEE,IAAAA,GAAG,EAAEA,GAHPF;AAIEX,IAAAA,IAAI,EAAEA,IAJRW;AAKE7B,IAAAA,YAAY,EAAC,KALf6B;AAMEG,IAAAA,UAAU,EAAC,QANbH;AAOE5B,IAAAA,QAAQ,EAAC,UAPX4B;mBAQejB,QAAQ,GAAA,MAAA,GAAYqB,SARnCJ;AASEf,IAAAA,EAAE,EAAEC,IAAI,IAAI;AATdc,GAAAA,EAUMN,IAVNM,EAWML,MAXNK,EAAAA,IAAAA,CAAAA,EAcE,cAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACEf,IAAAA,EAAE,EAAC,MADL;AAEEoB,IAAAA,OAAO,EAAC,MAFV;AAGEC,IAAAA,UAAU,EAAC,QAHb;AAIEC,IAAAA,cAAc,EAAC,QAJjB;AAKEnC,IAAAA,QAAQ,EAAC,UALX;AAMEO,IAAAA,MAAM,EAAE;AANV,GAAA,EAQGY,SAAS,IACR,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACEnB,IAAAA,QAAQ,EAAEoB,WAAW,GAAA,UAAA,GAAgB,UADvC;AAEEgB,IAAAA,EAAE,EAAE,CAAA,WAAA,GAAA,MAAA,GAAwB,OAF9B;AAGEC,IAAAA,KAAK,EAAC,cAHR;AAIEnB,IAAAA,IAAI,EAAEA,IAAI,KAAJA,IAAAA,GAAAA,IAAAA,GAAuB;AAJ/B,GAAA,CATJ,EAgBGC,SAAS,GACN,cAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAKmB,IAAAA,EAAE,EAAC;AAAR,GAAA,EAAA,WAAA,KACE,cAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAKA,IAAAA,EAAE,EAAC,OAAR;AAAgBzB,IAAAA,EAAE,EAAC,MAAnB;AAA0BP,IAAAA,OAAO,EAAE;AAAnC,GAAA,EAFI,QAEJ,CAFI,GA9BdsB,QAcE,CAdFA,EAsCG,IAAI,KAAJ,SAAA,GACC,cAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAAa9B,IAAAA,UAAU,EAAEA,UAAU,IAAI,KAAvC;AAA8CD,IAAAA,SAAS,EAAE4B;AAAzD,GAAA,CADD,GAvCL,IACEG,CADF;AA3B4B,CAAA,C;AA0EhCnB,MAAM,CAANA,WAAAA,GAAAA,QAAAA","sourcesContent":["import React, { Ref, forwardRef } from 'react';\nimport { PseudoBox } from '../pseudo-box';\nimport { Box } from '../box';\nimport { useButtonStyle } from './styles';\nimport { Spinner } from '../spinner';\nimport { ButtonProps } from './types';\nimport { useHover } from 'use-events';\n\nexport * from './types';\n\nconst HoverChange = ({ isHovered, isDisabled }: { isHovered: boolean; isDisabled: boolean }) => (\n  <Box\n    borderRadius=\"6px\"\n    position=\"absolute\"\n    width=\"100%\"\n    height=\"100%\"\n    left={0}\n    top={0}\n    bg=\"darken.150\"\n    opacity={!isDisabled && isHovered ? 1 : 0}\n    zIndex={1}\n    transition=\"all 250ms\"\n  />\n);\n\nexport const Button = forwardRef<Ref<HTMLDivElement>, ButtonProps>(\n  (\n    {\n      isDisabled,\n      isActive,\n      children,\n      as: Comp,\n      mode = 'primary',\n      variant = 'solid',\n      type,\n      size = 'md',\n      isLoading,\n      loadingText,\n      customStyles,\n      ...rest\n    },\n    ref\n  ) => {\n    const styles = useButtonStyle({\n      variant,\n      mode,\n      size,\n      customStyles,\n    });\n\n    const [hovered, bind] = useHover();\n\n    return (\n      <PseudoBox\n        disabled={isDisabled}\n        aria-disabled={isDisabled}\n        ref={ref}\n        type={type}\n        borderRadius=\"6px\"\n        fontWeight=\"medium\"\n        position=\"relative\"\n        data-active={isActive ? 'true' : undefined}\n        as={Comp || 'button'}\n        {...rest}\n        {...styles}\n        {...bind}\n      >\n        <Box\n          as=\"span\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          position=\"relative\"\n          zIndex={5}\n        >\n          {isLoading && (\n            <Spinner\n              position={loadingText ? 'relative' : 'absolute'}\n              mx={!loadingText ? 'auto' : 'unset'}\n              color=\"currentColor\"\n              size={size === 'sm' ? 'xs' : 'sm'}\n            />\n          )}\n          {isLoading\n            ? <Box ml=\"tight\">{loadingText}</Box> || (\n                <Box ml=\"tight\" as=\"span\" opacity={0}>\n                  {children}\n                </Box>\n              )\n            : children}\n        </Box>\n        {mode === 'primary' ? (\n          <HoverChange isDisabled={isDisabled || false} isHovered={hovered} />\n        ) : null}\n      </PseudoBox>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n"]},"metadata":{},"sourceType":"module"}