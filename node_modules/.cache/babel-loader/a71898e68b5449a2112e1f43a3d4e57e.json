{"ast":null,"code":"// ** React Imports\nimport{Fragment,useState}from'react';// ** Third Party Components\nimport XLSX from'xlsx';import{toast}from'react-toastify';import{useDropzone}from'react-dropzone';import{X,DownloadCloud}from'react-feather';// ** Custom Components\nimport Avatar from'@components/avatar';import ExtensionsHeader from'@components/extensions-header';// ** Reactstrap Imports\nimport{Row,Col,Card,CardBody,Table,CardHeader,CardTitle,Input,Label}from'reactstrap';// ** Styles\nimport'@styles/react/libs/file-uploader/file-uploader.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ErrorToast=()=>/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toastify-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"danger\",icon:/*#__PURE__*/_jsx(X,{size:12})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title\",children:\"Error!\"})]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"a second ago\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"toastify-body\",children:/*#__PURE__*/_jsxs(\"span\",{role:\"img\",\"aria-label\":\"toast-text\",children:[\"\\uD83D\\uDC4B You can only upload \",/*#__PURE__*/_jsx(\"span\",{className:\"fw-bolder\",children:\".xlsx\"}),\", \",/*#__PURE__*/_jsx(\"span\",{className:\"fw-bolder\",children:\".xls\"}),\" &\",' ',/*#__PURE__*/_jsx(\"span\",{className:\"fw-bolder\",children:\".csv\"}),\" Files!.\"]})})]});const Import=()=>{// ** States\nconst[name,setName]=useState('');const[value,setValue]=useState('');const[tableData,setTableData]=useState([]);const[filteredData,setFilteredData]=useState([]);const getTableData=(arr,name)=>{setTableData(arr);setName(name);};const{getRootProps,getInputProps}=useDropzone({multiple:false,onDrop:result=>{const reader=new FileReader();reader.onload=function(){const fileData=reader.result;const wb=XLSX.read(fileData,{type:'binary'});wb.SheetNames.forEach(function(sheetName){const rowObj=XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);getTableData(rowObj,result[0].name);});};if(result.length&&result[0].name.endsWith('xlsx')){reader.readAsBinaryString(result[0]);}else{toast.error(/*#__PURE__*/_jsx(ErrorToast,{}),{icon:false,hideProgressBar:true});}}});const handleFilter=e=>{const data=tableData;let filteredData=[];const value=e.target.value;setValue(value);if(value.length){filteredData=data.filter(col=>{const keys=Object.keys(col);const startsWithCondition=keys.filter(key=>{return col[key].toString().toLowerCase().startsWith(value.toLowerCase());});const includesCondition=keys.filter(key=>col[key].toString().toLowerCase().includes(value.toLowerCase()));if(startsWithCondition.length)return col[startsWithCondition];else if(!startsWithCondition&&includesCondition.length)return col[includesCondition];else return null;});setFilteredData(filteredData);setValue(value);}else{return null;}};/*eslint-disable */const headArr=tableData.length?tableData.map((col,index)=>{if(index===0)return[...Object.keys(col)];else return null;}):[];/*eslint-enable */const dataArr=value.length?filteredData:tableData.length&&!value.length?tableData:null;const renderTableBody=()=>{if(dataArr!==null&&dataArr.length){return dataArr.map((col,index)=>{const keys=Object.keys(col);const renderTd=keys.map((key,index)=>/*#__PURE__*/_jsx(\"td\",{children:col[key]},index));return/*#__PURE__*/_jsx(\"tr\",{children:renderTd},index);});}else{return null;}};const renderTableHead=()=>{if(headArr.length){return headArr[0].map((head,index)=>{return/*#__PURE__*/_jsx(\"th\",{children:head},index);});}else{return null;}};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(ExtensionsHeader,{title:\"XLSX\",subTitle:\"Xlsx is a parser and writer for various spreadsheet formats\",link:\"https://github.com/SheetJS/sheetjs\"}),/*#__PURE__*/_jsxs(Row,{className:\"import-component\",children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(\"div\",{...getRootProps({className:'dropzone'}),children:[/*#__PURE__*/_jsx(\"input\",{...getInputProps()}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center justify-content-center flex-column\",children:[/*#__PURE__*/_jsx(DownloadCloud,{size:64}),/*#__PURE__*/_jsx(\"h5\",{children:\"Drop Files here or click to upload\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-secondary\",children:[\"Drop files here or click\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"/\",onClick:e=>e.preventDefault(),children:\"browse\"}),' ',\"thorough your machine\"]})]})]})})})})})}),tableData.length?/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"justify-content-between flex-wrap\",children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:name}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center justify-content-end\",children:[/*#__PURE__*/_jsx(Label,{for:\"search-input\",className:\"me-1\",children:\"Search\"}),/*#__PURE__*/_jsx(Input,{id:\"search-input\",type:\"text\",bsSize:\"sm\",value:value,onChange:e=>handleFilter(e)})]})]}),/*#__PURE__*/_jsxs(Table,{className:\"table-hover-animation\",responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:renderTableHead()})}),/*#__PURE__*/_jsx(\"tbody\",{children:renderTableBody()})]})]})}):null]})]});};export default Import;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/views/extensions/import-export/Import.js"],"names":["Fragment","useState","XLSX","toast","useDropzone","X","DownloadCloud","Avatar","ExtensionsHeader","Row","Col","Card","CardBody","Table","CardHeader","CardTitle","Input","Label","ErrorToast","Import","name","setName","value","setValue","tableData","setTableData","filteredData","setFilteredData","getTableData","arr","getRootProps","getInputProps","multiple","onDrop","result","reader","FileReader","onload","fileData","wb","read","type","SheetNames","forEach","sheetName","rowObj","utils","sheet_to_row_object_array","Sheets","length","endsWith","readAsBinaryString","error","icon","hideProgressBar","handleFilter","e","data","target","filter","col","keys","Object","startsWithCondition","key","toString","toLowerCase","startsWith","includesCondition","includes","headArr","map","index","dataArr","renderTableBody","renderTd","renderTableHead","head","className","preventDefault"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport XLSX from 'xlsx'\r\nimport { toast } from 'react-toastify'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { X, DownloadCloud } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input, Label } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='toast-title'>Error!</h6>\r\n      </div>\r\n      <small className='text-muted'>a second ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 You can only upload <span className='fw-bolder'>.xlsx</span>, <span className='fw-bolder'>.xls</span> &{' '}\r\n        <span className='fw-bolder'>.csv</span> Files!.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Import = () => {\r\n  // ** States\r\n  const [name, setName] = useState('')\r\n  const [value, setValue] = useState('')\r\n  const [tableData, setTableData] = useState([])\r\n  const [filteredData, setFilteredData] = useState([])\r\n\r\n  const getTableData = (arr, name) => {\r\n    setTableData(arr)\r\n    setName(name)\r\n  }\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop: result => {\r\n      const reader = new FileReader()\r\n      reader.onload = function () {\r\n        const fileData = reader.result\r\n        const wb = XLSX.read(fileData, { type: 'binary' })\r\n\r\n        wb.SheetNames.forEach(function (sheetName) {\r\n          const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\r\n          getTableData(rowObj, result[0].name)\r\n        })\r\n      }\r\n      if (result.length && result[0].name.endsWith('xlsx')) {\r\n        reader.readAsBinaryString(result[0])\r\n      } else {\r\n        toast.error(<ErrorToast />, { icon: false, hideProgressBar: true })\r\n      }\r\n    }\r\n  })\r\n\r\n  const handleFilter = e => {\r\n    const data = tableData\r\n    let filteredData = []\r\n    const value = e.target.value\r\n    setValue(value)\r\n\r\n    if (value.length) {\r\n      filteredData = data.filter(col => {\r\n        const keys = Object.keys(col)\r\n\r\n        const startsWithCondition = keys.filter(key => {\r\n          return col[key].toString().toLowerCase().startsWith(value.toLowerCase())\r\n        })\r\n\r\n        const includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()))\r\n\r\n        if (startsWithCondition.length) return col[startsWithCondition]\r\n        else if (!startsWithCondition && includesCondition.length) return col[includesCondition]\r\n        else return null\r\n      })\r\n      setFilteredData(filteredData)\r\n      setValue(value)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n  /*eslint-disable */\r\n  const headArr = tableData.length\r\n    ? tableData.map((col, index) => {\r\n        if (index === 0) return [...Object.keys(col)]\r\n        else return null\r\n      })\r\n    : []\r\n  /*eslint-enable */\r\n  const dataArr = value.length ? filteredData : tableData.length && !value.length ? tableData : null\r\n\r\n  const renderTableBody = () => {\r\n    if (dataArr !== null && dataArr.length) {\r\n      return dataArr.map((col, index) => {\r\n        const keys = Object.keys(col)\r\n        const renderTd = keys.map((key, index) => <td key={index}>{col[key]}</td>)\r\n        return <tr key={index}>{renderTd}</tr>\r\n      })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const renderTableHead = () => {\r\n    if (headArr.length) {\r\n      return headArr[0].map((head, index) => {\r\n        return <th key={index}>{head}</th>\r\n      })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='XLSX'\r\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\r\n        link='https://github.com/SheetJS/sheetjs'\r\n      />\r\n      <Row className='import-component'>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardBody>\r\n              <Row>\r\n                <Col sm='12'>\r\n                  <div {...getRootProps({ className: 'dropzone' })}>\r\n                    <input {...getInputProps()} />\r\n                    <div className='d-flex align-items-center justify-content-center flex-column'>\r\n                      <DownloadCloud size={64} />\r\n                      <h5>Drop Files here or click to upload</h5>\r\n                      <p className='text-secondary'>\r\n                        Drop files here or click{' '}\r\n                        <a href='/' onClick={e => e.preventDefault()}>\r\n                          browse\r\n                        </a>{' '}\r\n                        thorough your machine\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        {tableData.length ? (\r\n          <Col sm='12'>\r\n            <Card>\r\n              <CardHeader className='justify-content-between flex-wrap'>\r\n                <CardTitle tag='h4'>{name}</CardTitle>\r\n                <div className='d-flex align-items-center justify-content-end'>\r\n                  <Label for='search-input' className='me-1'>\r\n                    Search\r\n                  </Label>\r\n                  <Input id='search-input' type='text' bsSize='sm' value={value} onChange={e => handleFilter(e)} />\r\n                </div>\r\n              </CardHeader>\r\n              <Table className='table-hover-animation' responsive>\r\n                <thead>\r\n                  <tr>{renderTableHead()}</tr>\r\n                </thead>\r\n                <tbody>{renderTableBody()}</tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        ) : null}\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Import\r\n"]},"metadata":{},"sourceType":"module"}