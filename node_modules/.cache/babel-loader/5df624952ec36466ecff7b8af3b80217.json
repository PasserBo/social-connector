{"ast":null,"code":"// ** React Imports\nimport{Fragment,useEffect}from'react';// ** Reactstrap Imports\nimport{Row,Col,CardText}from'reactstrap';// ** Custom Components\nimport Card from'@components/card-snippet';import BreadCrumbs from'@components/breadcrumbs';// ** Demo Components\nimport PopoverTriggers from'./PopoverTriggers';import PopoverPositions from'./PopoverPositions';import PopoverControlled from'./PopoverControlled';import PopoverUncontrolled from'./PopoverUncontrolled';// ** Third Party Components\nimport Prism from'prismjs';// ** Source Code\nimport{popoverControlled,popoverUncontrolled,popoverPositions,popoverTriggers}from'./PopoverSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Popover=()=>{useEffect(()=>{Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Popovers\",breadCrumbParent:\"Components\",breadCrumbActive:\"Popovers\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Controlled Popover\",code:popoverControlled,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"For controlled Popover you'll have to manage state of component. Controlled Popover require\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"isOpen\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"toggle\"}),\" props to work.\"]}),/*#__PURE__*/_jsx(PopoverControlled,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Uncontrolled Popover\",code:popoverUncontrolled,children:[/*#__PURE__*/_jsx(CardText,{children:\"You can create an uncontrolled popover without having to manage state. All you have to do is wrap your content inside UncontrolledPopover tag.\"}),/*#__PURE__*/_jsx(PopoverUncontrolled,{})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Popover Positions\",code:popoverPositions,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"placement\"}),\" to place you popover at desired position.\"]}),/*#__PURE__*/_jsx(PopoverPositions,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Popover Triggers\",code:popoverTriggers,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"trigger\"}),\" for various trigger options. Trigger each popover to see information about the trigger.\"]}),/*#__PURE__*/_jsx(PopoverTriggers,{})]})})]})]});};export default Popover;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/components/popovers/index.js"],"names":["Fragment","useEffect","Row","Col","CardText","Card","BreadCrumbs","PopoverTriggers","PopoverPositions","PopoverControlled","PopoverUncontrolled","Prism","popoverControlled","popoverUncontrolled","popoverPositions","popoverTriggers","Popover","highlightAll"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,KAAmC,YAAnC,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CAEA;AACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA;AACA,OAASC,iBAAT,CAA4BC,mBAA5B,CAAiDC,gBAAjD,CAAmEC,eAAnE,KAA0F,qBAA1F,C,wFAEA,KAAMC,CAAAA,OAAO,CAAG,IAAM,CACpBf,SAAS,CAAC,IAAM,CACdU,KAAK,CAACM,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,eAAe,CAAC,UAA7B,CAAwC,gBAAgB,CAAC,YAAzD,CAAsE,gBAAgB,CAAC,UAAvF,EADF,cAEE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,oBAAZ,CAAiC,IAAI,CAAEL,iBAAvC,wBACE,MAAC,QAAD,0GAC8F,GAD9F,cAEE,gCAFF,sBAE0B,gCAF1B,qBADF,cAKE,KAAC,iBAAD,IALF,GADF,EADF,cAUE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,sBAAZ,CAAmC,IAAI,CAAEC,mBAAzC,wBACE,KAAC,QAAD,6JADF,cAKE,KAAC,mBAAD,IALF,GADF,EAVF,GAFF,cAsBE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,mBAAZ,CAAgC,IAAI,CAAEC,gBAAtC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,mCADX,gDADF,cAIE,KAAC,gBAAD,IAJF,GADF,EADF,cASE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,kBAAZ,CAA+B,IAAI,CAAEC,eAArC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,iCADX,8FADF,cAKE,KAAC,eAAD,IALF,GADF,EATF,GAtBF,GADF,CA4CD,CAjDD,CAkDA,cAAeC,CAAAA,OAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport PopoverTriggers from './PopoverTriggers'\r\nimport PopoverPositions from './PopoverPositions'\r\nimport PopoverControlled from './PopoverControlled'\r\nimport PopoverUncontrolled from './PopoverUncontrolled'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Source Code\r\nimport { popoverControlled, popoverUncontrolled, popoverPositions, popoverTriggers } from './PopoverSourceCode'\r\n\r\nconst Popover = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Popovers' breadCrumbParent='Components' breadCrumbActive='Popovers' />\r\n      <Row>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Controlled Popover' code={popoverControlled}>\r\n            <CardText>\r\n              For controlled Popover you'll have to manage state of component. Controlled Popover require{' '}\r\n              <code>isOpen</code> and <code>toggle</code> props to work.\r\n            </CardText>\r\n            <PopoverControlled />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Uncontrolled Popover' code={popoverUncontrolled}>\r\n            <CardText>\r\n              You can create an uncontrolled popover without having to manage state. All you have to do is wrap your\r\n              content inside UncontrolledPopover tag.\r\n            </CardText>\r\n            <PopoverUncontrolled />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Popover Positions' code={popoverPositions}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>placement</code> to place you popover at desired position.\r\n            </CardText>\r\n            <PopoverPositions />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Popover Triggers' code={popoverTriggers}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>trigger</code> for various trigger options. Trigger each popover to see information about\r\n              the trigger.\r\n            </CardText>\r\n            <PopoverTriggers />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Popover\r\n"]},"metadata":{},"sourceType":"module"}