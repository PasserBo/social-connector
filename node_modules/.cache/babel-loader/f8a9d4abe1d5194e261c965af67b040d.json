{"ast":null,"code":"// ** React Imports\nimport{Fragment,useState,useEffect}from'react';// ** Third Party Components\nimport axios from'axios';// ** Reactstrap Imports\nimport{Row,Col,TabContent,TabPane}from'reactstrap';// ** Demo Components\nimport Tabs from'./Tabs';import Breadcrumbs from'@components/breadcrumbs';import BillingTabContent from'./BillingTabContent';import AccountTabContent from'./AccountTabContent';import SecurityTabContent from'./SecurityTabContent';import ConnectionsTabContent from'./ConnectionsTabContent';import NotificationsTabContent from'./NotificationsTabContent';// ** Styles\nimport'@styles/react/libs/flatpickr/flatpickr.scss';import'@styles/react/pages/page-account-settings.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AccountSettings=()=>{// ** States\nconst[activeTab,setActiveTab]=useState('1');const[data,setData]=useState(null);const toggleTab=tab=>{setActiveTab(tab);};useEffect(()=>{axios.get('/account-setting/data').then(response=>setData(response.data));},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Breadcrumbs,{breadCrumbTitle:\"Account Settings\",breadCrumbParent:\"Pages\",breadCrumbActive:\"Account Settings\"}),data!==null?/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{xs:12,children:[/*#__PURE__*/_jsx(Tabs,{className:\"mb-2\",activeTab:activeTab,toggleTab:toggleTab}),/*#__PURE__*/_jsxs(TabContent,{activeTab:activeTab,children:[/*#__PURE__*/_jsx(TabPane,{tabId:\"1\",children:/*#__PURE__*/_jsx(AccountTabContent,{data:data.general})}),/*#__PURE__*/_jsx(TabPane,{tabId:\"2\",children:/*#__PURE__*/_jsx(SecurityTabContent,{})}),/*#__PURE__*/_jsx(TabPane,{tabId:\"3\",children:/*#__PURE__*/_jsx(BillingTabContent,{})}),/*#__PURE__*/_jsx(TabPane,{tabId:\"4\",children:/*#__PURE__*/_jsx(NotificationsTabContent,{})}),/*#__PURE__*/_jsx(TabPane,{tabId:\"5\",children:/*#__PURE__*/_jsx(ConnectionsTabContent,{})})]})]})}):null]});};export default AccountSettings;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/views/pages/account-settings/index.js"],"names":["Fragment","useState","useEffect","axios","Row","Col","TabContent","TabPane","Tabs","Breadcrumbs","BillingTabContent","AccountTabContent","SecurityTabContent","ConnectionsTabContent","NotificationsTabContent","AccountSettings","activeTab","setActiveTab","data","setData","toggleTab","tab","get","then","response","general"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,QAAnB,CAA6BC,SAA7B,KAA8C,OAA9C,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,UAAnB,CAA+BC,OAA/B,KAA8C,YAA9C,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CAEA;AACA,MAAO,6CAAP,CACA,MAAO,gDAAP,C,wFAEA,KAAMC,CAAAA,eAAe,CAAG,IAAM,CAC5B;AACA,KAAM,CAACC,SAAD,CAAYC,YAAZ,EAA4BhB,QAAQ,CAAC,GAAD,CAA1C,CACA,KAAM,CAACiB,IAAD,CAAOC,OAAP,EAAkBlB,QAAQ,CAAC,IAAD,CAAhC,CAEA,KAAMmB,CAAAA,SAAS,CAAGC,GAAG,EAAI,CACvBJ,YAAY,CAACI,GAAD,CAAZ,CACD,CAFD,CAIAnB,SAAS,CAAC,IAAM,CACdC,KAAK,CAACmB,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAwCC,QAAQ,EAAIL,OAAO,CAACK,QAAQ,CAACN,IAAV,CAA3D,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,eAAe,CAAC,kBAA7B,CAAgD,gBAAgB,CAAC,OAAjE,CAAyE,gBAAgB,CAAC,kBAA1F,EADF,CAEGA,IAAI,GAAK,IAAT,cACC,KAAC,GAAD,wBACE,MAAC,GAAD,EAAK,EAAE,CAAE,EAAT,wBACE,KAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,CAAuB,SAAS,CAAEF,SAAlC,CAA6C,SAAS,CAAEI,SAAxD,EADF,cAGE,MAAC,UAAD,EAAY,SAAS,CAAEJ,SAAvB,wBACE,KAAC,OAAD,EAAS,KAAK,CAAC,GAAf,uBACE,KAAC,iBAAD,EAAmB,IAAI,CAAEE,IAAI,CAACO,OAA9B,EADF,EADF,cAIE,KAAC,OAAD,EAAS,KAAK,CAAC,GAAf,uBACE,KAAC,kBAAD,IADF,EAJF,cAOE,KAAC,OAAD,EAAS,KAAK,CAAC,GAAf,uBACE,KAAC,iBAAD,IADF,EAPF,cAUE,KAAC,OAAD,EAAS,KAAK,CAAC,GAAf,uBACE,KAAC,uBAAD,IADF,EAVF,cAaE,KAAC,OAAD,EAAS,KAAK,CAAC,GAAf,uBACE,KAAC,qBAAD,IADF,EAbF,GAHF,GADF,EADD,CAwBG,IA1BN,GADF,CA8BD,CA3CD,CA6CA,cAAeV,CAAAA,eAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, TabContent, TabPane } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport Tabs from './Tabs'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport BillingTabContent from './BillingTabContent'\r\nimport AccountTabContent from './AccountTabContent'\r\nimport SecurityTabContent from './SecurityTabContent'\r\nimport ConnectionsTabContent from './ConnectionsTabContent'\r\nimport NotificationsTabContent from './NotificationsTabContent'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/react/pages/page-account-settings.scss'\r\n\r\nconst AccountSettings = () => {\r\n  // ** States\r\n  const [activeTab, setActiveTab] = useState('1')\r\n  const [data, setData] = useState(null)\r\n\r\n  const toggleTab = tab => {\r\n    setActiveTab(tab)\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/account-setting/data').then(response => setData(response.data))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Account Settings' breadCrumbParent='Pages' breadCrumbActive='Account Settings' />\r\n      {data !== null ? (\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Tabs className='mb-2' activeTab={activeTab} toggleTab={toggleTab} />\r\n\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId='1'>\r\n                <AccountTabContent data={data.general} />\r\n              </TabPane>\r\n              <TabPane tabId='2'>\r\n                <SecurityTabContent />\r\n              </TabPane>\r\n              <TabPane tabId='3'>\r\n                <BillingTabContent />\r\n              </TabPane>\r\n              <TabPane tabId='4'>\r\n                <NotificationsTabContent />\r\n              </TabPane>\r\n              <TabPane tabId='5'>\r\n                <ConnectionsTabContent />\r\n              </TabPane>\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountSettings\r\n"]},"metadata":{},"sourceType":"module"}