{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar bcrypto = require('../crypto');\n\nvar networks_1 = require('../networks');\n\nvar bscript = require('../script');\n\nvar lazy = require('./lazy');\n\nvar typef = require('typeforce');\n\nvar OPS = bscript.OPS;\n\nvar ecc = require('tiny-secp256k1');\n\nvar bs58check = require('bs58check'); // input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\n\n\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    network: typef.maybe(typef.Object),\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    output: typef.maybe(typef.BufferN(25)),\n    pubkey: typef.maybe(ecc.isPoint),\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    input: typef.maybe(typef.Buffer)\n  }, a);\n\n  var _address = lazy.value(function () {\n    var payload = bs58check.decode(a.address);\n    var version = payload.readUInt8(0);\n    var hash = payload.slice(1);\n    return {\n      version: version,\n      hash: hash\n    };\n  });\n\n  var _chunks = lazy.value(function () {\n    return bscript.decompile(a.input);\n  });\n\n  var network = a.network || networks_1.bitcoin;\n  var o = {\n    name: 'p2pkh',\n    network: network\n  };\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return;\n    var payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', function () {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_DUP, OPS.OP_HASH160, o.hash, OPS.OP_EQUALVERIFY, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', function () {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', function () {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', function () {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', function () {\n    if (!o.input) return;\n    return [];\n  }); // extended validation\n\n  if (opts.validate) {\n    var hash = Buffer.from([]);\n\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash) throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n\n    if (a.output) {\n      if (a.output.length !== 25 || a.output[0] !== OPS.OP_DUP || a.output[1] !== OPS.OP_HASH160 || a.output[2] !== 0x14 || a.output[23] !== OPS.OP_EQUALVERIFY || a.output[24] !== OPS.OP_CHECKSIG) throw new TypeError('Output is invalid');\n      var hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n    }\n\n    if (a.pubkey) {\n      var pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh)) throw new TypeError('Hash mismatch');else hash = pkh;\n    }\n\n    if (a.input) {\n      var chunks = _chunks();\n\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0])) throw new TypeError('Input has invalid signature');\n      if (!ecc.isPoint(chunks[1])) throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0])) throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1])) throw new TypeError('Pubkey mismatch');\n\n      var _pkh = bcrypto.hash160(chunks[1]);\n\n      if (hash.length > 0 && !hash.equals(_pkh)) throw new TypeError('Hash mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nexports.p2pkh = p2pkh;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/bitcoinjs-lib/src/payments/p2pkh.js"],"names":["Object","defineProperty","exports","value","bcrypto","require","networks_1","bscript","lazy","typef","OPS","ecc","bs58check","p2pkh","a","opts","address","hash","output","pubkey","input","TypeError","assign","validate","network","maybe","String","BufferN","isPoint","signature","isCanonicalScriptSignature","Buffer","_address","payload","decode","version","readUInt8","slice","_chunks","decompile","bitcoin","o","name","prop","allocUnsafe","writeUInt8","pubKeyHash","copy","encode","hash160","compile","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","from","length","equals","hash2","pkh","chunks"],"mappings":"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","sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nconst ecc = require('tiny-secp256k1');\nconst bs58check = require('bs58check');\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      address: typef.maybe(typef.String),\n      hash: typef.maybe(typef.BufferN(20)),\n      output: typef.maybe(typef.BufferN(25)),\n      pubkey: typef.maybe(ecc.isPoint),\n      signature: typef.maybe(bscript.isCanonicalScriptSignature),\n      input: typef.maybe(typef.Buffer),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!ecc.isPoint(chunks[1]))\n        throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(chunks[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pkh = p2pkh;\n"]},"metadata":{},"sourceType":"script"}