{"ast":null,"code":"// ** React Imports\nimport{Fragment,useEffect}from'react';// ** Reactstrap Imports\nimport{Row,Col,CardText}from'reactstrap';// ** Third Party Components\nimport Prism from'prismjs';// ** Custom Components\nimport Card from'@components/card-snippet';import BreadCrumbs from'@components/breadcrumbs';// ** Demo Components\nimport TooltipPositions from'./TooltipPositions';import TooltipControlled from'./TooltipControlled';import TooltipUncontrolled from'./TooltipUncontrolled';// ** Source Code\nimport{tooltipControlled,tooltipUncontrolled,tooltipPosition}from'./TooltipSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Tooltips=()=>{useEffect(()=>{Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Tooltips\",breadCrumbParent:\"Components\",breadCrumbActive:\"Tooltips\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Controlled Tooltip\",code:tooltipControlled,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"For controlled tooltips you'll have to manage state of component.controlled tooltips require\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"isOpen\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"toggle\"}),\" props to work.\"]}),/*#__PURE__*/_jsx(TooltipControlled,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Uncontrolled Tooltip\",code:tooltipUncontrolled,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"UncontrolledTooltip does not require \",/*#__PURE__*/_jsx(\"code\",{children:\"isOpen\"}),\" nor \",/*#__PURE__*/_jsx(\"code\",{children:\"toggle\"}),\" props to work.All you have to do is provide a valid target to tooltip.\"]}),/*#__PURE__*/_jsx(TooltipUncontrolled,{})]})})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Tooltip Positions\",code:tooltipPosition,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"placement\"}),\" to change position of tooltip.\"]}),/*#__PURE__*/_jsx(TooltipPositions,{})]})})})]});};export default Tooltips;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/components/tooltips/index.js"],"names":["Fragment","useEffect","Row","Col","CardText","Prism","Card","BreadCrumbs","TooltipPositions","TooltipControlled","TooltipUncontrolled","tooltipControlled","tooltipUncontrolled","tooltipPosition","Tooltips","highlightAll"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,KAAmC,YAAnC,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CAEA;AACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CAEA;AACA,OAASC,iBAAT,CAA4BC,mBAA5B,CAAiDC,eAAjD,KAAwE,qBAAxE,C,wFAEA,KAAMC,CAAAA,QAAQ,CAAG,IAAM,CACrBb,SAAS,CAAC,IAAM,CACdI,KAAK,CAACU,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,eAAe,CAAC,UAA7B,CAAwC,gBAAgB,CAAC,YAAzD,CAAsE,gBAAgB,CAAC,UAAvF,EADF,cAEE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,oBAAZ,CAAiC,IAAI,CAAEJ,iBAAvC,wBACE,MAAC,QAAD,2GAC+F,GAD/F,cAEE,gCAFF,sBAE0B,gCAF1B,qBADF,cAKE,KAAC,iBAAD,IALF,GADF,EADF,cAUE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,sBAAZ,CAAmC,IAAI,CAAEC,mBAAzC,wBACE,MAAC,QAAD,iEACuC,gCADvC,sBAC+D,gCAD/D,6EADF,cAKE,KAAC,mBAAD,IALF,GADF,EAVF,GAFF,cAsBE,KAAC,GAAD,wBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,mBAAZ,CAAgC,IAAI,CAAEC,eAAtC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,mCADX,qCADF,cAIE,KAAC,gBAAD,IAJF,GADF,EADF,EAtBF,GADF,CAmCD,CAxCD,CAyCA,cAAeC,CAAAA,QAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport TooltipPositions from './TooltipPositions'\r\nimport TooltipControlled from './TooltipControlled'\r\nimport TooltipUncontrolled from './TooltipUncontrolled'\r\n\r\n// ** Source Code\r\nimport { tooltipControlled, tooltipUncontrolled, tooltipPosition } from './TooltipSourceCode'\r\n\r\nconst Tooltips = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Tooltips' breadCrumbParent='Components' breadCrumbActive='Tooltips' />\r\n      <Row>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Controlled Tooltip' code={tooltipControlled}>\r\n            <CardText>\r\n              For controlled tooltips you'll have to manage state of component.controlled tooltips require{' '}\r\n              <code>isOpen</code> and <code>toggle</code> props to work.\r\n            </CardText>\r\n            <TooltipControlled />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Uncontrolled Tooltip' code={tooltipUncontrolled}>\r\n            <CardText>\r\n              UncontrolledTooltip does not require <code>isOpen</code> nor <code>toggle</code> props to work.All you\r\n              have to do is provide a valid target to tooltip.\r\n            </CardText>\r\n            <TooltipUncontrolled />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Tooltip Positions' code={tooltipPosition}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>placement</code> to change position of tooltip.\r\n            </CardText>\r\n            <TooltipPositions />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Tooltips\r\n"]},"metadata":{},"sourceType":"module"}