{"ast":null,"code":"import { objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { useRef, useState, useCallback, useLayoutEffect, useEffect } from 'react';\nimport { createPopper } from '@popperjs/core';\nvar oppositeDirections = {\n  top: 'bottom',\n  bottom: 'top',\n  right: 'left',\n  left: 'right'\n};\n\nvar getOppositePosition = function getOppositePosition(position) {\n  return oppositeDirections[position];\n};\n\nvar splitPlacement = function splitPlacement(placement) {\n  return placement.split('-');\n};\n\nfunction getArrowStyles(placement, arrowSize) {\n  var _ref;\n\n  var _splitPlacement = splitPlacement(placement),\n      position = _splitPlacement[0];\n\n  var oppositePosition = getOppositePosition(position);\n  if (!oppositePosition) return {};\n  return _ref = {}, _ref[oppositePosition] = \"-\" + arrowSize / 2 + \"px\", _ref.width = arrowSize, _ref.height = arrowSize, _ref.position = 'absolute', _ref.transform = 'rotate(45deg)', _ref;\n}\n\nvar isBrowser = typeof window !== 'undefined';\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nfunction usePopper(props) {\n  var _props$placement = props.placement,\n      initialPlacement = _props$placement === void 0 ? 'bottom' : _props$placement,\n      offsetProp = props.offset,\n      _props$preventOverflo = props.preventOverflow,\n      preventOverflow = _props$preventOverflo === void 0 ? true : _props$preventOverflo,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$forceUpdate = props.forceUpdate,\n      forceUpdate = _props$forceUpdate === void 0 ? true : _props$forceUpdate,\n      _props$flip = props.flip,\n      flip = _props$flip === void 0 ? true : _props$flip,\n      _props$arrowSize = props.arrowSize,\n      arrowSize = _props$arrowSize === void 0 ? 10 : _props$arrowSize,\n      _props$gutter = props.gutter,\n      gutter = _props$gutter === void 0 ? arrowSize : _props$gutter,\n      _props$eventsEnabled = props.eventsEnabled,\n      eventsEnabled = _props$eventsEnabled === void 0 ? true : _props$eventsEnabled;\n  var popper = useRef(null);\n  var referenceRef = useRef(null);\n  var popoverRef = useRef(null);\n  var arrowRef = useRef(null);\n\n  var _React$useState = useState(initialPlacement),\n      originalPlacement = _React$useState[0],\n      place = _React$useState[1];\n\n  var _React$useState2 = useState(initialPlacement),\n      placement = _React$useState2[0],\n      setPlacement = _React$useState2[1];\n\n  var _React$useState3 = useState(offsetProp || [0, gutter]),\n      offset = _React$useState3[0];\n\n  var _React$useState4 = useState({}),\n      popoverStyles = _React$useState4[0],\n      setPopoverStyles = _React$useState4[1];\n\n  var _React$useState5 = useState({}),\n      arrowStyles = _React$useState5[0],\n      setArrowStyles = _React$useState5[1];\n\n  var update = useCallback(function () {\n    if (popper.current) {\n      popper.current.forceUpdate();\n      return true;\n    }\n\n    return false;\n  }, []);\n  useSafeLayoutEffect(function () {\n    if (referenceRef.current && popoverRef.current) {\n      popper.current = createPopper(referenceRef.current, popoverRef.current, {\n        placement: originalPlacement,\n        strategy: fixed ? 'fixed' : 'absolute',\n        modifiers: [{\n          name: 'eventListener',\n          phase: 'write',\n          enabled: eventsEnabled\n        }, {\n          name: 'applyStyles',\n          enabled: false\n        }, {\n          name: 'flip',\n          enabled: flip,\n          options: {\n            padding: 8\n          }\n        }, {\n          name: 'computeStyles',\n          options: {\n            gpuAcceleration: false\n          }\n        }, {\n          name: 'offset',\n          options: {\n            offset: offset\n          }\n        }, {\n          name: 'preventOverflow',\n          enabled: preventOverflow,\n          options: {\n            tetherOffset: function tetherOffset() {\n              var _arrowRef$current;\n\n              return ((_arrowRef$current = arrowRef.current) === null || _arrowRef$current === void 0 ? void 0 : _arrowRef$current.clientWidth) || 0;\n            }\n          }\n        }, {\n          name: 'arrow',\n          enabled: Boolean(arrowRef.current),\n          options: {\n            element: arrowRef.current\n          }\n        }, {\n          name: 'updateState',\n          phase: 'write',\n          enabled: true,\n          fn: function fn(_ref2) {\n            var state = _ref2.state;\n            setPlacement(state.placement);\n            setPopoverStyles(state.styles.popper);\n            setArrowStyles(state.styles.arrow);\n          }\n        }]\n      });\n    }\n\n    return function () {\n      if (popper.current) {\n        popper.current.destroy();\n        popper.current = null;\n      }\n    };\n  }, [originalPlacement, fixed, forceUpdate, flip, offset, preventOverflow]);\n  useSafeLayoutEffect(function () {\n    requestAnimationFrame(function () {\n      if (forceUpdate) {\n        var _popper$current;\n\n        (_popper$current = popper.current) === null || _popper$current === void 0 ? void 0 : _popper$current.forceUpdate();\n      }\n    });\n  }, [forceUpdate]);\n\n  var computedArrowStyles = _objectSpread2({}, arrowStyles, {}, getArrowStyles(placement, arrowSize));\n\n  return {\n    popperInstance: popper.current,\n    reference: {\n      ref: referenceRef\n    },\n    popper: {\n      ref: popoverRef,\n      style: popoverStyles\n    },\n    arrow: {\n      ref: arrowRef,\n      style: computedArrowStyles\n    },\n    update: update,\n    placement: placement,\n    place: place\n  };\n}\n\nexport { getArrowStyles, getOppositePosition, usePopper };","map":{"version":3,"sources":["../../src/popper/index.tsx"],"names":["oppositeDirections","top","bottom","right","left","getOppositePosition","splitPlacement","placement","getArrowStyles","arrowSize","position","oppositePosition","isBrowser","useSafeLayoutEffect","usePopper","props","initialPlacement","offset","offsetProp","preventOverflow","fixed","forceUpdate","flip","gutter","eventsEnabled","popper","React","referenceRef","popoverRef","arrowRef","originalPlacement","place","setPlacement","popoverStyles","setPopoverStyles","arrowStyles","setArrowStyles","update","createPopper","strategy","modifiers","name","phase","enabled","options","padding","gpuAcceleration","tetherOffset","Boolean","element","current","fn","state","requestAnimationFrame","computedArrowStyles","popperInstance","reference","ref","style","arrow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Placement, Instance, createPopper } from '@popperjs/core';\n\nconst oppositeDirections = {\n  top: 'bottom',\n  bottom: 'top',\n  right: 'left',\n  left: 'right',\n};\n\ntype Direction = keyof typeof oppositeDirections;\n\nexport const getOppositePosition = (position: Direction) => oppositeDirections[position];\n\nconst splitPlacement = (placement: Placement) => placement.split('-') as Direction[];\n\nexport function getArrowStyles(placement: Placement, arrowSize: number): React.CSSProperties {\n  const [position] = splitPlacement(placement);\n  const oppositePosition = getOppositePosition(position);\n  if (!oppositePosition) return {};\n\n  return {\n    [oppositePosition]: `-${arrowSize / 2}px`,\n    width: arrowSize,\n    height: arrowSize,\n    position: 'absolute',\n    transform: 'rotate(45deg)',\n  };\n}\n\nconst isBrowser = typeof window !== 'undefined';\n\nconst useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\nexport interface UsePopperProps {\n  gutter?: number;\n  placement?: Placement;\n  offset?: number;\n  preventOverflow?: boolean;\n  fixed?: boolean;\n  forceUpdate?: boolean;\n  flip?: boolean;\n  arrowSize?: number;\n  eventsEnabled?: boolean;\n}\n\nexport function usePopper(props: UsePopperProps) {\n  const {\n    placement: initialPlacement = 'bottom',\n    offset: offsetProp,\n    preventOverflow = true,\n    fixed = false,\n    forceUpdate = true,\n    flip = true,\n    arrowSize = 10,\n    gutter = arrowSize,\n    eventsEnabled = true,\n  } = props;\n\n  const popper = React.useRef<Instance | null>(null);\n  const referenceRef = React.useRef<HTMLButtonElement>(null);\n  const popoverRef = React.useRef<HTMLDivElement>(null);\n  const arrowRef = React.useRef<HTMLDivElement>(null);\n\n  const [originalPlacement, place] = React.useState(initialPlacement);\n  const [placement, setPlacement] = React.useState(initialPlacement);\n  const [offset] = React.useState(offsetProp || [0, gutter]);\n  const [popoverStyles, setPopoverStyles] = React.useState<React.CSSProperties>({});\n  const [arrowStyles, setArrowStyles] = React.useState<React.CSSProperties>({});\n\n  const update = React.useCallback(() => {\n    if (popper.current) {\n      popper.current.forceUpdate();\n      return true;\n    }\n    return false;\n  }, []);\n\n  useSafeLayoutEffect(() => {\n    if (referenceRef.current && popoverRef.current) {\n      popper.current = createPopper(referenceRef.current, popoverRef.current, {\n        placement: originalPlacement,\n        strategy: fixed ? 'fixed' : 'absolute',\n        modifiers: [\n          {\n            name: 'eventListener',\n            phase: 'write',\n            enabled: eventsEnabled,\n          },\n          {\n            name: 'applyStyles',\n            enabled: false,\n          },\n          {\n            name: 'flip',\n            enabled: flip,\n            options: { padding: 8 },\n          },\n          {\n            name: 'computeStyles',\n            options: { gpuAcceleration: false },\n          },\n          {\n            name: 'offset',\n            options: { offset },\n          },\n          {\n            name: 'preventOverflow',\n            enabled: preventOverflow,\n            options: {\n              tetherOffset: () => arrowRef.current?.clientWidth || 0,\n            },\n          },\n          {\n            name: 'arrow',\n            enabled: Boolean(arrowRef.current),\n            options: { element: arrowRef.current },\n          },\n          {\n            name: 'updateState',\n            phase: 'write',\n            enabled: true,\n            fn({ state }) {\n              setPlacement(state.placement);\n              setPopoverStyles(state.styles.popper as React.CSSProperties);\n              setArrowStyles(state.styles.arrow as React.CSSProperties);\n            },\n          },\n        ],\n      });\n    }\n    return () => {\n      if (popper.current) {\n        popper.current.destroy();\n        popper.current = null;\n      }\n    };\n  }, [originalPlacement, fixed, forceUpdate, flip, offset, preventOverflow]);\n\n  useSafeLayoutEffect(() => {\n    requestAnimationFrame(() => {\n      if (forceUpdate) {\n        popper.current?.forceUpdate();\n      }\n    });\n  }, [forceUpdate]);\n\n  const computedArrowStyles: React.CSSProperties = {\n    ...arrowStyles,\n    ...getArrowStyles(placement, arrowSize),\n  };\n\n  return {\n    popperInstance: popper.current,\n    reference: {\n      ref: referenceRef,\n    },\n    popper: {\n      ref: popoverRef,\n      style: popoverStyles,\n    },\n    arrow: {\n      ref: arrowRef,\n      style: computedArrowStyles,\n    },\n    update,\n    placement,\n    place,\n  };\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>;\n"]},"metadata":{},"sourceType":"module"}