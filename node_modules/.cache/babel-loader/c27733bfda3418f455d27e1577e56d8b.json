{"ast":null,"code":"// ** Reactstrap Imports\nimport{Card,CardHeader,CardBody,CardTitle,Button}from'reactstrap';// ** Third Party Components\nimport Swal from'sweetalert2';import withReactContent from'sweetalert2-react-content';// ** Images\nimport alertImg from'@src/assets/images/slider/04.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MySwal=withReactContent(Swal);const SweetAlertOptions=()=>{const handleImageAlert=()=>{return MySwal.fire({title:'Sweet!',text:'Modal with a custom image.',imageUrl:alertImg,imageWidth:300,imageHeight:200,imageAlt:'Custom image',customClass:{confirmButton:'btn btn-primary'},buttonsStyling:false});};const handleTimeoutAlert=()=>{let timerInterval;Swal.fire({title:'Auto close alert!',html:'I will close in <b></b> seconds.',timerProgressBar:true,timer:2000,didOpen(){Swal.showLoading();const b=Swal.getHtmlContainer().querySelector('b');timerInterval=setInterval(()=>{b.textContent=Swal.getTimerLeft();},100);},willClose(){clearInterval(timerInterval);}}).then(function(result){if(result.dismiss===Swal.DismissReason.timer){console.log('I was closed by the timer');}});};const handleClickOutside=()=>{return MySwal.fire({backdrop:true,title:'Click outside to close!',text:'This is a cool message!',allowOutsideClick:true,customClass:{confirmButton:'btn btn-primary'},buttonsStyling:false});};const handleAjax=()=>{MySwal.fire({title:'Search for a user',input:'text',customClass:{input:'mx-3',confirmButton:'btn btn-primary',cancelButton:'btn btn-danger ms-1'},buttonsStyling:false,inputAttributes:{autocapitalize:'off'},showCancelButton:true,confirmButtonText:'Look up',showLoaderOnConfirm:true,preConfirm(login){return fetch(\"//api.github.com/users/\".concat(login)).then(function(response){if(!response.ok){throw new Error(response.statusText);}return response.json();}).catch(function(error){MySwal.showValidationMessage(\"Request failed:  \".concat(error));});}}).then(function(result){if(result.value){MySwal.fire({title:\"\".concat(result.value.login,\"'s avatar\"),imageUrl:result.value.avatar_url,customClass:{confirmButton:'btn btn-primary'}});}});};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Options\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"demo-inline-spacing\",children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleImageAlert,outline:true,children:\"Image\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleTimeoutAlert,outline:true,children:\"Timeout\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleClickOutside,outline:true,children:\"Click Outside\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleAjax,outline:true,children:\"Ajax\"})]})})]});};export default SweetAlertOptions;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/extensions/sweet-alert/SweetAlertOptions.js"],"names":["Card","CardHeader","CardBody","CardTitle","Button","Swal","withReactContent","alertImg","MySwal","SweetAlertOptions","handleImageAlert","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","customClass","confirmButton","buttonsStyling","handleTimeoutAlert","timerInterval","html","timerProgressBar","timer","didOpen","showLoading","b","getHtmlContainer","querySelector","setInterval","textContent","getTimerLeft","willClose","clearInterval","then","result","dismiss","DismissReason","console","log","handleClickOutside","backdrop","allowOutsideClick","handleAjax","input","cancelButton","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","value","avatar_url"],"mappings":"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","sourcesContent":["// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Images\r\nimport alertImg from '@src/assets/images/slider/04.jpg'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst SweetAlertOptions = () => {\r\n  const handleImageAlert = () => {\r\n    return MySwal.fire({\r\n      title: 'Sweet!',\r\n      text: 'Modal with a custom image.',\r\n      imageUrl: alertImg,\r\n      imageWidth: 300,\r\n      imageHeight: 200,\r\n      imageAlt: 'Custom image',\r\n      customClass: { confirmButton: 'btn btn-primary' },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleTimeoutAlert = () => {\r\n    let timerInterval\r\n    Swal.fire({\r\n      title: 'Auto close alert!',\r\n      html: 'I will close in <b></b> seconds.',\r\n      timerProgressBar: true,\r\n      timer: 2000,\r\n      didOpen() {\r\n        Swal.showLoading()\r\n        const b = Swal.getHtmlContainer().querySelector('b')\r\n        timerInterval = setInterval(() => {\r\n          b.textContent = Swal.getTimerLeft()\r\n        }, 100)\r\n      },\r\n      willClose() {\r\n        clearInterval(timerInterval)\r\n      }\r\n    }).then(function (result) {\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log('I was closed by the timer')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClickOutside = () => {\r\n    return MySwal.fire({\r\n      backdrop: true,\r\n      title: 'Click outside to close!',\r\n      text: 'This is a cool message!',\r\n      allowOutsideClick: true,\r\n      customClass: { confirmButton: 'btn btn-primary' },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleAjax = () => {\r\n    MySwal.fire({\r\n      title: 'Search for a user',\r\n      input: 'text',\r\n      customClass: {\r\n        input: 'mx-3',\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-danger ms-1'\r\n      },\r\n      buttonsStyling: false,\r\n      inputAttributes: {\r\n        autocapitalize: 'off'\r\n      },\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Look up',\r\n      showLoaderOnConfirm: true,\r\n      preConfirm(login) {\r\n        return fetch(`//api.github.com/users/${login}`)\r\n          .then(function (response) {\r\n            if (!response.ok) {\r\n              throw new Error(response.statusText)\r\n            }\r\n            return response.json()\r\n          })\r\n          .catch(function (error) {\r\n            MySwal.showValidationMessage(`Request failed:  ${error}`)\r\n          })\r\n      }\r\n    }).then(function (result) {\r\n      if (result.value) {\r\n        MySwal.fire({\r\n          title: `${result.value.login}'s avatar`,\r\n          imageUrl: result.value.avatar_url,\r\n          customClass: {\r\n            confirmButton: 'btn btn-primary'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Options</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' onClick={handleImageAlert} outline>\r\n            Image\r\n          </Button>\r\n          <Button color='primary' onClick={handleTimeoutAlert} outline>\r\n            Timeout\r\n          </Button>\r\n          <Button color='primary' onClick={handleClickOutside} outline>\r\n            Click Outside\r\n          </Button>\r\n          <Button color='primary' onClick={handleAjax} outline>\r\n            Ajax\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SweetAlertOptions\r\n"]},"metadata":{},"sourceType":"module"}