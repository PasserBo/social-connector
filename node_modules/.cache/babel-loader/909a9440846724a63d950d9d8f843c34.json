{"ast":null,"code":"// ** Custom Components & Plugins\nimport classnames from'classnames';import{Star,Paperclip}from'react-feather';// ** Custom Component Import\nimport Avatar from'@components/avatar';// ** Utils\nimport{htmlToString}from'@utils';// ** Reactstrap Imports\nimport{Input,Label}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MailCard=props=>{// ** Props\nconst{mail,dispatch,selectMail,labelColors,updateMails,selectedMails,handleMailClick,handleMailReadUpdate,formatDateToMonthShort}=props;// ** Function to render labels\nconst renderLabels=arr=>{if(arr&&arr.length){return arr.map(label=>/*#__PURE__*/_jsx(\"span\",{className:\"bullet bullet-\".concat(labelColors[label],\" bullet-sm mx-50\")},label));}};// ** Function to handle read & mail click\nconst onMailClick=()=>{handleMailClick(mail.id);handleMailReadUpdate([mail.id],true);};return/*#__PURE__*/_jsxs(\"li\",{onClick:()=>onMailClick(mail.id),className:classnames('d-flex user-mail',{'mail-read':mail.isRead}),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mail-left pe-50\",children:[/*#__PURE__*/_jsx(Avatar,{img:mail.from.avatar}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-action\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(Input,{type:\"checkbox\",id:\"\".concat(mail.from.name,\"-\").concat(mail.id),onChange:e=>e.stopPropagation(),checked:selectedMails.includes(mail.id),onClick:e=>{dispatch(selectMail(mail.id));e.stopPropagation();}}),/*#__PURE__*/_jsx(Label,{onClick:e=>e.stopPropagation(),for:\"\".concat(mail.from.name,\"-\").concat(mail.id)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"email-favorite\",onClick:e=>{e.stopPropagation();dispatch(updateMails({emailIds:[mail.id],dataToUpdate:{isStarred:!mail.isStarred}}));},children:/*#__PURE__*/_jsx(Star,{size:14,className:classnames({favorite:mail.isStarred})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mail-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mail-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mail-items\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-25\",children:mail.from.name}),/*#__PURE__*/_jsx(\"span\",{className:\"text-truncate\",children:mail.subject})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mail-meta-item\",children:[mail.attachments&&mail.attachments.length?/*#__PURE__*/_jsx(Paperclip,{size:14}):null,renderLabels(mail.labels),/*#__PURE__*/_jsx(\"span\",{className:\"mail-date\",children:formatDateToMonthShort(mail.time)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mail-message\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-truncate mb-0\",children:htmlToString(mail.message)})})]})]});};export default MailCard;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/apps/email/MailCard.js"],"names":["classnames","Star","Paperclip","Avatar","htmlToString","Input","Label","MailCard","props","mail","dispatch","selectMail","labelColors","updateMails","selectedMails","handleMailClick","handleMailReadUpdate","formatDateToMonthShort","renderLabels","arr","length","map","label","onMailClick","id","isRead","from","avatar","name","e","stopPropagation","includes","emailIds","dataToUpdate","isStarred","favorite","subject","attachments","labels","time","message"],"mappings":"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","sourcesContent":["// ** Custom Components & Plugins\r\nimport classnames from 'classnames'\r\nimport { Star, Paperclip } from 'react-feather'\r\n\r\n// ** Custom Component Import\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { htmlToString } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Input, Label } from 'reactstrap'\r\n\r\nconst MailCard = props => {\r\n  // ** Props\r\n  const {\r\n    mail,\r\n    dispatch,\r\n    selectMail,\r\n    labelColors,\r\n    updateMails,\r\n    selectedMails,\r\n    handleMailClick,\r\n    handleMailReadUpdate,\r\n    formatDateToMonthShort\r\n  } = props\r\n\r\n  // ** Function to render labels\r\n  const renderLabels = arr => {\r\n    if (arr && arr.length) {\r\n      return arr.map(label => (\r\n        <span key={label} className={`bullet bullet-${labelColors[label]} bullet-sm mx-50`}></span>\r\n      ))\r\n    }\r\n  }\r\n\r\n  // ** Function to handle read & mail click\r\n  const onMailClick = () => {\r\n    handleMailClick(mail.id)\r\n    handleMailReadUpdate([mail.id], true)\r\n  }\r\n\r\n  return (\r\n    <li onClick={() => onMailClick(mail.id)} className={classnames('d-flex user-mail', { 'mail-read': mail.isRead })}>\r\n      <div className='mail-left pe-50'>\r\n        <Avatar img={mail.from.avatar} />\r\n        <div className='user-action'>\r\n          {/* <Input\r\n            label=''\r\n            type='checkbox'\r\n            checked={selectedMails.includes(mail.id)}\r\n            id={`${mail.from.name}-${mail.id}`}\r\n            onChange={e => e.stopPropagation()}\r\n            onClick={e => {\r\n              dispatch(selectMail(mail.id))\r\n              e.stopPropagation()\r\n            }}\r\n          /> */}\r\n          <div className='form-check'>\r\n            <Input\r\n              type='checkbox'\r\n              id={`${mail.from.name}-${mail.id}`}\r\n              onChange={e => e.stopPropagation()}\r\n              checked={selectedMails.includes(mail.id)}\r\n              onClick={e => {\r\n                dispatch(selectMail(mail.id))\r\n                e.stopPropagation()\r\n              }}\r\n            />\r\n            <Label onClick={e => e.stopPropagation()} for={`${mail.from.name}-${mail.id}`}></Label>\r\n          </div>\r\n          <div\r\n            className='email-favorite'\r\n            onClick={e => {\r\n              e.stopPropagation()\r\n              dispatch(updateMails({ emailIds: [mail.id], dataToUpdate: { isStarred: !mail.isStarred } }))\r\n            }}\r\n          >\r\n            <Star\r\n              size={14}\r\n              className={classnames({\r\n                favorite: mail.isStarred\r\n              })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='mail-body'>\r\n        <div className='mail-details'>\r\n          <div className='mail-items'>\r\n            <h5 className='mb-25'>{mail.from.name}</h5>\r\n            <span className='text-truncate'>{mail.subject}</span>\r\n          </div>\r\n          <div className='mail-meta-item'>\r\n            {mail.attachments && mail.attachments.length ? <Paperclip size={14} /> : null}\r\n            {renderLabels(mail.labels)}\r\n            <span className='mail-date'>{formatDateToMonthShort(mail.time)}</span>\r\n          </div>\r\n        </div>\r\n        <div className='mail-message'>\r\n          <p className='text-truncate mb-0'>{htmlToString(mail.message)}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default MailCard\r\n"]},"metadata":{},"sourceType":"module"}