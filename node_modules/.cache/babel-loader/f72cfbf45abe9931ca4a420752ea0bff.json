{"ast":null,"code":"import _asyncToGenerator from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/regenerator/index.js\";\nimport { Buffer } from '@stacks/common';\nimport { sha256, sha512 } from 'sha.js';\nimport { getCryptoLib } from './cryptoUtils';\nexport var NodeCryptoSha2Hash = /*#__PURE__*/function () {\n  function NodeCryptoSha2Hash(createHash) {\n    _classCallCheck(this, NodeCryptoSha2Hash);\n\n    this.createHash = createHash;\n  }\n\n  _createClass(NodeCryptoSha2Hash, [{\n    key: \"digest\",\n    value: function () {\n      var _digest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        var algorithm,\n            result,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                algorithm = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'sha256';\n                _context.prev = 1;\n                result = this.createHash(algorithm).update(data).digest();\n                return _context.abrupt(\"return\", Promise.resolve(result));\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n                console.log(\"Error performing \".concat(algorithm, \" digest with Node.js 'crypto.createHash', falling back to JS implementation.\"));\n                return _context.abrupt(\"return\", Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data)));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 6]]);\n      }));\n\n      function digest(_x) {\n        return _digest.apply(this, arguments);\n      }\n\n      return digest;\n    }()\n  }]);\n\n  return NodeCryptoSha2Hash;\n}();\nexport var WebCryptoSha2Hash = /*#__PURE__*/function () {\n  function WebCryptoSha2Hash(subtleCrypto) {\n    _classCallCheck(this, WebCryptoSha2Hash);\n\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  _createClass(WebCryptoSha2Hash, [{\n    key: \"digest\",\n    value: function () {\n      var _digest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        var algorithm,\n            algo,\n            hash,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                algorithm = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 'sha256';\n\n                if (!(algorithm === 'sha256')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                algo = 'SHA-256';\n                _context2.next = 10;\n                break;\n\n              case 5:\n                if (!(algorithm === 'sha512')) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                algo = 'SHA-512';\n                _context2.next = 10;\n                break;\n\n              case 9:\n                throw new Error(\"Unsupported hash algorithm \".concat(algorithm));\n\n              case 10:\n                _context2.prev = 10;\n                _context2.next = 13;\n                return this.subtleCrypto.digest(algo, data);\n\n              case 13:\n                hash = _context2.sent;\n                return _context2.abrupt(\"return\", Buffer.from(hash));\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](10);\n                console.log(_context2.t0);\n                console.log(\"Error performing \".concat(algorithm, \" digest with WebCrypto, falling back to JS implementation.\"));\n                return _context2.abrupt(\"return\", Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data)));\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[10, 17]]);\n      }));\n\n      function digest(_x2) {\n        return _digest2.apply(this, arguments);\n      }\n\n      return digest;\n    }()\n  }]);\n\n  return WebCryptoSha2Hash;\n}();\nexport function createSha2Hash() {\n  return _createSha2Hash.apply(this, arguments);\n}\n\nfunction _createSha2Hash() {\n  _createSha2Hash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var cryptoLib;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getCryptoLib();\n\n          case 2:\n            cryptoLib = _context3.sent;\n\n            if (!(cryptoLib.name === 'subtleCrypto')) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", new WebCryptoSha2Hash(cryptoLib.lib));\n\n          case 7:\n            return _context3.abrupt(\"return\", new NodeCryptoSha2Hash(cryptoLib.lib.createHash));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _createSha2Hash.apply(this, arguments);\n}\n\nexport function hashSha256Sync(data) {\n  var hash = new sha256();\n  hash.update(data);\n  return hash.digest();\n}\nexport function hashSha512Sync(data) {\n  var hash = new sha512();\n  hash.update(data);\n  return hash.digest();\n}","map":{"version":3,"sources":["../../src/sha2Hash.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Buffer } from '@stacks/common';\nimport { sha256, sha512 } from 'sha.js';\nimport { getCryptoLib } from './cryptoUtils';\nexport class NodeCryptoSha2Hash {\n    constructor(createHash) {\n        this.createHash = createHash;\n    }\n    async digest(data, algorithm = 'sha256') {\n        try {\n            const result = this.createHash(algorithm).update(data).digest();\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            console.log(error);\n            console.log(`Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`);\n            return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n        }\n    }\n}\nexport class WebCryptoSha2Hash {\n    constructor(subtleCrypto) {\n        this.subtleCrypto = subtleCrypto;\n    }\n    async digest(data, algorithm = 'sha256') {\n        let algo;\n        if (algorithm === 'sha256') {\n            algo = 'SHA-256';\n        }\n        else if (algorithm === 'sha512') {\n            algo = 'SHA-512';\n        }\n        else {\n            throw new Error(`Unsupported hash algorithm ${algorithm}`);\n        }\n        try {\n            const hash = await this.subtleCrypto.digest(algo, data);\n            return Buffer.from(hash);\n        }\n        catch (error) {\n            console.log(error);\n            console.log(`Error performing ${algorithm} digest with WebCrypto, falling back to JS implementation.`);\n            return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n        }\n    }\n}\nexport async function createSha2Hash() {\n    const cryptoLib = await getCryptoLib();\n    if (cryptoLib.name === 'subtleCrypto') {\n        return new WebCryptoSha2Hash(cryptoLib.lib);\n    }\n    else {\n        return new NodeCryptoSha2Hash(cryptoLib.lib.createHash);\n    }\n}\nexport function hashSha256Sync(data) {\n    const hash = new sha256();\n    hash.update(data);\n    return hash.digest();\n}\nexport function hashSha512Sync(data) {\n    const hash = new sha512();\n    hash.update(data);\n    return hash.digest();\n}\n//# sourceMappingURL=sha2Hash.js.map"]},"metadata":{},"sourceType":"module"}