{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/apps/todo/TaskSidebar.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, Fragment } from 'react'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport Flatpickr from 'react-flatpickr';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { X, Star, Trash } from 'react-feather';\nimport Select, { components } from 'react-select';\nimport { useForm, Controller } from 'react-hook-form';\nimport { EditorState, ContentState } from 'draft-js'; // ** Reactstrap Imports\n\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'; // ** Utils\n\nimport { isObjEmpty, selectThemeColors } from '@utils'; // ** Styles Imports\n\nimport '@styles/react/libs/editor/editor.scss';\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport '@styles/react/libs/react-select/_react-select.scss'; // ** Function to capitalize the first letter of string\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1); // ** Modal Header\n\n\nconst ModalHeader = props => {\n  // ** Props\n  const {\n    children,\n    store,\n    handleTaskSidebar,\n    setDeleted,\n    deleted,\n    important,\n    setImportant,\n    deleteTask,\n    dispatch\n  } = props; // ** Function to delete task\n\n  const handleDeleteTask = () => {\n    setDeleted(!deleted);\n    dispatch(deleteTask(store.selectedTask.id));\n    handleTaskSidebar();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-header d-flex align-items-center justify-content-between mb-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"modal-title\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-item-action d-flex align-items-center\",\n      children: [store && !isObjEmpty(store.selectedTask) ? /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"cursor-pointer mt-25\",\n        size: 16,\n        onClick: () => handleDeleteTask()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo-item-favorite cursor-pointer mx-75\",\n        children: /*#__PURE__*/_jsxDEV(Star, {\n          size: 16,\n          onClick: () => setImportant(!important),\n          className: classnames({\n            'text-warning': important === true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(X, {\n        className: \"fw-normal mt-25\",\n        size: 16,\n        onClick: handleTaskSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ModalHeader;\n\nconst TaskSidebar = props => {\n  _s();\n\n  // ** Props\n  const {\n    open,\n    handleTaskSidebar,\n    store,\n    dispatch,\n    updateTask,\n    selectTask,\n    addTask,\n    deleteTask\n  } = props; // ** States\n\n  const [assignee, setAssignee] = useState({\n    value: 'pheobe',\n    label: 'Pheobe Buffay',\n    img: img1\n  });\n  const [tags, setTags] = useState([]);\n  const [desc, setDesc] = useState(EditorState.createEmpty());\n  const [completed, setCompleted] = useState(false);\n  const [important, setImportant] = useState(false);\n  const [deleted, setDeleted] = useState(false);\n  const [dueDate, setDueDate] = useState(new Date());\n  const {\n    control,\n    setError,\n    setValue,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: ''\n    }\n  }); // ** Assignee Select Options\n\n  const assigneeOptions = [{\n    value: 'pheobe',\n    label: 'Pheobe Buffay',\n    img: img1\n  }, {\n    value: 'chandler',\n    label: 'Chandler Bing',\n    img: img2\n  }, {\n    value: 'ross',\n    label: 'Ross Geller',\n    img: img3\n  }, {\n    value: 'monica',\n    label: 'Monica Geller',\n    img: img4\n  }, {\n    value: 'joey',\n    label: 'Joey Tribbiani',\n    img: img5\n  }, {\n    value: 'Rachel',\n    label: 'Rachel Green',\n    img: img6\n  }]; // ** Tag Select Options\n\n  const tagOptions = [{\n    value: 'team',\n    label: 'Team'\n  }, {\n    value: 'low',\n    label: 'Low'\n  }, {\n    value: 'medium',\n    label: 'Medium'\n  }, {\n    value: 'high',\n    label: 'High'\n  }, {\n    value: 'update',\n    label: 'Update'\n  }]; // ** Custom Assignee Component\n\n  const AssigneeComponent = _ref => {\n    let {\n      data,\n      ...props\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-block rounded-circle me-50\",\n          src: data.img,\n          height: \"26\",\n          width: \"26\",\n          alt: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }; // ** Returns sidebar title\n\n\n  const handleSidebarTitle = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        size: \"sm\",\n        onClick: () => setCompleted(!completed),\n        color: completed === true ? 'success' : 'secondary',\n        children: completed === true ? 'Granted' : 'Mark Granted'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    } else {\n      return 'Add Wish';\n    }\n  }; // ** Function to run when sidebar opens\n\n\n  const handleSidebarOpened = () => {\n    const {\n      selectedTask\n    } = store;\n\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title);\n      setCompleted(selectedTask.isCompleted);\n      setImportant(selectedTask.isImportant);\n      setAssignee([{\n        value: selectedTask.assignee.fullName,\n        label: selectedTask.assignee.fullName,\n        img: selectedTask.assignee.avatar\n      }]);\n      setDueDate(selectedTask.dueDate);\n\n      if (typeof selectedTask.description === 'string') {\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)));\n      } else {\n        const obj = selectedTask.description._immutable.currentContent.blockMap;\n        const property = Object.keys(obj).map(val => val);\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)));\n      }\n\n      if (selectedTask.tags.length) {\n        const tags = [];\n        selectedTask.tags.map(tag => {\n          tags.push({\n            value: tag,\n            label: capitalize(tag)\n          });\n        });\n        setTags(tags);\n      }\n    }\n  }; // ** Function to run when sidebar closes\n\n\n  const handleSidebarClosed = () => {\n    setTags([]);\n    setDesc('');\n    setValue('title', '');\n    setAssignee({\n      value: 'pheobe',\n      label: 'Pheobe Buffay',\n      img: img1\n    });\n    setCompleted(false);\n    setImportant(false);\n    setDueDate(new Date());\n    dispatch(selectTask({}));\n  }; // ** Function to reset fileds\n\n\n  const handleResetFields = () => {\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description));\n    setValue('title', store.selectedTask.title);\n    setDesc(descValue);\n    setCompleted(store.selectedTask.isCompleted);\n    setImportant(store.selectedTask.isImportant);\n    setDeleted(store.selectedTask.isDeleted);\n    setDueDate(store.selectedTask.dueDate);\n\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\n      setAssignee({\n        value: store.selectedTask.assignee.fullName,\n        label: store.selectedTask.assignee.fullName,\n        img: store.selectedTask.assignee.avatar\n      });\n    }\n\n    if (store.selectedTask.tags.length) {\n      const tags = [];\n      store.selectedTask.tags.map(tag => {\n        tags.push({\n          value: tag,\n          label: capitalize(tag)\n        });\n      });\n      setTags(tags);\n    }\n  }; // ** Renders Footer Buttons\n\n\n  const renderFooterButtons = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"update-btn update-todo-item me-1\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleResetFields,\n          outline: true,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"add-todo-item me-1\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleTaskSidebar,\n          outline: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const onSubmit = data => {\n    const newTaskTag = [];\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName;\n\n    if (tags.length) {\n      tags.map(tag => newTaskTag.push(tag.value));\n    }\n\n    const newAssignee = {\n      fullName: assignee.label,\n      avatar: assignee.img\n    };\n    const state = {\n      dueDate,\n      title: data.title,\n      tags: newTaskTag,\n      description: desc,\n      isCompleted: completed,\n      isDeleted: deleted,\n      isImportant: important,\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\n    };\n\n    if (data.title.length) {\n      if (isObjEmpty(errors)) {\n        if (isObjEmpty(store.selectedTask) || !isObjEmpty(store.selectedTask) && !store.selectedTask.title.length) {\n          dispatch(addTask(state));\n        } else {\n          dispatch(updateTask({ ...state,\n            id: store.selectedTask.id\n          }));\n        }\n\n        handleTaskSidebar();\n      }\n    } else {\n      setError('title', {\n        type: 'manual'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    toggle: handleTaskSidebar,\n    className: \"sidebar-lg\",\n    contentClassName: \"p-0\",\n    onOpened: handleSidebarOpened,\n    onClosed: handleSidebarClosed,\n    modalClassName: \"modal-slide-in sidebar-todo-modal\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form-modal-todo\",\n      className: \"todo-modal\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        store: store,\n        deleted: deleted,\n        dispatch: dispatch,\n        important: important,\n        deleteTask: deleteTask,\n        setDeleted: setDeleted,\n        setImportant: setImportant,\n        handleTaskSidebar: handleTaskSidebar,\n        children: handleSidebarTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"flex-grow-1 pb-sm-0 pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-title\",\n            children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"title\",\n            control: control,\n            render: _ref2 => {\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                id: \"task-title\",\n                placeholder: \"Title\",\n                className: \"new-todo-item-title\",\n                invalid: errors.title && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(FormFeedback, {\n            children: \"Please enter a valid wish title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-tags\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            id: \"task-tags\",\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            options: tagOptions,\n            theme: selectThemeColors,\n            value: tags,\n            onChange: data => {\n              setTags(data !== null ? [...data] : []);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"task-desc\",\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            editorState: desc,\n            wrapperClassName: \"toolbar-bottom\",\n            toolbar: {\n              options: ['inline', 'textAlign'],\n              inline: {\n                inDropdown: false,\n                options: ['bold', 'italic', 'underline']\n              }\n            },\n            onEditorStateChange: data => setDesc(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderFooterButtons()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskSidebar, \"WVfubImgmriUpI60ip0scFuzXIM=\", false, function () {\n  return [useForm];\n});\n\n_c2 = TaskSidebar;\nexport default TaskSidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalHeader\");\n$RefreshReg$(_c2, \"TaskSidebar\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/apps/todo/TaskSidebar.js"],"names":["useState","Fragment","classnames","Flatpickr","Editor","X","Star","Trash","Select","components","useForm","Controller","EditorState","ContentState","Modal","ModalBody","Button","Form","Input","Label","FormFeedback","isObjEmpty","selectThemeColors","capitalize","string","charAt","toUpperCase","slice","ModalHeader","props","children","store","handleTaskSidebar","setDeleted","deleted","important","setImportant","deleteTask","dispatch","handleDeleteTask","selectedTask","id","TaskSidebar","open","updateTask","selectTask","addTask","assignee","setAssignee","value","label","img","img1","tags","setTags","desc","setDesc","createEmpty","completed","setCompleted","dueDate","setDueDate","Date","control","setError","setValue","handleSubmit","formState","errors","defaultValues","title","assigneeOptions","img2","img3","img4","img5","img6","tagOptions","AssigneeComponent","data","handleSidebarTitle","handleSidebarOpened","isCompleted","isImportant","fullName","avatar","description","createWithContent","createFromText","obj","_immutable","currentContent","blockMap","property","Object","keys","map","val","text","length","tag","push","handleSidebarClosed","handleResetFields","descValue","isDeleted","renderFooterButtons","onSubmit","newTaskTag","doesInclude","newAssignee","state","undefined","type","field","options","inline","inDropdown"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport { X, Star, Trash } from 'react-feather'\r\nimport Select, { components } from 'react-select'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { EditorState, ContentState } from 'draft-js'\r\n\r\n// ** Reactstrap Imports\r\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { isObjEmpty, selectThemeColors } from '@utils'\r\n\r\n// ** Styles Imports\r\nimport '@styles/react/libs/editor/editor.scss'\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\n// ** Function to capitalize the first letter of string\r\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1)\r\n\r\n// ** Modal Header\r\nconst ModalHeader = props => {\r\n  // ** Props\r\n  const { children, store, handleTaskSidebar, setDeleted, deleted, important, setImportant, deleteTask, dispatch } =\r\n    props\r\n\r\n  // ** Function to delete task\r\n  const handleDeleteTask = () => {\r\n    setDeleted(!deleted)\r\n    dispatch(deleteTask(store.selectedTask.id))\r\n    handleTaskSidebar()\r\n  }\r\n\r\n  return (\r\n    <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\r\n      <h5 className='modal-title'>{children}</h5>\r\n      <div className='todo-item-action d-flex align-items-center'>\r\n        {store && !isObjEmpty(store.selectedTask) ? (\r\n          <Trash className='cursor-pointer mt-25' size={16} onClick={() => handleDeleteTask()} />\r\n        ) : null}\r\n        <span className='todo-item-favorite cursor-pointer mx-75'>\r\n          <Star\r\n            size={16}\r\n            onClick={() => setImportant(!important)}\r\n            className={classnames({\r\n              'text-warning': important === true\r\n            })}\r\n          />\r\n        </span>\r\n        <X className='fw-normal mt-25' size={16} onClick={handleTaskSidebar} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TaskSidebar = props => {\r\n  // ** Props\r\n  const { open, handleTaskSidebar, store, dispatch, updateTask, selectTask, addTask, deleteTask } = props\r\n\r\n  // ** States\r\n  const [assignee, setAssignee] = useState({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\r\n  const [tags, setTags] = useState([])\r\n  const [desc, setDesc] = useState(EditorState.createEmpty())\r\n  const [completed, setCompleted] = useState(false)\r\n  const [important, setImportant] = useState(false)\r\n  const [deleted, setDeleted] = useState(false)\r\n  const [dueDate, setDueDate] = useState(new Date())\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: { title: '' }\r\n  })\r\n\r\n  // ** Assignee Select Options\r\n  const assigneeOptions = [\r\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\r\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\r\n    { value: 'ross', label: 'Ross Geller', img: img3 },\r\n    { value: 'monica', label: 'Monica Geller', img: img4 },\r\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\r\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\r\n  ]\r\n\r\n  // ** Tag Select Options\r\n  const tagOptions = [\r\n    { value: 'team', label: 'Team' },\r\n    { value: 'low', label: 'Low' },\r\n    { value: 'medium', label: 'Medium' },\r\n    { value: 'high', label: 'High' },\r\n    { value: 'update', label: 'Update' }\r\n  ]\r\n\r\n  // ** Custom Assignee Component\r\n  const AssigneeComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <div className='d-flex align-items-center'>\r\n          <img className='d-block rounded-circle me-50' src={data.img} height='26' width='26' alt={data.label} />\r\n          <p className='mb-0'>{data.label}</p>\r\n        </div>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  // ** Returns sidebar title\r\n  const handleSidebarTitle = () => {\r\n    if (store && !isObjEmpty(store.selectedTask)) {\r\n      return (\r\n        <Button\r\n          outline\r\n          size='sm'\r\n          onClick={() => setCompleted(!completed)}\r\n          color={completed === true ? 'success' : 'secondary'}\r\n        >\r\n          {completed === true ? 'Granted' : 'Mark Granted'}\r\n        </Button>\r\n      )\r\n    } else {\r\n      return 'Add Wish'\r\n    }\r\n  }\r\n\r\n  // ** Function to run when sidebar opens\r\n  const handleSidebarOpened = () => {\r\n    const { selectedTask } = store\r\n    if (!isObjEmpty(selectedTask)) {\r\n      setValue('title', selectedTask.title)\r\n      setCompleted(selectedTask.isCompleted)\r\n      setImportant(selectedTask.isImportant)\r\n      setAssignee([\r\n        {\r\n          value: selectedTask.assignee.fullName,\r\n          label: selectedTask.assignee.fullName,\r\n          img: selectedTask.assignee.avatar\r\n        }\r\n      ])\r\n      setDueDate(selectedTask.dueDate)\r\n      if (typeof selectedTask.description === 'string') {\r\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)))\r\n      } else {\r\n        const obj = selectedTask.description._immutable.currentContent.blockMap\r\n        const property = Object.keys(obj).map(val => val)\r\n\r\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)))\r\n      }\r\n\r\n      if (selectedTask.tags.length) {\r\n        const tags = []\r\n        selectedTask.tags.map(tag => {\r\n          tags.push({ value: tag, label: capitalize(tag) })\r\n        })\r\n        setTags(tags)\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to run when sidebar closes\r\n  const handleSidebarClosed = () => {\r\n    setTags([])\r\n    setDesc('')\r\n    setValue('title', '')\r\n    setAssignee({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\r\n    setCompleted(false)\r\n    setImportant(false)\r\n    setDueDate(new Date())\r\n    dispatch(selectTask({}))\r\n  }\r\n\r\n  // ** Function to reset fileds\r\n  const handleResetFields = () => {\r\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description))\r\n\r\n    setValue('title', store.selectedTask.title)\r\n    setDesc(descValue)\r\n    setCompleted(store.selectedTask.isCompleted)\r\n    setImportant(store.selectedTask.isImportant)\r\n    setDeleted(store.selectedTask.isDeleted)\r\n    setDueDate(store.selectedTask.dueDate)\r\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\r\n      setAssignee({\r\n        value: store.selectedTask.assignee.fullName,\r\n        label: store.selectedTask.assignee.fullName,\r\n        img: store.selectedTask.assignee.avatar\r\n      })\r\n    }\r\n    if (store.selectedTask.tags.length) {\r\n      const tags = []\r\n      store.selectedTask.tags.map(tag => {\r\n        tags.push({ value: tag, label: capitalize(tag) })\r\n      })\r\n      setTags(tags)\r\n    }\r\n  }\r\n\r\n  // ** Renders Footer Buttons\r\n  const renderFooterButtons = () => {\r\n    if (store && !isObjEmpty(store.selectedTask)) {\r\n      return (\r\n        <Fragment>\r\n          <Button color='primary' className='update-btn update-todo-item me-1'>\r\n            Update\r\n          </Button>\r\n          <Button color='secondary' onClick={handleResetFields} outline>\r\n            Reset\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button color='primary' className='add-todo-item me-1'>\r\n            Add\r\n          </Button>\r\n          <Button color='secondary' onClick={handleTaskSidebar} outline>\r\n            Cancel\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    const newTaskTag = []\r\n\r\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName\r\n\r\n    if (tags.length) {\r\n      tags.map(tag => newTaskTag.push(tag.value))\r\n    }\r\n\r\n    const newAssignee = {\r\n      fullName: assignee.label,\r\n      avatar: assignee.img\r\n    }\r\n    const state = {\r\n      dueDate,\r\n      title: data.title,\r\n      tags: newTaskTag,\r\n      description: desc,\r\n      isCompleted: completed,\r\n      isDeleted: deleted,\r\n      isImportant: important,\r\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\r\n    }\r\n\r\n    if (data.title.length) {\r\n      if (isObjEmpty(errors)) {\r\n        if (isObjEmpty(store.selectedTask) || (!isObjEmpty(store.selectedTask) && !store.selectedTask.title.length)) {\r\n          dispatch(addTask(state))\r\n        } else {\r\n          dispatch(updateTask({ ...state, id: store.selectedTask.id }))\r\n        }\r\n        handleTaskSidebar()\r\n      }\r\n    } else {\r\n      setError('title', {\r\n        type: 'manual'\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={handleTaskSidebar}\r\n      className='sidebar-lg'\r\n      contentClassName='p-0'\r\n      onOpened={handleSidebarOpened}\r\n      onClosed={handleSidebarClosed}\r\n      modalClassName='modal-slide-in sidebar-todo-modal'\r\n    >\r\n      <Form id='form-modal-todo' className='todo-modal' onSubmit={handleSubmit(onSubmit)}>\r\n        <ModalHeader\r\n          store={store}\r\n          deleted={deleted}\r\n          dispatch={dispatch}\r\n          important={important}\r\n          deleteTask={deleteTask}\r\n          setDeleted={setDeleted}\r\n          setImportant={setImportant}\r\n          handleTaskSidebar={handleTaskSidebar}\r\n        >\r\n          {handleSidebarTitle()}\r\n        </ModalHeader>\r\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='task-title'>\r\n              Title <span className='text-danger'>*</span>\r\n            </Label>\r\n            <Controller\r\n              name='title'\r\n              control={control}\r\n              render={({ field }) => (\r\n                <Input\r\n                  id='task-title'\r\n                  placeholder='Title'\r\n                  className='new-todo-item-title'\r\n                  invalid={errors.title && true}\r\n                  {...field}\r\n                />\r\n              )}\r\n            />\r\n            {errors.title && <FormFeedback>Please enter a valid wish title</FormFeedback>}\r\n          </div>\r\n          \r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='task-tags'>\r\n              Tags\r\n            </Label>\r\n            <Select\r\n              isMulti\r\n              id='task-tags'\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              isClearable={false}\r\n              options={tagOptions}\r\n              theme={selectThemeColors}\r\n              value={tags}\r\n              onChange={data => {\r\n                setTags(data !== null ? [...data] : [])\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label for='task-desc' className='form-label'>\r\n              Description\r\n            </Label>\r\n            <Editor\r\n              editorState={desc}\r\n              wrapperClassName='toolbar-bottom'\r\n              toolbar={{\r\n                options: ['inline', 'textAlign'],\r\n                inline: {\r\n                  inDropdown: false,\r\n                  options: ['bold', 'italic', 'underline']\r\n                }\r\n              }}\r\n              onEditorStateChange={data => setDesc(data)}\r\n            />\r\n          </div>\r\n          <div>{renderFooterButtons()}</div>\r\n        </ModalBody>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TaskSidebar\r\n"]},"metadata":{},"sourceType":"module"}