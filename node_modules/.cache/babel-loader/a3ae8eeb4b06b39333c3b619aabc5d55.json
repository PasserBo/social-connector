{"ast":null,"code":"import _slicedToArray from \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar GLOBAL_DETECTION_CACHE_KEY = '_blockstackDidCheckEchoReply';\nvar ECHO_REPLY_PARAM = 'echoReply';\nvar AUTH_CONTINUATION_PARAM = 'authContinuation';\n\nfunction getQueryStringParams(query) {\n  if (!query) {\n    return {};\n  }\n\n  var trimmed = /^[?#]/.test(query) ? query.slice(1) : query;\n  return trimmed.split('&').reduce(function (params, param) {\n    var _param$split = param.split('='),\n        _param$split2 = _slicedToArray(_param$split, 2),\n        key = _param$split2[0],\n        value = _param$split2[1];\n\n    params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n    return params;\n  }, {});\n}\n\nexport function protocolEchoReplyDetection() {\n  var globalScope;\n\n  if (typeof self !== 'undefined') {\n    globalScope = self;\n  } else if (typeof window !== 'undefined') {\n    globalScope = window;\n  } else {\n    return false;\n  }\n\n  if (!globalScope.location || !globalScope.localStorage) {\n    return false;\n  }\n\n  var existingDetection = globalScope[GLOBAL_DETECTION_CACHE_KEY];\n\n  if (typeof existingDetection === 'boolean') {\n    return existingDetection;\n  }\n\n  var searchParams = getQueryStringParams(globalScope.location.search);\n  var echoReplyParam = searchParams[ECHO_REPLY_PARAM];\n\n  if (echoReplyParam) {\n    globalScope[GLOBAL_DETECTION_CACHE_KEY] = true;\n    var echoReplyKey = \"echo-reply-\".concat(echoReplyParam);\n    globalScope.localStorage.setItem(echoReplyKey, 'success');\n    globalScope.setTimeout(function () {\n      var authContinuationParam = searchParams[AUTH_CONTINUATION_PARAM];\n      globalScope.location.href = authContinuationParam;\n    }, 10);\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../src/protocolEchoDetection.ts"],"names":[],"mappings":";AAOA,IAAM,0BAA0B,GAAG,8BAAnC;AACA,IAAM,gBAAgB,GAAG,WAAzB;AACA,IAAM,uBAAuB,GAAG,kBAAhC;;AAEA,SAAS,oBAAT,CAA8B,KAA9B,EAA2C;AACzC,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,MAAM,OAAO,GAAG,QAAQ,IAAR,CAAa,KAAb,IAAsB,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAtB,GAAuC,KAAvD;AACA,SAAO,OAAO,CAAC,KAAR,CAAc,GAAd,EAAmB,MAAnB,CAA0B,UAAC,MAAD,EAAS,KAAT,EAAkB;AACjD,uBAAqB,KAAK,CAAC,KAAN,CAAY,GAAZ,CAArB;AAAA;AAAA,QAAO,GAAP;AAAA,QAAY,KAAZ;;AACA,IAAA,MAAM,CAAC,GAAD,CAAN,GAAc,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAD,CAArB,GAAmD,EAAtE;AACA,WAAO,MAAP;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD;;AAaD,OAAM,SAAU,0BAAV,GAAoC;AAExC,MAAI,WAAJ;;AACA,MAAI,OAAO,IAAP,KAAgB,WAApB,EAAiC;AAC/B,IAAA,WAAW,GAAG,IAAd;AACD,GAFD,MAEO,IAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AACxC,IAAA,WAAW,GAAG,MAAd;AACD,GAFM,MAEA;AAEL,WAAO,KAAP;AACD;;AAED,MAAI,CAAC,WAAW,CAAC,QAAb,IAAyB,CAAC,WAAW,CAAC,YAA1C,EAAwD;AAEtD,WAAO,KAAP;AACD;;AAGD,MAAM,iBAAiB,GAAI,WAAmB,CAAC,0BAAD,CAA9C;;AACA,MAAI,OAAO,iBAAP,KAA6B,SAAjC,EAA4C;AAC1C,WAAO,iBAAP;AACD;;AAED,MAAM,YAAY,GAAG,oBAAoB,CAAC,WAAW,CAAC,QAAZ,CAAqB,MAAtB,CAAzC;AACA,MAAM,cAAc,GAAG,YAAY,CAAC,gBAAD,CAAnC;;AACA,MAAI,cAAJ,EAAoB;AACjB,IAAA,WAAmB,CAAC,0BAAD,CAAnB,GAAkD,IAAlD;AAGD,QAAM,YAAY,wBAAiB,cAAjB,CAAlB;AAGA,IAAA,WAAW,CAAC,YAAZ,CAAyB,OAAzB,CAAiC,YAAjC,EAA+C,SAA/C;AAIA,IAAA,WAAW,CAAC,UAAZ,CAAuB,YAAK;AAC1B,UAAM,qBAAqB,GAAG,YAAY,CAAC,uBAAD,CAA1C;AACA,MAAA,WAAW,CAAC,QAAZ,CAAqB,IAArB,GAA4B,qBAA5B;AACD,KAHD,EAGG,EAHH;AAKA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["const GLOBAL_DETECTION_CACHE_KEY = '_blockstackDidCheckEchoReply';\nconst ECHO_REPLY_PARAM = 'echoReply';\nconst AUTH_CONTINUATION_PARAM = 'authContinuation';\nfunction getQueryStringParams(query) {\n    if (!query) {\n        return {};\n    }\n    const trimmed = /^[?#]/.test(query) ? query.slice(1) : query;\n    return trimmed.split('&').reduce((params, param) => {\n        const [key, value] = param.split('=');\n        params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n        return params;\n    }, {});\n}\nexport function protocolEchoReplyDetection() {\n    let globalScope;\n    if (typeof self !== 'undefined') {\n        globalScope = self;\n    }\n    else if (typeof window !== 'undefined') {\n        globalScope = window;\n    }\n    else {\n        return false;\n    }\n    if (!globalScope.location || !globalScope.localStorage) {\n        return false;\n    }\n    const existingDetection = globalScope[GLOBAL_DETECTION_CACHE_KEY];\n    if (typeof existingDetection === 'boolean') {\n        return existingDetection;\n    }\n    const searchParams = getQueryStringParams(globalScope.location.search);\n    const echoReplyParam = searchParams[ECHO_REPLY_PARAM];\n    if (echoReplyParam) {\n        globalScope[GLOBAL_DETECTION_CACHE_KEY] = true;\n        const echoReplyKey = `echo-reply-${echoReplyParam}`;\n        globalScope.localStorage.setItem(echoReplyKey, 'success');\n        globalScope.setTimeout(() => {\n            const authContinuationParam = searchParams[AUTH_CONTINUATION_PARAM];\n            globalScope.location.href = authContinuationParam;\n        }, 10);\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=protocolEchoDetection.js.map"]},"metadata":{},"sourceType":"module"}