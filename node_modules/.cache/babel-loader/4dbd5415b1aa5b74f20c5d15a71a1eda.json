{"ast":null,"code":"// ** Third Party Components\nimport Select from'react-select';import{selectThemeColors}from'@utils';import{useForm,Controller}from'react-hook-form';// ** Reactstrap Imports\nimport{Row,Col,Card,Form,Label,Input,Button,CardBody,CardTitle,CardHeader,FormFeedback}from'reactstrap';// ** Images\nimport illustration from\"@src/assets/images/illustration/pricing-Illustration.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const keyOptions=[{value:'full-control',label:'Full Control'},{value:'modify',label:'Modify'},{value:'read-execute',label:'Read & Execute'},{value:'list-folder',label:'List Folder Contents'},{value:'read-only',label:'Read Only'},{value:'read-write',label:'Read Write'}];const defaultValues={apiKeyName:''};const CreateApiKey=()=>{// ** Hooks\nconst{control,setError,handleSubmit,formState:{errors}}=useForm({defaultValues});const onSubmit=data=>{if(data.apiKeyName.length){return null;}else{setError('apiKeyName',{type:'manual'});}};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{className:\"pb-0\",children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Create an API Key\"})}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:{size:5,order:0},xs:{size:12,order:1},children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",children:\"Choose the Api key type you want to create\"}),/*#__PURE__*/_jsx(Select,{isClearable:false,options:keyOptions,className:\"react-select\",classNamePrefix:\"select\",theme:selectThemeColors,defaultValue:keyOptions[0]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"api-key-name\",children:\"Name the API key\"}),/*#__PURE__*/_jsx(Controller,{id:\"apiKeyName\",name:\"apiKeyName\",control:control,render:_ref=>{let{field}=_ref;return/*#__PURE__*/_jsx(Input,{placeholder:\"Server Key\",invalid:errors.apiKeyName&&true,...field});}}),errors&&errors.apiKeyName&&/*#__PURE__*/_jsx(FormFeedback,{children:\"Please enter a valid API key name\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{block:true,type:\"submit\",color:\"primary\",children:\"Create Key\"})})]})})}),/*#__PURE__*/_jsx(Col,{md:{size:7,order:1},xs:{size:12,order:0},children:/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"img\",{className:\"img-fluid text-center\",src:illustration,alt:\"illustration\",width:\"310\"})})})]})]});};export default CreateApiKey;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/pages/account-settings/CreateApikey.js"],"names":["Select","selectThemeColors","useForm","Controller","Row","Col","Card","Form","Label","Input","Button","CardBody","CardTitle","CardHeader","FormFeedback","keyOptions","value","label","defaultValues","apiKeyName","CreateApiKey","control","setError","handleSubmit","formState","errors","onSubmit","data","length","type","size","order","field","illustration"],"mappings":"AAAA;AACA,MAAOA,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,iBAAT,KAAkC,QAAlC,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,iBAApC,CAEA;AACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,IAAzB,CAA+BC,KAA/B,CAAsCC,KAAtC,CAA6CC,MAA7C,CAAqDC,QAArD,CAA+DC,SAA/D,CAA0EC,UAA1E,CAAsFC,YAAtF,KAA0G,YAA1G,CAEA;2KAGA,KAAMC,CAAAA,UAAU,CAAG,CACjB,CAAEC,KAAK,CAAE,cAAT,CAAyBC,KAAK,CAAE,cAAhC,CADiB,CAEjB,CAAED,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CAFiB,CAGjB,CAAED,KAAK,CAAE,cAAT,CAAyBC,KAAK,CAAE,gBAAhC,CAHiB,CAIjB,CAAED,KAAK,CAAE,aAAT,CAAwBC,KAAK,CAAE,sBAA/B,CAJiB,CAKjB,CAAED,KAAK,CAAE,WAAT,CAAsBC,KAAK,CAAE,WAA7B,CALiB,CAMjB,CAAED,KAAK,CAAE,YAAT,CAAuBC,KAAK,CAAE,YAA9B,CANiB,CAAnB,CASA,KAAMC,CAAAA,aAAa,CAAG,CACpBC,UAAU,CAAE,EADQ,CAAtB,CAIA,KAAMC,CAAAA,YAAY,CAAG,IAAM,CACzB;AACA,KAAM,CACJC,OADI,CAEJC,QAFI,CAGJC,YAHI,CAIJC,SAAS,CAAE,CAAEC,MAAF,CAJP,EAKFvB,OAAO,CAAC,CAAEgB,aAAF,CAAD,CALX,CAOA,KAAMQ,CAAAA,QAAQ,CAAGC,IAAI,EAAI,CACvB,GAAIA,IAAI,CAACR,UAAL,CAAgBS,MAApB,CAA4B,CAC1B,MAAO,KAAP,CACD,CAFD,IAEO,CACLN,QAAQ,CAAC,YAAD,CAAe,CACrBO,IAAI,CAAE,QADe,CAAf,CAAR,CAGD,CACF,CARD,CAUA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,EAAY,SAAS,CAAC,MAAtB,uBACE,KAAC,SAAD,EAAW,GAAG,CAAC,IAAf,+BADF,EADF,cAIE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,KAAK,CAAE,CAAlB,CAAT,CAAgC,EAAE,CAAE,CAAED,IAAI,CAAE,EAAR,CAAYC,KAAK,CAAE,CAAnB,CAApC,uBACE,KAAC,QAAD,wBACE,MAAC,IAAD,EAAM,QAAQ,CAAER,YAAY,CAACG,QAAD,CAA5B,wBACE,aAAK,SAAS,CAAC,MAAf,wBACE,KAAC,KAAD,EAAO,SAAS,CAAC,YAAjB,wDADF,cAEE,KAAC,MAAD,EACE,WAAW,CAAE,KADf,CAEE,OAAO,CAAEX,UAFX,CAGE,SAAS,CAAC,cAHZ,CAIE,eAAe,CAAC,QAJlB,CAKE,KAAK,CAAEd,iBALT,CAME,YAAY,CAAEc,UAAU,CAAC,CAAD,CAN1B,EAFF,GADF,cAYE,aAAK,SAAS,CAAC,MAAf,wBACE,KAAC,KAAD,EAAO,SAAS,CAAC,YAAjB,CAA8B,GAAG,CAAC,cAAlC,8BADF,cAIE,KAAC,UAAD,EACE,EAAE,CAAC,YADL,CAEE,IAAI,CAAC,YAFP,CAGE,OAAO,CAAEM,OAHX,CAIE,MAAM,CAAE,UAAC,CAAEW,KAAF,CAAD,yBACN,KAAC,KAAD,EAAO,WAAW,CAAC,YAAnB,CAAgC,OAAO,CAAEP,MAAM,CAACN,UAAP,EAAqB,IAA9D,IAAwEa,KAAxE,EADM,EAJV,EAJF,CAYGP,MAAM,EAAIA,MAAM,CAACN,UAAjB,eAA+B,KAAC,YAAD,gDAZlC,GAZF,cA0BE,kCACE,KAAC,MAAD,EAAQ,KAAK,KAAb,CAAc,IAAI,CAAC,QAAnB,CAA4B,KAAK,CAAC,SAAlC,wBADF,EA1BF,GADF,EADF,EADF,cAqCE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEW,IAAI,CAAE,CAAR,CAAWC,KAAK,CAAE,CAAlB,CAAT,CAAgC,EAAE,CAAE,CAAED,IAAI,CAAE,EAAR,CAAYC,KAAK,CAAE,CAAnB,CAApC,uBACE,YAAK,SAAS,CAAC,aAAf,uBACE,YAAK,SAAS,CAAC,uBAAf,CAAuC,GAAG,CAAEE,YAA5C,CAA0D,GAAG,CAAC,cAA9D,CAA6E,KAAK,CAAC,KAAnF,EADF,EADF,EArCF,GAJF,GADF,CAkDD,CArED,CAuEA,cAAeb,CAAAA,YAAf","sourcesContent":["// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport { selectThemeColors } from '@utils'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, Form, Label, Input, Button, CardBody, CardTitle, CardHeader, FormFeedback } from 'reactstrap'\r\n\r\n// ** Images\r\nimport illustration from '@src/assets/images/illustration/pricing-Illustration.svg'\r\n\r\nconst keyOptions = [\r\n  { value: 'full-control', label: 'Full Control' },\r\n  { value: 'modify', label: 'Modify' },\r\n  { value: 'read-execute', label: 'Read & Execute' },\r\n  { value: 'list-folder', label: 'List Folder Contents' },\r\n  { value: 'read-only', label: 'Read Only' },\r\n  { value: 'read-write', label: 'Read Write' }\r\n]\r\n\r\nconst defaultValues = {\r\n  apiKeyName: ''\r\n}\r\n\r\nconst CreateApiKey = () => {\r\n  // ** Hooks\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  const onSubmit = data => {\r\n    if (data.apiKeyName.length) {\r\n      return null\r\n    } else {\r\n      setError('apiKeyName', {\r\n        type: 'manual'\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className='pb-0'>\r\n        <CardTitle tag='h4'>Create an API Key</CardTitle>\r\n      </CardHeader>\r\n      <Row>\r\n        <Col md={{ size: 5, order: 0 }} xs={{ size: 12, order: 1 }}>\r\n          <CardBody>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-2'>\r\n                <Label className='form-label'>Choose the Api key type you want to create</Label>\r\n                <Select\r\n                  isClearable={false}\r\n                  options={keyOptions}\r\n                  className='react-select'\r\n                  classNamePrefix='select'\r\n                  theme={selectThemeColors}\r\n                  defaultValue={keyOptions[0]}\r\n                />\r\n              </div>\r\n              <div className='mb-2'>\r\n                <Label className='form-label' for='api-key-name'>\r\n                  Name the API key\r\n                </Label>\r\n                <Controller\r\n                  id='apiKeyName'\r\n                  name='apiKeyName'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input placeholder='Server Key' invalid={errors.apiKeyName && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors && errors.apiKeyName && <FormFeedback>Please enter a valid API key name</FormFeedback>}\r\n              </div>\r\n              <div>\r\n                <Button block type='submit' color='primary'>\r\n                  Create Key\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </CardBody>\r\n        </Col>\r\n        <Col md={{ size: 7, order: 1 }} xs={{ size: 12, order: 0 }}>\r\n          <div className='text-center'>\r\n            <img className='img-fluid text-center' src={illustration} alt='illustration' width='310' />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CreateApiKey\r\n"]},"metadata":{},"sourceType":"module"}