{"ast":null,"code":"// ** React Imports\nimport{Fragment,useEffect}from'react';// ** Third Party Components\nimport Prism from'prismjs';// ** Custom Components\nimport Card from'@components/card-snippet';import BreadCrumbs from'@components/breadcrumbs';// ** Reactstrap Imports\nimport{Row,Col,CardText}from'reactstrap';// ** Source Code\nimport{accordionHover,accordionBorder,accordionMargin,accordionControlled,accordionWithoutArrow}from'./AccordionSourceCode';// ** Demo Components\nimport AccordionHover from'./AccordionHover';import AccordionBorder from'./AccordionBorder';import AccordionMargin from'./AccordionMargin';import AccordionControlled from'./AccordionControlled';import AccordionUncontrolled from'./AccordionUncontrolled';import AccordionWithoutArrow from'./AccordionWithoutArrow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Accordion=()=>{useEffect(()=>{Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Accordions\",breadCrumbParent:\"Components\",breadCrumbActive:\"Accordions\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Uncontrolled\",code:accordionControlled,children:[/*#__PURE__*/_jsx(CardText,{children:\"You may want to open one item at a time, for that you can use accordion.\"}),/*#__PURE__*/_jsx(AccordionUncontrolled,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Controlled\",code:accordionControlled,children:[/*#__PURE__*/_jsx(CardText,{children:\"Manage a state to control your collapse component.\"}),/*#__PURE__*/_jsx(AccordionControlled,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{code:accordionWithoutArrow,title:\"Accordion Without Arrow\",children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-without-arrow\"}),\" class with \",/*#__PURE__*/_jsx(\"code\",{children:\"<Accordion>\"}),\" for accordion without arrow.\"]}),/*#__PURE__*/_jsx(AccordionWithoutArrow,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Border\",code:accordionBorder,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-border\"}),\" class with your accordion to create a bordered accordion.\"]}),/*#__PURE__*/_jsx(AccordionBorder,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Margin\",code:accordionMargin,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-margin\"}),\" class with your accordion to create a accordion with margin.\"]}),/*#__PURE__*/_jsx(AccordionMargin,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Hover\",code:accordionHover,children:/*#__PURE__*/_jsx(AccordionHover,{})})})]})]});};export default Accordion;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/components/accordion/index.js"],"names":["Fragment","useEffect","Prism","Card","BreadCrumbs","Row","Col","CardText","accordionHover","accordionBorder","accordionMargin","accordionControlled","accordionWithoutArrow","AccordionHover","AccordionBorder","AccordionMargin","AccordionControlled","AccordionUncontrolled","AccordionWithoutArrow","Accordion","highlightAll"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CAEA;AACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,KAAmC,YAAnC,CAEA;AACA,OACEC,cADF,CAEEC,eAFF,CAGEC,eAHF,CAIEC,mBAJF,CAKEC,qBALF,KAMO,uBANP,CAQA;AACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,C,wFAEA,KAAMC,CAAAA,SAAS,CAAG,IAAM,CACtBlB,SAAS,CAAC,IAAM,CACdC,KAAK,CAACkB,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,eAAe,CAAC,YAA7B,CAA0C,gBAAgB,CAAC,YAA3D,CAAwE,gBAAgB,CAAC,YAAzF,EADF,cAEE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,CAA2B,IAAI,CAAET,mBAAjC,wBACE,KAAC,QAAD,uFADF,cAEE,KAAC,qBAAD,IAFF,GADF,EADF,cAOE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,YAAZ,CAAyB,IAAI,CAAEA,mBAA/B,wBACE,KAAC,QAAD,iEADF,cAEE,KAAC,mBAAD,IAFF,GADF,EAPF,cAaE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,IAAI,CAAEC,qBAAZ,CAAmC,KAAK,CAAC,yBAAzC,wBACE,MAAC,QAAD,sCACY,kDADZ,6BAC6D,qCAD7D,mCADF,cAKE,KAAC,qBAAD,IALF,GADF,EAbF,cAsBE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,CAAqB,IAAI,CAAEH,eAA3B,wBACE,MAAC,QAAD,sCACY,2CADZ,gEADF,cAIE,KAAC,eAAD,IAJF,GADF,EAtBF,cA8BE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,CAAqB,IAAI,CAAEC,eAA3B,wBACE,MAAC,QAAD,sCACY,2CADZ,mEADF,cAIE,KAAC,eAAD,IAJF,GADF,EA9BF,cAsCE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,KAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAEF,cAA1B,uBACE,KAAC,cAAD,IADF,EADF,EAtCF,GAFF,GADF,CAiDD,CAtDD,CAuDA,cAAeW,CAAAA,SAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Source Code\r\nimport {\r\n  accordionHover,\r\n  accordionBorder,\r\n  accordionMargin,\r\n  accordionControlled,\r\n  accordionWithoutArrow\r\n} from './AccordionSourceCode'\r\n\r\n// ** Demo Components\r\nimport AccordionHover from './AccordionHover'\r\nimport AccordionBorder from './AccordionBorder'\r\nimport AccordionMargin from './AccordionMargin'\r\nimport AccordionControlled from './AccordionControlled'\r\nimport AccordionUncontrolled from './AccordionUncontrolled'\r\nimport AccordionWithoutArrow from './AccordionWithoutArrow'\r\n\r\nconst Accordion = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Accordions' breadCrumbParent='Components' breadCrumbActive='Accordions' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Uncontrolled' code={accordionControlled}>\r\n            <CardText>You may want to open one item at a time, for that you can use accordion.</CardText>\r\n            <AccordionUncontrolled />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Controlled' code={accordionControlled}>\r\n            <CardText>Manage a state to control your collapse component.</CardText>\r\n            <AccordionControlled />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card code={accordionWithoutArrow} title='Accordion Without Arrow'>\r\n            <CardText>\r\n              Use class <code>.accordion-without-arrow</code> class with <code>&lt;Accordion&gt;</code> for accordion\r\n              without arrow.\r\n            </CardText>\r\n            <AccordionWithoutArrow />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Border' code={accordionBorder}>\r\n            <CardText>\r\n              Use class <code>.accordion-border</code> class with your accordion to create a bordered accordion.\r\n            </CardText>\r\n            <AccordionBorder />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Margin' code={accordionMargin}>\r\n            <CardText>\r\n              Use class <code>.accordion-margin</code> class with your accordion to create a accordion with margin.\r\n            </CardText>\r\n            <AccordionMargin />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Hover' code={accordionHover}>\r\n            <AccordionHover />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Accordion\r\n"]},"metadata":{},"sourceType":"module"}