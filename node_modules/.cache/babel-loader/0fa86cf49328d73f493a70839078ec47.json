{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/react-version/full-version/src/views/apps/calendar/AddEventSidebar.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Custom Components\n\nimport Avatar from '@components/avatar'; // ** Third Party Components\n\nimport { toast } from 'react-toastify';\nimport Flatpickr from 'react-flatpickr';\nimport { X, Check } from 'react-feather';\nimport Select, { components } from 'react-select';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useForm, Controller } from 'react-hook-form'; // ** Reactstrap Imports\n\nimport { Button, Modal, ModalHeader, ModalBody, Label, Input, Form } from 'reactstrap'; // ** Utils\n\nimport { selectThemeColors, isObjEmpty } from '@utils'; // ** Avatar Images\n\nimport img1 from '@src/assets/images/avatars/1-small.png'; // ** Styles Imports\n\nimport '@styles/react/libs/react-select/_react-select.scss';\nimport '@styles/react/libs/flatpickr/flatpickr.scss'; // ** Toast Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToastComponent = _ref => {\n  let {\n    title,\n    icon,\n    color\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toastify-header pb-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"sm\",\n          color: color,\n          icon: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"toast-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ToastComponent;\n\nconst AddEventSidebar = props => {\n  _s();\n\n  // ** Props\n  const {\n    open,\n    store,\n    dispatch,\n    addEvent,\n    calendarApi,\n    selectEvent,\n    updateEvent,\n    removeEvent,\n    refetchEvents,\n    calendarsColor,\n    handleAddEventSidebar\n  } = props; // ** Vars & Hooks\n\n  const selectedEvent = store.selectedEvent,\n        {\n    control,\n    setError,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: ''\n    }\n  }); // ** States\n\n  const [url, setUrl] = useState('');\n  const [desc, setDesc] = useState('');\n  const [guests, setGuests] = useState({});\n  const [allDay, setAllDay] = useState(false);\n  const [location, setLocation] = useState('');\n  const [endPicker, setEndPicker] = useState(new Date());\n  const [startPicker, setStartPicker] = useState(new Date());\n  const [calendarLabel, setCalendarLabel] = useState([{\n    value: 'Billboards',\n    label: 'Billboards.btc',\n    color: 'primary'\n  }]); // ** Select Options\n\n  const options = [{\n    value: 'Billboards',\n    label: 'Billboards.btc',\n    color: 'success',\n    className: 'form-check-danger mb-1'\n  }, {\n    value: 'Times Sq',\n    label: 'Times2.btc',\n    color: 'success',\n    className: 'form-check-info'\n  }, {\n    value: 'Screens',\n    label: 'Screens.btc',\n    color: 'primary',\n    className: 'form-check-primary mb-1'\n  }, {\n    value: 'Agency',\n    label: 'Agency.btc',\n    color: 'primary',\n    className: 'form-check-info'\n  }, {\n    value: 'Advertising',\n    label: 'Advertising.btc',\n    color: 'primary',\n    className: 'form-check-info'\n  }, {\n    value: 'Direct Mail',\n    label: 'Direct Mail.btc',\n    color: 'info',\n    className: 'form-check-info'\n  }, {\n    value: 'Panorama',\n    label: 'Panorama.btc',\n    color: 'primary',\n    className: 'form-check-info'\n  }, {\n    value: 'Office',\n    label: 'Office.btc',\n    color: 'primary',\n    className: 'form-check-warning mb-1'\n  }, {\n    value: 'Malls',\n    label: 'Malls.btc',\n    color: 'success',\n    className: 'form-check-success mb-1'\n  }, {\n    value: 'Say',\n    label: 'Say.btc',\n    color: 'success',\n    className: 'form-check-primary mb-1'\n  }, {\n    value: 'Stadium',\n    label: 'Stadium.btc',\n    color: 'info',\n    className: 'form-check-info'\n  }, {\n    value: 'Gyms',\n    label: 'Gyms.btc',\n    color: 'info',\n    className: 'form-check-info'\n  }, {\n    value: 'Classifieds',\n    label: 'Classifieds.btc',\n    color: 'primary',\n    className: 'form-check-info'\n  }];\n  const guestsOptions = [{\n    value: 'USA',\n    label: 'USA',\n    avatar: img1\n  }, {\n    value: 'CAN',\n    label: 'Canada',\n    avatar: img1\n  }, {\n    value: 'Global',\n    label: 'Global',\n    avatar: img1\n  }]; // ** Custom Select components\n\n  const OptionComponent = _ref2 => {\n    let {\n      data,\n      ...props\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `bullet bullet-${data.color} bullet-sm me-50`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), data.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n\n  const GuestsComponent = _ref3 => {\n    let {\n      data,\n      ...props\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }; // ** Adds New Ad\n\n\n  const handleAddEvent = () => {\n    const obj = {\n      title: getValues('title'),\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: 'block',\n      extendedProps: {\n        calendar: calendarLabel[0].label,\n        url: url.length ? url : undefined,\n        guests: guests.length ? guests : undefined,\n        location: location.length ? location : undefined,\n        desc: desc.length ? desc : undefined\n      }\n    };\n    dispatch(addEvent(obj));\n    refetchEvents();\n    handleAddEventSidebar();\n    toast.success( /*#__PURE__*/_jsxDEV(ToastComponent, {\n      title: \"Ad Booked - Ready to Publish\",\n      color: \"success\",\n      icon: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 94\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }, this), {\n      icon: false,\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    });\n  }; // ** Reset Input Values on Close\n\n\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}));\n    setValue('title', '');\n    setAllDay(false);\n    setUrl('');\n    setLocation('');\n    setDesc('');\n    setGuests({});\n    setCalendarLabel([{\n      value: 'Billboards',\n      label: 'Billboards.btc',\n      color: 'primary'\n    }]);\n    setStartPicker(new Date());\n    setEndPicker(new Date());\n  }; // ** Set sidebar fields\n\n\n  const handleSelectedEvent = () => {\n    if (!isObjEmpty(selectedEvent)) {\n      const calendar = selectedEvent.extendedProps.calendar;\n\n      const resolveLabel = () => {\n        if (calendar.length) {\n          return {\n            label: calendar,\n            value: calendar,\n            color: calendarsColor[calendar]\n          };\n        } else {\n          return {\n            value: 'Billboards',\n            label: 'Billboards.btc',\n            color: 'primary'\n          };\n        }\n      };\n\n      setValue('title', selectedEvent.title || getValues('title'));\n      setAllDay(selectedEvent.allDay || allDay);\n      setUrl(selectedEvent.url || url);\n      setLocation(selectedEvent.extendedProps.location || location);\n      setDesc(selectedEvent.extendedProps.description || desc);\n      setGuests(selectedEvent.extendedProps.guests || guests);\n      setStartPicker(new Date(selectedEvent.start));\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end));\n      setCalendarLabel([resolveLabel()]);\n    }\n  }; // ** (UI) updateEventInCalendar\n\n\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id); // ** Set ad properties except date related\n\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index];\n      existingEvent.setProp(propName, updatedEventData[propName]);\n    } // ** Set date related props\n\n\n    existingEvent.setDates(new Date(updatedEventData.start), new Date(updatedEventData.end), {\n      allDay: updatedEventData.allDay\n    }); // ** Set ad's extendedProps\n\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index];\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName]);\n    }\n  }; // ** Updates Ads in Store\n\n\n  const handleUpdateEvent = () => {\n    if (getValues('title').length) {\n      const eventToUpdate = {\n        id: selectedEvent.id,\n        title: getValues('title'),\n        allDay,\n        start: startPicker,\n        end: endPicker,\n        url,\n        display: allDay === false ? 'block' : undefined,\n        extendedProps: {\n          location,\n          description: desc,\n          guests,\n          calendar: calendarLabel[0].label\n        }\n      };\n      const propsToUpdate = ['id', 'title', 'url'];\n      const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description'];\n      dispatch(updateEvent(eventToUpdate));\n      updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate);\n      handleAddEventSidebar();\n      toast.success( /*#__PURE__*/_jsxDEV(ToastComponent, {\n        title: \"Ad Updated\",\n        color: \"success\",\n        icon: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this), {\n        icon: false,\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeButton: false\n      });\n    } else {\n      setError('title', {\n        type: 'manual'\n      });\n    }\n  }; // ** (UI) removeEventInCalendar\n\n\n  const removeEventInCalendar = eventId => {\n    calendarApi.getEventById(eventId).remove();\n  };\n\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id));\n    removeEventInCalendar(selectedEvent.id);\n    handleAddEventSidebar();\n    toast.error( /*#__PURE__*/_jsxDEV(ToastComponent, {\n      title: \"Ad Removed\",\n      color: \"danger\",\n      icon: /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 73\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, this), {\n      icon: false,\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    });\n  }; // ** Event Action buttons\n\n\n  const EventActions = () => {\n    if (isObjEmpty(selectedEvent) || !isObjEmpty(selectedEvent) && !selectedEvent.title.length) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"me-1\",\n          type: \"submit\",\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          type: \"reset\",\n          onClick: handleAddEventSidebar,\n          outline: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"me-1\",\n          color: \"primary\",\n          onClick: handleUpdateEvent,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          onClick: handleDeleteEvent,\n          outline: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this);\n    }\n  }; // ** Close BTN\n\n\n  const CloseBtn = /*#__PURE__*/_jsxDEV(X, {\n    className: \"cursor-pointer\",\n    size: 15,\n    onClick: handleAddEventSidebar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 20\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    className: \"sidebar-lg\",\n    toggle: handleAddEventSidebar,\n    onOpened: handleSelectedEvent,\n    onClosed: handleResetInputValues,\n    contentClassName: \"p-0 overflow-hidden\",\n    modalClassName: \"modal-slide-in event-sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: \"mb-1\",\n      toggle: handleAddEventSidebar,\n      close: CloseBtn,\n      tag: \"div\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title\",\n        children: [selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Book', \" Ad\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      options: {\n        wheelPropagation: false\n      },\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"flex-grow-1 pb-sm-0 pb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(data => {\n            if (data.title.length) {\n              if (isObjEmpty(errors)) {\n                if (isObjEmpty(selectedEvent) || !isObjEmpty(selectedEvent) && !selectedEvent.title.length) {\n                  handleAddEvent();\n                } else {\n                  handleUpdateEvent();\n                }\n\n                handleAddEventSidebar();\n              }\n            } else {\n              setError('title', {\n                type: 'manual'\n              });\n            }\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"title\",\n              children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"title\",\n              control: control,\n              render: _ref4 => {\n                let {\n                  field\n                } = _ref4;\n                return /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"title\",\n                  placeholder: \"Title\",\n                  invalid: errors.title && true,\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"label\",\n              children: \"Distribution Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"label\",\n              value: calendarLabel,\n              options: options,\n              theme: selectThemeColors,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              isClearable: false,\n              onChange: data => setCalendarLabel([data]),\n              components: {\n                Option: OptionComponent\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"startDate\",\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n              required: true,\n              id: \"startDate\",\n              name: \"startDate\",\n              className: \"form-control\",\n              onChange: date => setStartPicker(date[0]),\n              value: startPicker,\n              options: {\n                enableTime: allDay === false,\n                dateFormat: 'Y-m-d H:i'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"endDate\",\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n              required: true,\n              id: \"endDate\" // tag={Flatpickr}\n              ,\n              name: \"endDate\",\n              className: \"form-control\",\n              onChange: date => setEndPicker(date[0]),\n              value: endPicker,\n              options: {\n                enableTime: allDay === false,\n                dateFormat: 'Y-m-d H:i'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-switch mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"allDay\",\n              type: \"switch\",\n              className: \"me-1\",\n              checked: allDay,\n              name: \"customSwitch\",\n              onChange: e => setAllDay(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"allDay\",\n              children: \"All Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"eventURL\",\n              children: \"URL for the Art (PNG, JPG, SVG, HTML) (TIFF only available for Agency Networks)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"url\",\n              id: \"eventURL\",\n              value: url,\n              onChange: e => setUrl(e.target.value),\n              placeholder: \"https://www.bitfari.org\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"guests\",\n              children: \"Choose a Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              isMulti: true,\n              id: \"guests\",\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              isClearable: false,\n              options: guestsOptions,\n              theme: selectThemeColors,\n              value: guests.length ? [...guests] : null,\n              onChange: data => setGuests([...data]),\n              components: {\n                Option: GuestsComponent\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"location\",\n              children: \"Keywords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"location\",\n              value: location,\n              onChange: e => setLocation(e.target.value),\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"description\",\n              children: \"Ad Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"text\",\n              id: \"description\",\n              rows: \"3\",\n              value: desc,\n              onChange: e => setDesc(e.target.value),\n              placeholder: \"Place your Copy here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex mb-1\",\n            children: /*#__PURE__*/_jsxDEV(EventActions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEventSidebar, \"d7tsNeUAOCRjRKdr9EImwMPZgTo=\", false, function () {\n  return [useForm];\n});\n\n_c2 = AddEventSidebar;\nexport default AddEventSidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToastComponent\");\n$RefreshReg$(_c2, \"AddEventSidebar\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/apps/calendar/AddEventSidebar.js"],"names":["Fragment","useState","Avatar","toast","Flatpickr","X","Check","Select","components","PerfectScrollbar","useForm","Controller","Button","Modal","ModalHeader","ModalBody","Label","Input","Form","selectThemeColors","isObjEmpty","img1","ToastComponent","title","icon","color","AddEventSidebar","props","open","store","dispatch","addEvent","calendarApi","selectEvent","updateEvent","removeEvent","refetchEvents","calendarsColor","handleAddEventSidebar","selectedEvent","control","setError","setValue","getValues","handleSubmit","formState","errors","defaultValues","url","setUrl","desc","setDesc","guests","setGuests","allDay","setAllDay","location","setLocation","endPicker","setEndPicker","Date","startPicker","setStartPicker","calendarLabel","setCalendarLabel","value","label","options","className","guestsOptions","avatar","OptionComponent","data","GuestsComponent","handleAddEvent","obj","start","end","display","extendedProps","calendar","length","undefined","success","autoClose","hideProgressBar","closeButton","handleResetInputValues","handleSelectedEvent","resolveLabel","description","updateEventInCalendar","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","id","index","propName","setProp","setDates","setExtendedProp","handleUpdateEvent","eventToUpdate","type","removeEventInCalendar","eventId","remove","handleDeleteEvent","error","EventActions","CloseBtn","wheelPropagation","field","Option","date","enableTime","dateFormat","e","target","checked"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport { toast } from 'react-toastify'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { X, Check } from 'react-feather'\r\nimport Select, { components } from 'react-select'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Modal, ModalHeader, ModalBody, Label, Input, Form } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { selectThemeColors, isObjEmpty } from '@utils'\r\n\r\n// ** Avatar Images\r\nimport img1 from '@src/assets/images/avatars/1-small.png'\r\n\r\n// ** Styles Imports\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\n\r\n// ** Toast Component\r\nconst ToastComponent = ({ title, icon, color }) => (\r\n  <Fragment>\r\n    <div className='toastify-header pb-0'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color={color} icon={icon} />\r\n        <h6 className='toast-title'>{title}</h6>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst AddEventSidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    store,\r\n    dispatch,\r\n    addEvent,\r\n    calendarApi,\r\n    selectEvent,\r\n    updateEvent,\r\n    removeEvent,\r\n    refetchEvents,\r\n    calendarsColor,\r\n    handleAddEventSidebar\r\n  } = props\r\n\r\n  // ** Vars & Hooks\r\n  const selectedEvent = store.selectedEvent,\r\n    {\r\n      control,\r\n      setError,\r\n      setValue,\r\n      getValues,\r\n      handleSubmit,\r\n      formState: { errors }\r\n    } = useForm({\r\n      defaultValues: { title: '' }\r\n    })\r\n\r\n  // ** States\r\n  const [url, setUrl] = useState('')\r\n  const [desc, setDesc] = useState('')\r\n  const [guests, setGuests] = useState({})\r\n  const [allDay, setAllDay] = useState(false)\r\n  const [location, setLocation] = useState('')\r\n  const [endPicker, setEndPicker] = useState(new Date())\r\n  const [startPicker, setStartPicker] = useState(new Date())\r\n  const [calendarLabel, setCalendarLabel] = useState([{ value: 'Billboards', label: 'Billboards.btc', color: 'primary' }])\r\n\r\n  // ** Select Options\r\n  const options = [\r\n    { value: 'Billboards', label: 'Billboards.btc', color: 'success', className: 'form-check-danger mb-1' },\r\n    { value: 'Times Sq', label: 'Times2.btc', color: 'success', className: 'form-check-info' },\r\n    { value: 'Screens', label: 'Screens.btc', color: 'primary', className: 'form-check-primary mb-1' },\r\n    { value: 'Agency', label: 'Agency.btc', color: 'primary', className: 'form-check-info' },\r\n    { value: 'Advertising', label: 'Advertising.btc', color: 'primary', className: 'form-check-info' },\r\n    { value: 'Direct Mail', label: 'Direct Mail.btc', color: 'info', className: 'form-check-info' },\r\n    { value: 'Panorama', label: 'Panorama.btc', color: 'primary', className: 'form-check-info' },\r\n    { value: 'Office', label: 'Office.btc', color: 'primary', className: 'form-check-warning mb-1' },\r\n    { value: 'Malls', label: 'Malls.btc', color: 'success', className: 'form-check-success mb-1' },\r\n    { value: 'Say', label: 'Say.btc', color: 'success', className: 'form-check-primary mb-1' },\r\n    { value: 'Stadium', label: 'Stadium.btc', color: 'info', className: 'form-check-info' },\r\n    { value: 'Gyms', label: 'Gyms.btc', color: 'info', className: 'form-check-info' },\r\n    { value: 'Classifieds', label: 'Classifieds.btc', color: 'primary', className: 'form-check-info' }\r\n  ]\r\n\r\n  const guestsOptions = [\r\n    { value: 'USA', label: 'USA', avatar: img1 },\r\n    { value: 'CAN', label: 'Canada', avatar: img1 },\r\n    { value: 'Global', label: 'Global', avatar: img1 }\r\n  ]\r\n\r\n  // ** Custom Select components\r\n  const OptionComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <span className={`bullet bullet-${data.color} bullet-sm me-50`}></span>\r\n        {data.label}\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  const GuestsComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <div className='d-flex flex-wrap align-items-center'>\r\n          <div>{data.label}</div>\r\n        </div>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  // ** Adds New Ad\r\n  const handleAddEvent = () => {\r\n    const obj = {\r\n      title: getValues('title'),\r\n      start: startPicker,\r\n      end: endPicker,\r\n      allDay,\r\n      display: 'block',\r\n      extendedProps: {\r\n        calendar: calendarLabel[0].label,\r\n        url: url.length ? url : undefined,\r\n        guests: guests.length ? guests : undefined,\r\n        location: location.length ? location : undefined,\r\n        desc: desc.length ? desc : undefined\r\n      }\r\n    }\r\n    dispatch(addEvent(obj))\r\n    refetchEvents()\r\n    handleAddEventSidebar()\r\n    toast.success(<ToastComponent title='Ad Booked - Ready to Publish' color='success' icon={<Check />} />, {\r\n      icon: false,\r\n      autoClose: 2000,\r\n      hideProgressBar: true,\r\n      closeButton: false\r\n    })\r\n  }\r\n\r\n  // ** Reset Input Values on Close\r\n  const handleResetInputValues = () => {\r\n    dispatch(selectEvent({}))\r\n    setValue('title', '')\r\n    setAllDay(false)\r\n    setUrl('')\r\n    setLocation('')\r\n    setDesc('')\r\n    setGuests({})\r\n    setCalendarLabel([{ value: 'Billboards', label: 'Billboards.btc', color: 'primary' }])\r\n    setStartPicker(new Date())\r\n    setEndPicker(new Date())\r\n  }\r\n\r\n  // ** Set sidebar fields\r\n  const handleSelectedEvent = () => {\r\n    if (!isObjEmpty(selectedEvent)) {\r\n      const calendar = selectedEvent.extendedProps.calendar\r\n\r\n      const resolveLabel = () => {\r\n        if (calendar.length) {\r\n          return { label: calendar, value: calendar, color: calendarsColor[calendar] }\r\n        } else {\r\n          return { value: 'Billboards', label: 'Billboards.btc', color: 'primary' }\r\n        }\r\n      }\r\n      setValue('title', selectedEvent.title || getValues('title'))\r\n      setAllDay(selectedEvent.allDay || allDay)\r\n      setUrl(selectedEvent.url || url)\r\n      setLocation(selectedEvent.extendedProps.location || location)\r\n      setDesc(selectedEvent.extendedProps.description || desc)\r\n      setGuests(selectedEvent.extendedProps.guests || guests)\r\n      setStartPicker(new Date(selectedEvent.start))\r\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end))\r\n      setCalendarLabel([resolveLabel()])\r\n    }\r\n  }\r\n\r\n  // ** (UI) updateEventInCalendar\r\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\r\n    const existingEvent = calendarApi.getEventById(updatedEventData.id)\r\n\r\n    // ** Set ad properties except date related\r\n    for (let index = 0; index < propsToUpdate.length; index++) {\r\n      const propName = propsToUpdate[index]\r\n      existingEvent.setProp(propName, updatedEventData[propName])\r\n    }\r\n\r\n    // ** Set date related props\r\n    existingEvent.setDates(new Date(updatedEventData.start), new Date(updatedEventData.end), {\r\n      allDay: updatedEventData.allDay\r\n    })\r\n\r\n    // ** Set ad's extendedProps\r\n     for (let index = 0; index < extendedPropsToUpdate.length; index++) {\r\n      const propName = extendedPropsToUpdate[index]\r\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName])\r\n    }\r\n  }\r\n\r\n  // ** Updates Ads in Store\r\n  const handleUpdateEvent = () => {\r\n    if (getValues('title').length) {\r\n      const eventToUpdate = {\r\n        id: selectedEvent.id,\r\n        title: getValues('title'),\r\n        allDay,\r\n        start: startPicker,\r\n        end: endPicker,\r\n        url,\r\n        display: allDay === false ? 'block' : undefined,\r\n        extendedProps: {\r\n          location,\r\n          description: desc,\r\n          guests,\r\n          calendar: calendarLabel[0].label\r\n        }\r\n      }\r\n\r\n      const propsToUpdate = ['id', 'title', 'url']\r\n      const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description']\r\n      dispatch(updateEvent(eventToUpdate))\r\n      updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate)\r\n\r\n      handleAddEventSidebar()\r\n      toast.success(<ToastComponent title='Ad Updated' color='success' icon={<Check />} />, {\r\n        icon: false,\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeButton: false\r\n      })\r\n    } else {\r\n      setError('title', {\r\n        type: 'manual'\r\n      })\r\n    }\r\n  }\r\n\r\n  // ** (UI) removeEventInCalendar\r\n  const removeEventInCalendar = eventId => {\r\n    calendarApi.getEventById(eventId).remove()\r\n  }\r\n\r\n  const handleDeleteEvent = () => {\r\n    dispatch(removeEvent(selectedEvent.id))\r\n    removeEventInCalendar(selectedEvent.id)\r\n    handleAddEventSidebar()\r\n    toast.error(<ToastComponent title='Ad Removed' color='danger' icon={<Trash />} />, {\r\n      icon: false,\r\n      autoClose: 2000,\r\n      hideProgressBar: true,\r\n      closeButton: false\r\n    })\r\n  }\r\n\r\n  // ** Event Action buttons\r\n  const EventActions = () => {\r\n    if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\r\n      return (\r\n        <Fragment>\r\n          <Button className='me-1' type='submit' color='primary'>\r\n            Add\r\n          </Button>\r\n          <Button color='secondary' type='reset' onClick={handleAddEventSidebar} outline>\r\n            Cancel\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button className='me-1' color='primary' onClick={handleUpdateEvent}>\r\n            Update\r\n          </Button>\r\n          <Button color='danger' onClick={handleDeleteEvent} outline>\r\n            Delete\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  // ** Close BTN\r\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleAddEventSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      className='sidebar-lg'\r\n      toggle={handleAddEventSidebar}\r\n      onOpened={handleSelectedEvent}\r\n      onClosed={handleResetInputValues}\r\n      contentClassName='p-0 overflow-hidden'\r\n      modalClassName='modal-slide-in event-sidebar'\r\n    >\r\n      <ModalHeader className='mb-1' toggle={handleAddEventSidebar} close={CloseBtn} tag='div'>\r\n        <h5 className='modal-title'>\r\n          {selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Book'} Ad\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\r\n          <Form\r\n            onSubmit={handleSubmit(data => {\r\n              if (data.title.length) {\r\n                if (isObjEmpty(errors)) {\r\n                  if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\r\n                    handleAddEvent()\r\n                  } else {\r\n                    handleUpdateEvent()\r\n                  }\r\n                  handleAddEventSidebar()\r\n                }\r\n              } else {\r\n                setError('title', {\r\n                  type: 'manual'\r\n                })\r\n              }\r\n            })}\r\n          >\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='title'>\r\n                Title <span className='text-danger'>*</span>\r\n              </Label>\r\n              <Controller\r\n                name='title'\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Input id='title' placeholder='Title' invalid={errors.title && true} {...field} />\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='label'>\r\n                Distribution Network\r\n              </Label>\r\n              <Select\r\n                id='label'\r\n                value={calendarLabel}\r\n                options={options}\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                isClearable={false}\r\n                onChange={data => setCalendarLabel([data])}\r\n                components={{\r\n                  Option: OptionComponent\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='startDate'>\r\n                Start Date\r\n              </Label>\r\n              <Flatpickr\r\n                required\r\n                id='startDate'\r\n                name='startDate'\r\n                className='form-control'\r\n                onChange={date => setStartPicker(date[0])}\r\n                value={startPicker}\r\n                options={{\r\n                  enableTime: allDay === false,\r\n                  dateFormat: 'Y-m-d H:i'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='endDate'>\r\n                End Date\r\n              </Label>\r\n              <Flatpickr\r\n                required\r\n                id='endDate'\r\n                // tag={Flatpickr}\r\n                name='endDate'\r\n                className='form-control'\r\n                onChange={date => setEndPicker(date[0])}\r\n                value={endPicker}\r\n                options={{\r\n                  enableTime: allDay === false,\r\n                  dateFormat: 'Y-m-d H:i'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-switch mb-1'>\r\n              <Input\r\n                id='allDay'\r\n                type='switch'\r\n                className='me-1'\r\n                checked={allDay}\r\n                name='customSwitch'\r\n                onChange={e => setAllDay(e.target.checked)}\r\n              />\r\n              <Label className='form-label' for='allDay'>\r\n                All Day\r\n              </Label>\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='eventURL'>\r\n                URL for the Art (PNG, JPG, SVG, HTML)\r\n                (TIFF only available for Agency Networks)\r\n              </Label>\r\n              <Input\r\n                type='url'\r\n                id='eventURL'\r\n                value={url}\r\n                onChange={e => setUrl(e.target.value)}\r\n                placeholder='https://www.bitfari.org'\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='guests'>\r\n                Choose a Location\r\n              </Label>\r\n              <Select\r\n                isMulti\r\n                id='guests'\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                isClearable={false}\r\n                options={guestsOptions}\r\n                theme={selectThemeColors}\r\n                value={guests.length ? [...guests] : null}\r\n                onChange={data => setGuests([...data])}\r\n                components={{\r\n                  Option: GuestsComponent\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='location'>\r\n                Keywords\r\n              </Label>\r\n              <Input id='location' value={location} onChange={e => setLocation(e.target.value)} placeholder='' />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='description'>\r\n                Ad Copy\r\n              </Label>\r\n              <Input\r\n                type='textarea'\r\n                name='text'\r\n                id='description'\r\n                rows='3'\r\n                value={desc}\r\n                onChange={e => setDesc(e.target.value)}\r\n                placeholder='Place your Copy here'\r\n              />\r\n            </div>\r\n            <div className='d-flex mb-1'>\r\n              <EventActions />\r\n            </div>\r\n          </Form>\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddEventSidebar"]},"metadata":{},"sourceType":"module"}