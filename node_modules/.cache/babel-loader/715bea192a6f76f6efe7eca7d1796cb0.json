{"ast":null,"code":"import _slicedToArray from\"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// ** React Imports\nimport{Fragment,useState}from'react';// ** Third Party Components\nimport{Code}from'react-feather';// ** Reactstrap Imports\nimport{Card,CardHeader,CardBody,CardTitle,Collapse}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CardSnippet=function CardSnippet(props){// ** Props\nvar title=props.title,children=props.children,noBody=props.noBody,code=props.code,iconCode=props.iconCode;// ** State\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];// ** If user passes custom icon then render that else render default icon\nvar IconCode=iconCode?iconCode:/*#__PURE__*/_jsx(Code,{size:15});// ** To toggle collapse\nvar toggle=function toggle(){return setIsOpen(!isOpen);};// ** If user passes noBody then return <Fragment> else return <CardBody>\nvar Wrapper=noBody?Fragment:CardBody;return/*#__PURE__*/_jsxs(Card,{className:\"card-snippet\",children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"views cursor-pointer\",onClick:toggle,children:IconCode})]}),/*#__PURE__*/_jsx(Wrapper,{children:children}),/*#__PURE__*/_jsx(Collapse,{isOpen:isOpen,children:/*#__PURE__*/_jsx(CardBody,{children:code})})]});};export default CardSnippet;// ** PropTypes","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/@core/components/card-snippet/index.js"],"names":["Fragment","useState","Code","Card","CardHeader","CardBody","CardTitle","Collapse","CardSnippet","props","title","children","noBody","code","iconCode","isOpen","setIsOpen","IconCode","toggle","Wrapper"],"mappings":"yKAAA;AACA,OAASA,QAAT,CAAmBC,QAAnB,KAAmC,OAAnC,CAEA;AAEA,OAASC,IAAT,KAAqB,eAArB,CAEA;AACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,QAA3B,CAAqCC,SAArC,CAAgDC,QAAhD,KAAgE,YAAhE,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAC3B;AACA,GAAQC,CAAAA,KAAR,CAAoDD,KAApD,CAAQC,KAAR,CAAeC,QAAf,CAAoDF,KAApD,CAAeE,QAAf,CAAyBC,MAAzB,CAAoDH,KAApD,CAAyBG,MAAzB,CAAiCC,IAAjC,CAAoDJ,KAApD,CAAiCI,IAAjC,CAAuCC,QAAvC,CAAoDL,KAApD,CAAuCK,QAAvC,CAEA;AACA,cAA4Bb,QAAQ,CAAC,KAAD,CAApC,wCAAOc,MAAP,eAAeC,SAAf,eAEA;AACA,GAAMC,CAAAA,QAAQ,CAAGH,QAAQ,CAAGA,QAAH,cAAc,KAAC,IAAD,EAAM,IAAI,CAAE,EAAZ,EAAvC,CAEA;AACA,GAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMF,CAAAA,SAAS,CAAC,CAACD,MAAF,CAAf,EAAf,CAEA;AACA,GAAMI,CAAAA,OAAO,CAAGP,MAAM,CAAGZ,QAAH,CAAcK,QAApC,CAEA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAC,cAAhB,wBACE,MAAC,UAAD,yBACE,KAAC,SAAD,EAAW,GAAG,CAAC,IAAf,UAAqBK,KAArB,EADF,cAEE,YAAK,SAAS,CAAC,sBAAf,CAAsC,OAAO,CAAEQ,MAA/C,UACGD,QADH,EAFF,GADF,cAOE,KAAC,OAAD,WAAUN,QAAV,EAPF,cAQE,KAAC,QAAD,EAAU,MAAM,CAAEI,MAAlB,uBACE,KAAC,QAAD,WAAWF,IAAX,EADF,EARF,GADF,CAcD,CA9BD,CAgCA,cAAeL,CAAAA,WAAf,CAEA","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"]},"metadata":{},"sourceType":"module"}