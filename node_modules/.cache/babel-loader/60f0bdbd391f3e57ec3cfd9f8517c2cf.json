{"ast":null,"code":"// ** React Imports\nimport{useEffect,useState}from'react';// ** Third Party Components\nimport axios from'axios';// ** Custom Components\nimport TinyChartStats from'@components/widgets/stats/TinyChartStats';import{jsx as _jsx}from\"react/jsx-runtime\";const ProfitLineChart=_ref=>{let{info}=_ref;// ** State\nconst[data,setData]=useState(null);useEffect(()=>{axios.get('/card/card-statistics/profit-line-chart').then(res=>setData(res.data));return()=>setData(null);},[]);const options={chart:{toolbar:{show:false},zoom:{enabled:false}},grid:{borderColor:'#EBEBEB',strokeDashArray:5,xaxis:{lines:{show:true}},yaxis:{lines:{show:false}},padding:{top:-30,bottom:-10}},stroke:{width:3},colors:[info],series:[{data:[0,20,5,30,15,45]}],markers:{size:2,colors:info,strokeColors:info,strokeWidth:2,strokeOpacity:1,strokeDashArray:0,fillOpacity:1,discrete:[{seriesIndex:0,dataPointIndex:5,fillColor:'#ffffff',strokeColor:info,size:5}],shape:'circle',radius:2,hover:{size:3}},xaxis:{labels:{show:true,style:{fontSize:'0px'}},axisBorder:{show:false},axisTicks:{show:false}},yaxis:{show:false},tooltip:{x:{show:false}}};return data!==null?/*#__PURE__*/_jsx(TinyChartStats,{height:70,type:\"line\",options:options,title:data.title,stats:data.statistics,series:data.series}):null;};export default ProfitLineChart;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/react-version/full-version/src/views/ui-elements/cards/network/ProfitLineChart.js"],"names":["useEffect","useState","axios","TinyChartStats","ProfitLineChart","info","data","setData","get","then","res","options","chart","toolbar","show","zoom","enabled","grid","borderColor","strokeDashArray","xaxis","lines","yaxis","padding","top","bottom","stroke","width","colors","series","markers","size","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","labels","style","fontSize","axisBorder","axisTicks","tooltip","x","title","statistics"],"mappings":"AAAA;AACA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAOC,CAAAA,cAAP,KAA2B,0CAA3B,C,2CAEA,KAAMC,CAAAA,eAAe,CAAG,MAAc,IAAb,CAAEC,IAAF,CAAa,MACpC;AACA,KAAM,CAACC,IAAD,CAAOC,OAAP,EAAkBN,QAAQ,CAAC,IAAD,CAAhC,CAEAD,SAAS,CAAC,IAAM,CACdE,KAAK,CAACM,GAAN,CAAU,yCAAV,EAAqDC,IAArD,CAA0DC,GAAG,EAAIH,OAAO,CAACG,GAAG,CAACJ,IAAL,CAAxE,EACA,MAAO,IAAMC,OAAO,CAAC,IAAD,CAApB,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,KAAMI,CAAAA,OAAO,CAAG,CACdC,KAAK,CAAE,CACLC,OAAO,CAAE,CACPC,IAAI,CAAE,KADC,CADJ,CAILC,IAAI,CAAE,CACJC,OAAO,CAAE,KADL,CAJD,CADO,CASdC,IAAI,CAAE,CACJC,WAAW,CAAE,SADT,CAEJC,eAAe,CAAE,CAFb,CAGJC,KAAK,CAAE,CACLC,KAAK,CAAE,CACLP,IAAI,CAAE,IADD,CADF,CAHH,CAQJQ,KAAK,CAAE,CACLD,KAAK,CAAE,CACLP,IAAI,CAAE,KADD,CADF,CARH,CAaJS,OAAO,CAAE,CACPC,GAAG,CAAE,CAAC,EADC,CAEPC,MAAM,CAAE,CAAC,EAFF,CAbL,CATQ,CA2BdC,MAAM,CAAE,CACNC,KAAK,CAAE,CADD,CA3BM,CA8BdC,MAAM,CAAE,CAACvB,IAAD,CA9BM,CA+BdwB,MAAM,CAAE,CACN,CACEvB,IAAI,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAQ,CAAR,CAAW,EAAX,CAAe,EAAf,CAAmB,EAAnB,CADR,CADM,CA/BM,CAoCdwB,OAAO,CAAE,CACPC,IAAI,CAAE,CADC,CAEPH,MAAM,CAAEvB,IAFD,CAGP2B,YAAY,CAAE3B,IAHP,CAIP4B,WAAW,CAAE,CAJN,CAKPC,aAAa,CAAE,CALR,CAMPf,eAAe,CAAE,CANV,CAOPgB,WAAW,CAAE,CAPN,CAQPC,QAAQ,CAAE,CACR,CACEC,WAAW,CAAE,CADf,CAEEC,cAAc,CAAE,CAFlB,CAGEC,SAAS,CAAE,SAHb,CAIEC,WAAW,CAAEnC,IAJf,CAKE0B,IAAI,CAAE,CALR,CADQ,CARH,CAiBPU,KAAK,CAAE,QAjBA,CAkBPC,MAAM,CAAE,CAlBD,CAmBPC,KAAK,CAAE,CACLZ,IAAI,CAAE,CADD,CAnBA,CApCK,CA2DdX,KAAK,CAAE,CACLwB,MAAM,CAAE,CACN9B,IAAI,CAAE,IADA,CAEN+B,KAAK,CAAE,CACLC,QAAQ,CAAE,KADL,CAFD,CADH,CAOLC,UAAU,CAAE,CACVjC,IAAI,CAAE,KADI,CAPP,CAULkC,SAAS,CAAE,CACTlC,IAAI,CAAE,KADG,CAVN,CA3DO,CAyEdQ,KAAK,CAAE,CACLR,IAAI,CAAE,KADD,CAzEO,CA4EdmC,OAAO,CAAE,CACPC,CAAC,CAAE,CACDpC,IAAI,CAAE,KADL,CADI,CA5EK,CAAhB,CAmFA,MAAOR,CAAAA,IAAI,GAAK,IAAT,cACL,KAAC,cAAD,EACE,MAAM,CAAE,EADV,CAEE,IAAI,CAAC,MAFP,CAGE,OAAO,CAAEK,OAHX,CAIE,KAAK,CAAEL,IAAI,CAAC6C,KAJd,CAKE,KAAK,CAAE7C,IAAI,CAAC8C,UALd,CAME,MAAM,CAAE9C,IAAI,CAACuB,MANf,EADK,CASH,IATJ,CAUD,CAtGD,CAwGA,cAAezB,CAAAA,eAAf","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst ProfitLineChart = ({ info }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      zoom: {\r\n        enabled: false\r\n      }\r\n    },\r\n    grid: {\r\n      borderColor: '#EBEBEB',\r\n      strokeDashArray: 5,\r\n      xaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      padding: {\r\n        top: -30,\r\n        bottom: -10\r\n      }\r\n    },\r\n    stroke: {\r\n      width: 3\r\n    },\r\n    colors: [info],\r\n    series: [\r\n      {\r\n        data: [0, 20, 5, 30, 15, 45]\r\n      }\r\n    ],\r\n    markers: {\r\n      size: 2,\r\n      colors: info,\r\n      strokeColors: info,\r\n      strokeWidth: 2,\r\n      strokeOpacity: 1,\r\n      strokeDashArray: 0,\r\n      fillOpacity: 1,\r\n      discrete: [\r\n        {\r\n          seriesIndex: 0,\r\n          dataPointIndex: 5,\r\n          fillColor: '#ffffff',\r\n          strokeColor: info,\r\n          size: 5\r\n        }\r\n      ],\r\n      shape: 'circle',\r\n      radius: 2,\r\n      hover: {\r\n        size: 3\r\n      }\r\n    },\r\n    xaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n          fontSize: '0px'\r\n        }\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='line'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ProfitLineChart\r\n"]},"metadata":{},"sourceType":"module"}