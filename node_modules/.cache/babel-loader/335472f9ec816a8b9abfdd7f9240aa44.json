{"ast":null,"code":"// ** React Imports\nimport{useState}from'react';// ** Third Party Components\nimport InputNumber from'rc-input-number';import{Plus,Minus}from'react-feather';// ** Reactstrap Imports\nimport{Card,CardHeader,CardTitle,CardBody,Label,Button}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const NumberInputControlled=()=>{const[value,setValue]=useState(1);const[isDisabled,setIsDisabled]=useState(false);const[isReadOnly,setIsReadOnly]=useState(false);return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Controlled\"})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"controlled-number-input\",children:\"Controlled Input\"}),/*#__PURE__*/_jsx(InputNumber,{value:value,upHandler:/*#__PURE__*/_jsx(Plus,{}),disabled:isDisabled,readOnly:isReadOnly,downHandler:/*#__PURE__*/_jsx(Minus,{}),id:\"controlled-number-input\",onChange:value=>setValue(value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"demo-inline-spacing\",children:[/*#__PURE__*/_jsx(Button,{size:\"sm\",color:\"primary\",onClick:()=>setIsDisabled(!isDisabled),children:\"Toggle Disabled\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",color:\"primary\",onClick:()=>setIsReadOnly(!isReadOnly),children:\"Toggle ReadOnly\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",color:\"primary\",onClick:()=>setValue(10),children:\"Set Value to 10\"})]})]})]});};export default NumberInputControlled;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/bitfari-dev/www/src/views/forms/form-elements/number-input/NumberInputControlled.js"],"names":["useState","InputNumber","Plus","Minus","Card","CardHeader","CardTitle","CardBody","Label","Button","NumberInputControlled","value","setValue","isDisabled","setIsDisabled","isReadOnly","setIsReadOnly"],"mappings":"AAAA;AACA,OAASA,QAAT,KAAyB,OAAzB,CAEA;AACA,MAAOC,CAAAA,WAAP,KAAwB,iBAAxB,CACA,OAASC,IAAT,CAAeC,KAAf,KAA4B,eAA5B,CAEA;AACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,SAA3B,CAAsCC,QAAtC,CAAgDC,KAAhD,CAAuDC,MAAvD,KAAqE,YAArE,C,wFAEA,KAAMC,CAAAA,qBAAqB,CAAG,IAAM,CAClC,KAAM,CAACC,KAAD,CAAQC,QAAR,EAAoBZ,QAAQ,CAAC,CAAD,CAAlC,CACA,KAAM,CAACa,UAAD,CAAaC,aAAb,EAA8Bd,QAAQ,CAAC,KAAD,CAA5C,CACA,KAAM,CAACe,UAAD,CAAaC,aAAb,EAA8BhB,QAAQ,CAAC,KAAD,CAA5C,CAEA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,wBACE,KAAC,SAAD,EAAW,GAAG,CAAC,IAAf,wBADF,EADF,cAIE,MAAC,QAAD,yBACE,oCACE,KAAC,KAAD,EAAO,SAAS,CAAC,YAAjB,CAA8B,GAAG,CAAC,yBAAlC,8BADF,cAIE,KAAC,WAAD,EACE,KAAK,CAAEW,KADT,CAEE,SAAS,cAAE,KAAC,IAAD,IAFb,CAGE,QAAQ,CAAEE,UAHZ,CAIE,QAAQ,CAAEE,UAJZ,CAKE,WAAW,cAAE,KAAC,KAAD,IALf,CAME,EAAE,CAAC,yBANL,CAOE,QAAQ,CAAEJ,KAAK,EAAIC,QAAQ,CAACD,KAAD,CAP7B,EAJF,GADF,cAeE,aAAK,SAAS,CAAC,qBAAf,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,KAAK,CAAC,SAAxB,CAAkC,OAAO,CAAE,IAAMG,aAAa,CAAC,CAACD,UAAF,CAA9D,6BADF,cAIE,KAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,KAAK,CAAC,SAAxB,CAAkC,OAAO,CAAE,IAAMG,aAAa,CAAC,CAACD,UAAF,CAA9D,6BAJF,cAOE,KAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,KAAK,CAAC,SAAxB,CAAkC,OAAO,CAAE,IAAMH,QAAQ,CAAC,EAAD,CAAzD,6BAPF,GAfF,GAJF,GADF,CAkCD,CAvCD,CAwCA,cAAeF,CAAAA,qBAAf","sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label, Button } from 'reactstrap'\r\n\r\nconst NumberInputControlled = () => {\r\n  const [value, setValue] = useState(1)\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n  const [isReadOnly, setIsReadOnly] = useState(false)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Controlled</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div>\r\n          <Label className='form-label' for='controlled-number-input'>\r\n            Controlled Input\r\n          </Label>\r\n          <InputNumber\r\n            value={value}\r\n            upHandler={<Plus />}\r\n            disabled={isDisabled}\r\n            readOnly={isReadOnly}\r\n            downHandler={<Minus />}\r\n            id='controlled-number-input'\r\n            onChange={value => setValue(value)}\r\n          />\r\n        </div>\r\n        <div className='demo-inline-spacing'>\r\n          <Button size='sm' color='primary' onClick={() => setIsDisabled(!isDisabled)}>\r\n            Toggle Disabled\r\n          </Button>\r\n          <Button size='sm' color='primary' onClick={() => setIsReadOnly(!isReadOnly)}>\r\n            Toggle ReadOnly\r\n          </Button>\r\n          <Button size='sm' color='primary' onClick={() => setValue(10)}>\r\n            Set Value to 10\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputControlled\r\n"]},"metadata":{},"sourceType":"module"}