{"ast":null,"code":"import _slicedToArray from\"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// ** React Imports\nimport{Fragment,useState}from'react';// ** Reactstrap Imports\nimport{Button,Tooltip}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TooltipControlled=function TooltipControlled(){// ** State\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),tooltipOpen=_useState2[0],setTooltipOpen=_useState2[1];return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",id:\"ControlledExample\",children:\"Controlled\"}),/*#__PURE__*/_jsx(Tooltip,{placement:\"top\",isOpen:tooltipOpen,target:\"ControlledExample\",toggle:function toggle(){return setTooltipOpen(!tooltipOpen);},children:\"Hello World !\"})]});};export default TooltipControlled;","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/components/tooltips/TooltipControlled.js"],"names":["Fragment","useState","Button","Tooltip","TooltipControlled","tooltipOpen","setTooltipOpen"],"mappings":"yKAAA;AACA,OAASA,QAAT,CAAmBC,QAAnB,KAAmC,OAAnC,CAEA;AACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,YAAhC,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B;AACA,cAAsCH,QAAQ,CAAC,KAAD,CAA9C,wCAAOI,WAAP,eAAoBC,cAApB,eAEA,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,EAAE,CAAC,mBAA3B,wBADF,cAIE,KAAC,OAAD,EACE,SAAS,CAAC,KADZ,CAEE,MAAM,CAAED,WAFV,CAGE,MAAM,CAAC,mBAHT,CAIE,MAAM,CAAE,wBAAMC,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAJV,2BAJF,GADF,CAeD,CAnBD,CAoBA,cAAeD,CAAAA,iBAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Tooltip } from 'reactstrap'\r\n\r\nconst TooltipControlled = () => {\r\n  // ** State\r\n  const [tooltipOpen, setTooltipOpen] = useState(false)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button color='primary' id='ControlledExample'>\r\n        Controlled\r\n      </Button>\r\n      <Tooltip\r\n        placement='top'\r\n        isOpen={tooltipOpen}\r\n        target='ControlledExample'\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        Hello World !\r\n      </Tooltip>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default TooltipControlled\r\n"]},"metadata":{},"sourceType":"module"}