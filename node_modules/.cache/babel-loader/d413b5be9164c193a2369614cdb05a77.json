{"ast":null,"code":"var _jsxFileName = \"/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/forms/wizard/steps-with-validation/AccountDetails.js\",\n    _s = $RefreshSig$();\n\nimport * as yup from 'yup';\nimport { Fragment } from 'react';\nimport classnames from 'classnames';\nimport { isObjEmpty } from '@utils';\nimport { useForm } from 'react-hook-form';\nimport { ArrowLeft, ArrowRight } from 'react-feather';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Form, Label, Input, FormGroup, Row, Col, Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountDetails = _ref => {\n  _s();\n\n  let {\n    stepper,\n    type\n  } = _ref;\n  const SignupSchema = yup.object().shape({\n    [`username-${type}`]: yup.string().required(),\n    [`email-${type}`]: yup.string().email().required(),\n    [`password-val-${type}`]: yup.string().required(),\n    'confirm-password-val': yup.string().required().oneOf([yup.ref(`password-val-${type}`), null], 'Passwords must match')\n  });\n  const {\n    register,\n    errors,\n    handleSubmit,\n    trigger\n  } = useForm({\n    resolver: yupResolver(SignupSchema)\n  });\n\n  const onSubmit = () => {\n    trigger();\n\n    if (isObjEmpty(errors)) {\n      stepper.next();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-0\",\n        children: \"Screen Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: \"Enter Your Account Details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          tag: Col,\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: `username-${type}`,\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          tag: Col,\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: `email-${type}`,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: `email-${type}`,\n            id: `email-${type}`,\n            placeholder: \"yourbusiness@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group form-password-toggle col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: `password-val-${type}`,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: `password-val-${type}`,\n            id: `password-val-${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group form-password-toggle col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"confirm-password-val\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"confirm-password-val\",\n            id: \"confirm-password-val\",\n            innerRef: register({\n              required: true\n            }),\n            className: classnames({\n              'is-invalid': errors['confirm-password-val']\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"secondary\",\n          className: \"btn-prev\",\n          outline: true,\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n            size: 14,\n            className: \"align-middle mr-sm-25 mr-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle d-sm-inline-block d-none\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          type: \"submit\",\n          color: \"primary\",\n          className: \"btn-next\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle d-sm-inline-block d-none\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n            size: 14,\n            className: \"align-middle ml-sm-25 ml-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountDetails, \"R69JDp0S7jLKeMQPIkVcvcOHHVg=\", false, function () {\n  return [useForm];\n});\n\n_c = AccountDetails;\nexport default AccountDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountDetails\");","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/forms/wizard/steps-with-validation/AccountDetails.js"],"names":["yup","Fragment","classnames","isObjEmpty","useForm","ArrowLeft","ArrowRight","yupResolver","Form","Label","Input","FormGroup","Row","Col","Button","AccountDetails","stepper","type","SignupSchema","object","shape","string","required","email","oneOf","ref","register","errors","handleSubmit","trigger","resolver","onSubmit","next"],"mappings":";;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,eAAtC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,GAAxC,EAA6CC,GAA7C,EAAkDC,MAAlD,QAAgE,YAAhE;;;AAEA,MAAMC,cAAc,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAsB;AAC5C,QAAMC,YAAY,GAAGlB,GAAG,CAACmB,MAAJ,GAAaC,KAAb,CAAmB;AACtC,KAAE,YAAWH,IAAK,EAAlB,GAAsBjB,GAAG,CAACqB,MAAJ,GAAaC,QAAb,EADgB;AAEtC,KAAE,SAAQL,IAAK,EAAf,GAAmBjB,GAAG,CAACqB,MAAJ,GAAaE,KAAb,GAAqBD,QAArB,EAFmB;AAGtC,KAAE,gBAAeL,IAAK,EAAtB,GAA0BjB,GAAG,CAACqB,MAAJ,GAAaC,QAAb,EAHY;AAItC,4BAAwBtB,GAAG,CACxBqB,MADqB,GAErBC,QAFqB,GAGrBE,KAHqB,CAGf,CAACxB,GAAG,CAACyB,GAAJ,CAAS,gBAAeR,IAAK,EAA7B,CAAD,EAAkC,IAAlC,CAHe,EAG0B,sBAH1B;AAJc,GAAnB,CAArB;AAUA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA;AAAlC,MAA8CzB,OAAO,CAAC;AAC1D0B,IAAAA,QAAQ,EAAEvB,WAAW,CAACW,YAAD;AADqC,GAAD,CAA3D;;AAIA,QAAMa,QAAQ,GAAG,MAAM;AACrBF,IAAAA,OAAO;;AACP,QAAI1B,UAAU,CAACwB,MAAD,CAAd,EAAwB;AACtBX,MAAAA,OAAO,CAACgB,IAAR;AACD;AACF,GALD;;AAOA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAA,8BACE,QAAC,GAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAElB,GAAhB;AAAqB,UAAA,EAAE,EAAC,GAAxB;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,YAAjB;AAA8B,YAAA,GAAG,EAAG,YAAWI,IAAK,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,SAAD;AAAW,UAAA,GAAG,EAAEJ,GAAhB;AAAqB,UAAA,EAAE,EAAC,GAAxB;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,YAAjB;AAA8B,YAAA,GAAG,EAAG,SAAQI,IAAK,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAG,SAAQA,IAAK,EAFtB;AAGE,YAAA,EAAE,EAAG,SAAQA,IAAK,EAHpB;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,GAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,YAAjB;AAA8B,YAAA,GAAG,EAAG,gBAAeA,IAAK,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAG,gBAAeA,IAAK,EAF7B;AAGE,YAAA,EAAE,EAAG,gBAAeA,IAAK;AAH3B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,YAAjB;AAA8B,YAAA,GAAG,EAAC,sBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,sBAFP;AAGE,YAAA,EAAE,EAAC,sBAHL;AAIE,YAAA,QAAQ,EAAES,QAAQ,CAAC;AAAEJ,cAAAA,QAAQ,EAAE;AAAZ,aAAD,CAJpB;AAKE,YAAA,SAAS,EAAEpB,UAAU,CAAC;AAAE,4BAAcyB,MAAM,CAAC,sBAAD;AAAtB,aAAD;AALvB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eA2CE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA,gCACE,QAAC,MAAD,CAAQ,MAAR;AAAe,UAAA,KAAK,EAAC,WAArB;AAAiC,UAAA,SAAS,EAAC,UAA3C;AAAsD,UAAA,OAAO,MAA7D;AAA8D,UAAA,QAAQ,MAAtE;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAE,EAAjB;AAAqB,YAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,MAAD,CAAQ,MAAR;AAAe,UAAA,IAAI,EAAC,QAApB;AAA6B,UAAA,KAAK,EAAC,SAAnC;AAA6C,UAAA,SAAS,EAAC,UAAvD;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAE,EAAlB;AAAsB,YAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD,CApFD;;GAAMZ,c;UAWgDX,O;;;KAXhDW,c;AAsFN,eAAeA,cAAf","sourcesContent":["import * as yup from 'yup'\r\nimport { Fragment } from 'react'\r\nimport classnames from 'classnames'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, Label, Input, FormGroup, Row, Col, Button } from 'reactstrap'\r\n\r\nconst AccountDetails = ({ stepper, type }) => {\r\n  const SignupSchema = yup.object().shape({\r\n    [`username-${type}`]: yup.string().required(),\r\n    [`email-${type}`]: yup.string().email().required(),\r\n    [`password-val-${type}`]: yup.string().required(),\r\n    'confirm-password-val': yup\r\n      .string()\r\n      .required()\r\n      .oneOf([yup.ref(`password-val-${type}`), null], 'Passwords must match')\r\n  })\r\n\r\n  const { register, errors, handleSubmit, trigger } = useForm({\r\n    resolver: yupResolver(SignupSchema)\r\n  })\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Screen Details</h5>\r\n        <small className='text-muted'>Enter Your Account Details.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`username-${type}`}>\r\n              Username\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`email-${type}`}>\r\n              Email\r\n            </Label>\r\n            <Input\r\n              type='email'\r\n              name={`email-${type}`}\r\n              id={`email-${type}`}\r\n              placeholder='yourbusiness@email.com'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for={`password-val-${type}`}>\r\n              Password\r\n            </Label>\r\n            <Input\r\n              type='password'\r\n              name={`password-val-${type}`}\r\n              id={`password-val-${type}`}\r\n            />\r\n          </div>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for='confirm-password-val'>\r\n              Confirm Password\r\n            </Label>\r\n            <Input\r\n              type='password'\r\n              name='confirm-password-val'\r\n              id='confirm-password-val'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors['confirm-password-val'] })}\r\n            />\r\n          </div>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='secondary' className='btn-prev' outline disabled>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountDetails\r\n"]},"metadata":{},"sourceType":"module"}