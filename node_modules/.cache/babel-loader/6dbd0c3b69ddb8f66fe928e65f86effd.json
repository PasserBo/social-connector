{"ast":null,"code":"// ** React Imports\nimport{Link}from'react-router-dom';// ** Third Party Components\nimport classnames from'classnames';// ** Reactstrap Imports\nimport{Badge}from'reactstrap';// ** Vars\nimport{jsx as _jsx}from\"react/jsx-runtime\";var colors={support:'light-info',user:'light-success',manager:'light-warning',administrator:'light-primary','restricted-user':'light-danger'};export var columns=[{name:'Name',sortable:true,minWidth:'350px',cell:function cell(_ref){var name=_ref.name;return name;},selector:function selector(row){return row.name;}},{sortable:true,minWidth:'350px',name:'Assigned To',cell:function cell(_ref2){var assignedTo=_ref2.assignedTo;if(assignedTo){return assignedTo.map(function(assignee,index){var isLastBadge=assignedTo[assignedTo.length-1]===index;return/*#__PURE__*/_jsx(Link,{to:\"/apps/user/list\",className:classnames({'me-50':!isLastBadge}),children:/*#__PURE__*/_jsx(Badge,{pill:true,color:colors[assignee],className:\"text-capitalize\",children:assignee.replace('-',' ')})},\"\".concat(assignee,\"-\").concat(index));});}else{return null;}}},{sortable:true,minWidth:'350px',name:'Created Date',selector:function selector(row){return row.createdDate;},cell:function cell(_ref3){var createdDate=_ref3.createdDate;return createdDate;},sortFunction:function sortFunction(rowA,rowB){return new Date(rowB.createdDate)-new Date(rowA.createdDate);}}];","map":{"version":3,"sources":["/Users/jvledesma/Downloads/vuexy-admin-v8.0.0/react-version/Bootstrap5/full-version/src/views/apps/roles-permissions/permissions/columns.js"],"names":["Link","classnames","Badge","colors","support","user","manager","administrator","columns","name","sortable","minWidth","cell","selector","row","assignedTo","map","assignee","index","isLastBadge","length","replace","createdDate","sortFunction","rowA","rowB","Date"],"mappings":"AAAA;AACA,OAASA,IAAT,KAAqB,kBAArB,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;AACA,OAASC,KAAT,KAAsB,YAAtB,CAEA;2CACA,GAAMC,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,YADI,CAEbC,IAAI,CAAE,eAFO,CAGbC,OAAO,CAAE,eAHI,CAIbC,aAAa,CAAE,eAJF,CAKb,kBAAmB,cALN,CAAf,CAQA,MAAO,IAAMC,CAAAA,OAAO,CAAG,CACrB,CACEC,IAAI,CAAE,MADR,CAEEC,QAAQ,CAAE,IAFZ,CAGEC,QAAQ,CAAE,OAHZ,CAIEC,IAAI,CAAE,uBAAGH,CAAAA,IAAH,MAAGA,IAAH,OAAcA,CAAAA,IAAd,EAJR,CAKEI,QAAQ,CAAE,kBAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACL,IAAR,EALf,CADqB,CAQrB,CACEC,QAAQ,CAAE,IADZ,CAEEC,QAAQ,CAAE,OAFZ,CAGEF,IAAI,CAAE,aAHR,CAIEG,IAAI,CAAE,oBAAoB,IAAjBG,CAAAA,UAAiB,OAAjBA,UAAiB,CACxB,GAAIA,UAAJ,CAAgB,CACd,MAAOA,CAAAA,UAAU,CAACC,GAAX,CAAe,SAACC,QAAD,CAAWC,KAAX,CAAqB,CACzC,GAAMC,CAAAA,WAAW,CAAGJ,UAAU,CAACA,UAAU,CAACK,MAAX,CAAoB,CAArB,CAAV,GAAsCF,KAA1D,CACA,mBACE,KAAC,IAAD,EAAmC,EAAE,CAAC,iBAAtC,CAAwD,SAAS,CAAEjB,UAAU,CAAC,CAAE,QAAS,CAACkB,WAAZ,CAAD,CAA7E,uBACE,KAAC,KAAD,EAAO,IAAI,KAAX,CAAY,KAAK,CAAEhB,MAAM,CAACc,QAAD,CAAzB,CAAqC,SAAS,CAAC,iBAA/C,UACGA,QAAQ,CAACI,OAAT,CAAiB,GAAjB,CAAsB,GAAtB,CADH,EADF,YAAcJ,QAAd,aAA0BC,KAA1B,EADF,CAOD,CATM,CAAP,CAUD,CAXD,IAWO,CACL,MAAO,KAAP,CACD,CACF,CAnBH,CARqB,CA6BrB,CACER,QAAQ,CAAE,IADZ,CAEEC,QAAQ,CAAE,OAFZ,CAGEF,IAAI,CAAE,cAHR,CAIEI,QAAQ,CAAE,kBAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACQ,WAAR,EAJf,CAKEV,IAAI,CAAE,wBAAGU,CAAAA,WAAH,OAAGA,WAAH,OAAqBA,CAAAA,WAArB,EALR,CAMEC,YAAY,CAAE,sBAACC,IAAD,CAAOC,IAAP,CAAgB,CAC5B,MAAO,IAAIC,CAAAA,IAAJ,CAASD,IAAI,CAACH,WAAd,EAA6B,GAAII,CAAAA,IAAJ,CAASF,IAAI,CAACF,WAAd,CAApC,CACD,CARH,CA7BqB,CAAhB","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Vars\r\nconst colors = {\r\n  support: 'light-info',\r\n  user: 'light-success',\r\n  manager: 'light-warning',\r\n  administrator: 'light-primary',\r\n  'restricted-user': 'light-danger'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    sortable: true,\r\n    minWidth: '350px',\r\n    cell: ({ name }) => name,\r\n    selector: row => row.name\r\n  },\r\n  {\r\n    sortable: true,\r\n    minWidth: '350px',\r\n    name: 'Assigned To',\r\n    cell: ({ assignedTo }) => {\r\n      if (assignedTo) {\r\n        return assignedTo.map((assignee, index) => {\r\n          const isLastBadge = assignedTo[assignedTo.length - 1] === index\r\n          return (\r\n            <Link key={`${assignee}-${index}`} to='/apps/user/list' className={classnames({ 'me-50': !isLastBadge })}>\r\n              <Badge pill color={colors[assignee]} className='text-capitalize'>\r\n                {assignee.replace('-', ' ')}\r\n              </Badge>\r\n            </Link>\r\n          )\r\n        })\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n  },\r\n  {\r\n    sortable: true,\r\n    minWidth: '350px',\r\n    name: 'Created Date',\r\n    selector: row => row.createdDate,\r\n    cell: ({ createdDate }) => createdDate,\r\n    sortFunction: (rowA, rowB) => {\r\n      return new Date(rowB.createdDate) - new Date(rowA.createdDate)\r\n    }\r\n  }\r\n]\r\n"]},"metadata":{},"sourceType":"module"}