{"ast":null,"code":"import React from'react';import{Button}from'reactstrap';import{showConnect}from'@stacks/connect';import{makeSTXTokenTransfer,broadcastTransaction,AnchorMode}from'@stacks/transactions';import{Session}from'../../../auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const PaymentInfo=()=>{async function payAndPublish(val){const txOptions={recipient:'ST32XCD69XPS3GKDEXAQ29PJRDSD5AR643GY0C3Q5',amount:val,senderKey:'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',network:'testnet',// for mainnet, use 'mainnet'\nmemo:'Budget for Bitfari Ads',nonce:0n,// set a nonce manually if you don't want builder to fetch from a Stacks node\nfee:200n,// set a tx fee if you don't want the builder to estimate\nanchorMode:AnchorMode.Any};// to see the raw serialized tx\n//const serializedTx = transaction.serialize().toString('hex')\n// broadcasting transaction to the specified network\n//const broadcastResponse = await broadcastTransaction(transaction)\nconst send=await broadcastTransaction(makeSTXTokenTransfer(txOptions));showConnect({appDetails:{name:'Bitfari',icon:'https://bitfari.com/assets/logo-hiro-wallet.png'},redirectTo:'/',onFinish:()=>{window.location.reload();},userSession:Session});const txId=send.txid;return txId;}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"center\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Booked Ads Ready for Publishing:\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Ad Title: Place Your Ad Here!\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Network: Billboards.btc\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Duration: 1 Day\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Please Provide a Budget (FARI):\"}),/*#__PURE__*/_jsx(\"input\",{name:\"budget\",id:\"budget\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",id:\"pay\",onClick:()=>payAndPublish(budget),children:\"Pay and Publish\"})]})});};export default PaymentInfo;","map":{"version":3,"sources":["/Users/jvledesma/www-bitfari/src/views/pages/payment/PaymentInfo.js"],"names":["React","Button","showConnect","makeSTXTokenTransfer","broadcastTransaction","AnchorMode","Session","PaymentInfo","payAndPublish","val","txOptions","recipient","amount","senderKey","network","memo","nonce","fee","anchorMode","Any","send","appDetails","name","icon","redirectTo","onFinish","window","location","reload","userSession","txId","txid","budget"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,YAAvB,CACA,OAASC,WAAT,KAA4B,iBAA5B,CACA,OAASC,oBAAT,CAA+BC,oBAA/B,CAAqDC,UAArD,KAAuE,sBAAvE,CACA,OAASC,OAAT,KAAwB,eAAxB,C,6IAEA,KAAMC,CAAAA,WAAW,CAAG,IAAM,CAE1B,cAAeC,CAAAA,aAAf,CAA6BC,GAA7B,CAAkC,CAEhC,KAAMC,CAAAA,SAAS,CAAG,CAChBC,SAAS,CAAE,2CADK,CAEhBC,MAAM,CAAEH,GAFQ,CAGhBI,SAAS,CAAE,oEAHK,CAIhBC,OAAO,CAAE,SAJO,CAII;AACpBC,IAAI,CAAE,wBALU,CAMhBC,KAAK,CAAE,EANS,CAML;AACXC,GAAG,CAAE,IAPW,CAOL;AACXC,UAAU,CAAEb,UAAU,CAACc,GARP,CAAlB,CAWA;AACA;AAEA;AACA;AAGA,KAAMC,CAAAA,IAAI,CAAG,KAAMhB,CAAAA,oBAAoB,CAACD,oBAAoB,CAACO,SAAD,CAArB,CAAvC,CAEAR,WAAW,CAAC,CACVmB,UAAU,CAAE,CACVC,IAAI,CAAE,SADI,CAEVC,IAAI,CAAE,iDAFI,CADF,CAKVC,UAAU,CAAE,GALF,CAMVC,QAAQ,CAAE,IAAM,CACdC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACD,CARS,CASVC,WAAW,CAAEvB,OATH,CAAD,CAAX,CAYA,KAAMwB,CAAAA,IAAI,CAAGV,IAAI,CAACW,IAAlB,CAEA,MAAOD,CAAAA,IAAP,CACC,CAEA,mBACW,sCACA,uCAEA,wDAFA,cAGA,aAHA,cAKA,qDALA,cAMA,+CANA,cAOA,uCAPA,cASA,uDATA,cAUA,cAAO,IAAI,CAAC,QAAZ,CAAqB,EAAE,CAAC,QAAxB,EAVA,cAYA,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,EAAE,CAAC,KAA3B,CAAiC,OAAO,CAAE,IAAMtB,aAAa,CAACwB,MAAD,CAA7D,6BAZA,GADA,EADX,CAmBC,CA5DJ,CA8DA,cAAezB,CAAAA,WAAf","sourcesContent":["import React from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { showConnect } from '@stacks/connect'\r\nimport { makeSTXTokenTransfer, broadcastTransaction, AnchorMode } from '@stacks/transactions'\r\nimport { Session } from '../../../auth'\r\n\r\nconst PaymentInfo = () => {\r\n\r\nasync function payAndPublish(val) {\r\n\r\n  const txOptions = {\r\n    recipient: 'ST32XCD69XPS3GKDEXAQ29PJRDSD5AR643GY0C3Q5',\r\n    amount: val,\r\n    senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\r\n    network: 'testnet', // for mainnet, use 'mainnet'\r\n    memo: 'Budget for Bitfari Ads',\r\n    nonce: 0n, // set a nonce manually if you don't want builder to fetch from a Stacks node\r\n    fee: 200n, // set a tx fee if you don't want the builder to estimate\r\n    anchorMode: AnchorMode.Any\r\n  }\r\n\r\n  // to see the raw serialized tx\r\n  //const serializedTx = transaction.serialize().toString('hex')\r\n  \r\n  // broadcasting transaction to the specified network\r\n  //const broadcastResponse = await broadcastTransaction(transaction)\r\n\r\n\r\n  const send = await broadcastTransaction(makeSTXTokenTransfer(txOptions))\r\n\r\n  showConnect({\r\n    appDetails: {\r\n      name: 'Bitfari',\r\n      icon: 'https://bitfari.com/assets/logo-hiro-wallet.png'\r\n    },\r\n    redirectTo: '/',\r\n    onFinish: () => { \r\n      window.location.reload()\r\n    },\r\n    userSession: Session\r\n  })\r\n\r\n  const txId = send.txid\r\n\r\n  return txId\r\n  }\r\n\r\n   return (\r\n              <>\r\n              <center>\r\n\r\n              <h2>Booked Ads Ready for Publishing:</h2>\r\n              <hr/>\r\n\r\n              <h3>Ad Title: Place Your Ad Here!</h3>\r\n              <h4>Network: Billboards.btc</h4>\r\n              <h4>Duration: 1 Day</h4>\r\n\r\n              <h4>Please Provide a Budget (FARI):</h4>  \r\n              <input name=\"budget\" id=\"budget\" />\r\n\r\n              <Button color='primary' id=\"pay\" onClick={() => payAndPublish(budget)}>\r\n                Pay and Publish</Button>\r\n              </center>  \r\n              </>         \r\n          )\r\n   }\r\n\r\nexport default PaymentInfo\r\n"]},"metadata":{},"sourceType":"module"}