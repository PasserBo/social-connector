{"code":"(this[\"webpackJsonpvuexy-react-admin-dashboard\"]=this[\"webpackJsonpvuexy-react-admin-dashboard\"]||[]).push([[1],{934:function(e,t,r){\"use strict\";r.d(t,\"a\",(function(){return L})),r.d(t,\"b\",(function(){return R})),r.d(t,\"c\",(function(){return f})),r.d(t,\"d\",(function(){return W})),r.d(t,\"e\",(function(){return ke}));var s=r(0),n=e=>\"checkbox\"===e.type,i=e=>e instanceof Date,a=e=>null==e;const o=e=>\"object\"===typeof e;var u=e=>!a(e)&&!Array.isArray(e)&&o(e)&&!i(e),l=(e,t)=>[...e].some((e=>(e=>e.substring(0,e.search(/.\\d/))||e)(t)===e)),c=e=>e.filter(Boolean),d=e=>void 0===e,f=(e,t,r)=>{if(u(e)&&t){const s=c(t.split(/[,[\\].]+?/)).reduce(((e,t)=>a(e)?e:e[t]),e);return d(s)||s===e?d(e[t])?r:e[t]:s}};const g=\"blur\",m=\"change\",y=\"onBlur\",b=\"onChange\",h=\"onSubmit\",v=\"onTouched\",p=\"all\",_=\"max\",j=\"min\",O=\"maxLength\",V=\"minLength\",w=\"pattern\",F=\"required\",S=\"validate\";var A=(e,t)=>{const r=Object.assign({},e);return delete r[t],r};const x=s.createContext(null),k=()=>s.useContext(x);var D=function(e,t,r){let s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];function n(n){return()=>{if(n in e)return t[n]!==p&&(t[n]=!s||p),r&&(r[n]=!0),e[n]}}const i={};for(const a in e)Object.defineProperty(i,a,{get:n(a)});return i},E=e=>u(e)&&!Object.keys(e).length,C=(e,t,r)=>{const s=A(e,\"name\");return E(s)||Object.keys(s).length>=Object.keys(t).length||Object.keys(s).find((e=>t[e]===(!r||p)))},T=e=>Array.isArray(e)?e:[e],U=(e,t)=>!e||!t||T(e).some((e=>e&&(e.startsWith(t)||t.startsWith(e))));const B=e=>{e.current&&(e.current.unsubscribe(),e.current=void 0)};function N(e){const t=s.useRef(),r=s.useRef((()=>{}));r.current=(e=>{let{_unsubscribe:t,props:r}=e;return()=>{r.disabled?B(t):t.current||(t.current=r.subject.subscribe({next:r.callback}))}})({_unsubscribe:t,props:e}),!e.skipEarlySubscription&&r.current(),s.useEffect((()=>(r.current(),()=>B(t))),[])}function M(e){const t=k(),{name:r,control:i=t.control,shouldUnregister:a}=e,[o,c]=s.useState(f(i._formValues,r,f(i._defaultValues,r,e.defaultValue))),d=function(e){const t=k(),{control:r=t.control,disabled:n,name:i}=e||{},[a,o]=s.useState(r._formState),u=s.useRef({isDirty:!1,dirtyFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1}),l=s.useRef(i);return l.current=i,N({disabled:n,callback:e=>U(l.current,e.name)&&C(e,u.current)&&o(Object.assign(Object.assign({},r._formState),e)),subject:r._subjects.state,skipEarlySubscription:!0}),D(a,r._proxyFormState,u.current,!1)}({control:i||t.control,name:r}),y=s.useRef(r);y.current=r,N({subject:i._subjects.control,callback:e=>(!e.name||y.current===e.name)&&c(f(e.values,y.current)),skipEarlySubscription:!0});const b=i.register(r,Object.assign(Object.assign({},e.rules),{value:o})),h=s.useCallback(((e,t)=>{const r=f(i._fields,e);r&&(r._f.mount=t)}),[i]);return s.useEffect((()=>(h(r,!0),()=>{const e=i._options.shouldUnregister||a;(l(i._names.array,r)?e&&!i._stateFlags.action:e)?i.unregister(r):h(r,!1)})),[r,i,a,h]),{field:{onChange:e=>{const t=(e=>u(e)&&e.target?n(e.target)?e.target.checked:e.target.value:e)(e);c(t),b.onChange({target:{value:t,name:r},type:m})},onBlur:()=>{b.onBlur({target:{value:o,name:r},type:g})},name:r,value:o,ref:e=>{const t=f(i._fields,r);e&&t&&e.focus&&(t._f.ref={focus:()=>e.focus(),setCustomValidity:t=>e.setCustomValidity(t),reportValidity:()=>e.reportValidity()})}},formState:d,fieldState:{invalid:!!f(d.errors,r),isDirty:!!f(d.dirtyFields,r),isTouched:!!f(d.touchedFields,r),error:f(d.errors,r)}}}const L=e=>e.render(M(e));var R=(e,t,r,s,n)=>t?Object.assign(Object.assign({},r[e]),{types:Object.assign(Object.assign({},r[e]&&r[e].types?r[e].types:{}),{[s]:n||!0})}):{},q=e=>/^\\w*$/.test(e),I=e=>c(e.replace(/[\"|']|\\]/g,\"\").split(/\\.|\\[/));function W(e,t,r){let s=-1;const n=q(t)?[t]:I(t),i=n.length,a=i-1;for(;++s<i;){const t=n[s];let i=r;if(s!==a){const r=e[t];i=u(r)||Array.isArray(r)?r:isNaN(+n[s+1])?{}:[]}e[t]=i,e=e[t]}return e}const H=(e,t,r)=>{for(const s of r||Object.keys(e)){const r=f(e,s);if(r){const e=r._f,s=A(r,\"_f\");if(e&&t(e.name)){if(e.ref.focus&&d(e.ref.focus()))break;if(e.refs){e.refs[0].focus();break}}else u(s)&&H(s,t)}}};var J=e=>\"function\"===typeof e;function P(e){let t;const r=Array.isArray(e);if(e instanceof Date)t=new Date(e);else if(e instanceof Set)t=new Set(e);else{if(!r&&!u(e))return e;t=r?[]:{};for(const r in e){if(J(e[r])){t=e;break}t[r]=P(e[r])}}return t}function $(){let e=[];return{get observers(){return e},next:t=>{for(const r of e)r.next(t)},subscribe:t=>{const r=function(){let e=[];return{add:t=>{e.push(t)},unsubscribe:()=>{for(const t of e)t();e=[]}}}(),s=function(e,t){let r=!1;return t.add((()=>r=!0)),{next:t=>{r||e.next(t)}}}(t,r);return e.push(s),r},unsubscribe:()=>{e=[]}}}var z=e=>a(e)||!o(e);function G(e,t){if(z(e)||z(t))return e===t;if(i(e)&&i(t))return e.getTime()===t.getTime();const r=Object.keys(e),s=Object.keys(t);if(r.length!==s.length)return!1;for(const n of r){const r=e[n];if(!s.includes(n))return!1;if(\"ref\"!==n){const e=t[n];if(i(r)&&i(e)||u(r)&&u(e)||Array.isArray(r)&&Array.isArray(e)?!G(r,e):r!==e)return!1}}return!0}var K=e=>({isOnSubmit:!e||e===h,isOnBlur:e===y,isOnChange:e===b,isOnAll:e===p,isOnTouch:e===v}),Q=e=>\"boolean\"===typeof e,X=e=>\"file\"===e.type,Y=e=>e instanceof HTMLElement,Z=e=>\"select-multiple\"===e.type,ee=e=>\"radio\"===e.type,te=e=>ee(e)||n(e),re=e=>\"string\"===typeof e,se=\"undefined\"!==typeof window&&\"undefined\"!==typeof window.HTMLElement&&\"undefined\"!==typeof document,ne=e=>Y(e)&&document.contains(e);function ie(e,t){const r=q(t)?[t]:I(t),s=1==r.length?e:function(e,t){const r=t.slice(0,-1).length;let s=0;for(;s<r;)e=d(e)?s++:e[t[s++]];return e}(e,r),n=r[r.length-1];let i;s&&delete s[n];for(let a=0;a<r.slice(0,-1).length;a++){let t,s=-1;const n=r.slice(0,-(a+1)),o=n.length-1;for(a>0&&(i=e);++s<n.length;){const r=n[s];t=t?t[r]:e[r],o===s&&(u(t)&&E(t)||Array.isArray(t)&&!t.filter((e=>u(e)&&!E(e)||Q(e))).length)&&(i?delete i[r]:delete e[r]),i=t}}return e}const ae={value:!1,isValid:!1},oe={value:!0,isValid:!0};var ue=e=>{if(Array.isArray(e)){if(e.length>1){const t=e.filter((e=>e&&e.checked&&!e.disabled)).map((e=>e.value));return{value:t,isValid:!!t.length}}return e[0].checked&&!e[0].disabled?e[0].attributes&&!d(e[0].attributes.value)?d(e[0].value)||\"\"===e[0].value?oe:{value:e[0].value,isValid:!0}:oe:ae}return ae},le=(e,t)=>{let{valueAsNumber:r,valueAsDate:s,setValueAs:n}=t;return d(e)?e:r?\"\"===e?NaN:+e:s?new Date(e):n?n(e):e};const ce={isValid:!1,value:null};var de=e=>Array.isArray(e)?e.reduce(((e,t)=>t&&t.checked&&!t.disabled?{isValid:!0,value:t.value}:e),ce):ce;function fe(e){const t=e.ref;if(!(e.refs?e.refs.every((e=>e.disabled)):t.disabled))return X(t)?t.files:ee(t)?de(e.refs).value:Z(t)?[...t.selectedOptions].map((e=>{let{value:t}=e;return t})):n(t)?ue(e.refs).value:le(d(t.value)?e.ref.value:t.value,e)}var ge=(e,t,r,s)=>{const n={};for(const i of e){const e=f(t,i);e&&W(n,i,e._f)}return{criteriaMode:r,names:[...e],fields:n,shouldUseNativeValidation:s}},me=e=>e.mount&&(e.required||e.min||e.max||e.maxLength||e.minLength||e.pattern||e.validate);function ye(e,t,r){const s=f(e,r);if(s||q(r))return{error:s,name:r};const n=r.split(\".\");for(;n.length;){const s=n.join(\".\"),i=f(t,s),a=f(e,s);if(i&&!Array.isArray(i)&&r!==s)return{name:r};if(a&&a.type)return{name:s,error:a};n.pop()}return{name:r}}function be(e,t){if(z(e)||z(t))return t;for(const s in t){const n=e[s],i=t[s];try{e[s]=u(n)&&u(i)||Array.isArray(n)&&Array.isArray(i)?be(n,i):i}catch(r){}}return e}function he(e,t,r,s,n){let i=-1;for(;++i<e.length;){for(const s in e[i])Array.isArray(e[i][s])?(!r[i]&&(r[i]={}),r[i][s]=[],he(e[i][s],f(t[i]||{},s,[]),r[i][s],r[i],s)):!a(t)&&G(f(t[i]||{},s),e[i][s])?W(r[i]||{},s):r[i]=Object.assign(Object.assign({},r[i]),{[s]:!0});s&&!r.length&&delete s[n]}return r}var ve=(e,t,r)=>be(he(e,t,r.slice(0,e.length)),he(t,e,r.slice(0,e.length))),pe=(e,t,r,s,n)=>!n.isOnAll&&(!r&&n.isOnTouch?!(t||e):(r?s.isOnBlur:n.isOnBlur)?!e:!(r?s.isOnChange:n.isOnChange)||e),_e=(e,t)=>!c(f(e,t,[])).length&&ie(e,t),je=e=>re(e)||s.isValidElement(e),Oe=e=>e instanceof RegExp;function Ve(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"validate\";if(je(e)||Array.isArray(e)&&e.every(je)||Q(e)&&!e)return{type:r,message:je(e)?e:\"\",ref:t}}var we=e=>u(e)&&!Oe(e)?e:{value:e,message:\"\"},Fe=async(e,t,r,s)=>{const{ref:i,refs:o,required:l,maxLength:c,minLength:d,min:f,max:g,pattern:m,validate:y,name:b,valueAsNumber:h,mount:v,disabled:p}=e._f;if(!v||p)return{};const A=o?o[0]:i,x=e=>{s&&A.reportValidity&&(A.setCustomValidity(Q(e)?\"\":e||\" \"),A.reportValidity())},k={},D=ee(i),C=n(i),T=D||C,U=(h||X(i))&&!i.value||\"\"===t||Array.isArray(t)&&!t.length,B=R.bind(null,b,r,k),N=function(e,t,r){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:O,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:V;const a=e?t:r;k[b]=Object.assign({type:e?s:n,message:a,ref:i},B(e?s:n,a))};if(l&&(!T&&(U||a(t))||Q(t)&&!t||C&&!ue(o).isValid||D&&!de(o).isValid)){const{value:e,message:t}=je(l)?{value:!!l,message:l}:we(l);if(e&&(k[b]=Object.assign({type:F,message:t,ref:A},B(F,t)),!r))return x(t),k}if(!U&&(!a(f)||!a(g))){let e,s;const n=we(g),o=we(f);if(isNaN(t)){const r=i.valueAsDate||new Date(t);re(n.value)&&(e=r>new Date(n.value)),re(o.value)&&(s=r<new Date(o.value))}else{const r=i.valueAsNumber||parseFloat(t);a(n.value)||(e=r>n.value),a(o.value)||(s=r<o.value)}if((e||s)&&(N(!!e,n.message,o.message,_,j),!r))return x(k[b].message),k}if((c||d)&&!U&&re(t)){const e=we(c),s=we(d),n=!a(e.value)&&t.length>e.value,i=!a(s.value)&&t.length<s.value;if((n||i)&&(N(n,e.message,s.message),!r))return x(k[b].message),k}if(m&&!U&&re(t)){const{value:e,message:s}=we(m);if(Oe(e)&&!t.match(e)&&(k[b]=Object.assign({type:w,message:s,ref:i},B(w,s)),!r))return x(s),k}if(y)if(J(y)){const e=Ve(await y(t),A);if(e&&(k[b]=Object.assign(Object.assign({},e),B(S,e.message)),!r))return x(e.message),k}else if(u(y)){let e={};for(const s in y){if(!E(e)&&!r)break;const n=Ve(await y[s](t),A,s);n&&(e=Object.assign(Object.assign({},n),B(s,n.message)),x(n.message),r&&(k[b]=e))}if(!E(e)&&(k[b]=Object.assign({ref:A},e),!r))return k}return x(!0),k};const Se={mode:h,reValidateMode:b,shouldFocusError:!0},Ae=\"undefined\"===typeof window;function xe(){let e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=Object.assign(Object.assign({},Se),t),s={isDirty:!1,isValidating:!1,dirtyFields:{},isSubmitted:!1,submitCount:0,touchedFields:{},isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,errors:{}},o={},u=r.defaultValues||{},m=r.shouldUnregister?{}:P(u),y={action:!1,mount:!1,watch:!1},b={mount:new Set,unMount:new Set,array:new Set,watch:new Set},h=0,v={};const _={isDirty:!1,dirtyFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1},j={watch:$(),control:$(),array:$(),state:$()},O=K(r.mode),V=K(r.reValidateMode),w=r.criteriaMode===p,F=(e,t)=>function(){for(var r=arguments.length,s=new Array(r),n=0;n<r;n++)s[n]=arguments[n];clearTimeout(h),h=window.setTimeout((()=>e(...s)),t)},S=(e,t)=>!t&&(b.watchAll||b.watch.has(e)||b.watch.has((e.match(/\\w+/)||[])[0])),x=async e=>{let t=!1;return _.isValid&&(t=r.resolver?E((await M()).errors):await R(o,!0),e||t===s.isValid||(s.isValid=t,j.state.next({isValid:t}))),t},k=function(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];if(y.action=!0,a&&f(o,e)){const s=t(f(o,e),r.argA,r.argB);i&&W(o,e,s)}if(Array.isArray(f(s.errors,e))){const n=t(f(s.errors,e),r.argA,r.argB);i&&W(s.errors,e,n),_e(s.errors,e)}if(_.touchedFields&&f(s.touchedFields,e)){const n=t(f(s.touchedFields,e),r.argA,r.argB);i&&W(s.touchedFields,e,n),_e(s.touchedFields,e)}(_.dirtyFields||_.isDirty)&&B(e,n),j.state.next({isDirty:I(e,n),dirtyFields:s.dirtyFields,errors:s.errors,isValid:s.isValid})},D=(e,t)=>(W(s.errors,e,t),j.state.next({errors:s.errors})),C=(e,t,r)=>{const s=f(o,e);if(s){const n=f(m,e,f(u,e));d(n)||r&&r.defaultChecked||t?W(m,e,t?n:fe(s._f)):oe(e,n)}y.mount&&x()},U=function(e,t,r){let n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i=!1;const a={name:e},o=f(s.touchedFields,e);if(_.isDirty){const e=s.isDirty;s.isDirty=a.isDirty=I(),i=e!==a.isDirty}if(_.dirtyFields&&!r){const r=f(s.dirtyFields,e);G(f(u,e),t)?ie(s.dirtyFields,e):W(s.dirtyFields,e,!0),a.dirtyFields=s.dirtyFields,i=i||r!==f(s.dirtyFields,e)}return r&&!o&&(W(s.touchedFields,e,r),a.touchedFields=s.touchedFields,i=i||_.touchedFields&&o!==r),i&&n&&j.state.next(a),i?a:{}},B=(e,t)=>(W(s.dirtyFields,e,ve(t,f(u,e,[]),f(s.dirtyFields,e,[]))),_e(s.dirtyFields,e)),N=async(r,n,i,a,o)=>{const u=f(s.errors,n),l=_.isValid&&s.isValid!==i;if(t.delayError&&a?(e=e||F(D,t.delayError),e(n,a)):(clearTimeout(h),a?W(s.errors,n,a):ie(s.errors,n)),((a?!G(u,a):u)||!E(o)||l)&&!r){const e=Object.assign(Object.assign(Object.assign({},o),l?{isValid:i}:{}),{errors:s.errors,name:n});s=Object.assign(Object.assign({},s),e),j.state.next(e)}v[n]--,_.isValidating&&!v[n]&&(j.state.next({isValidating:!1}),v={})},M=async e=>r.resolver?await r.resolver(Object.assign({},m),r.context,ge(e||b.mount,o,r.criteriaMode,r.shouldUseNativeValidation)):{},L=async e=>{const{errors:t}=await M();if(e)for(const r of e){const e=f(t,r);e?W(s.errors,r,e):ie(s.errors,r)}else s.errors=t;return t},R=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{valid:!0};for(const i in e){const a=e[i];if(a){const e=a._f,i=A(a,\"_f\");if(e){const i=await Fe(a,f(m,e.name),w,r.shouldUseNativeValidation);if(i[e.name]&&(n.valid=!1,t))break;t||(i[e.name]?W(s.errors,e.name,i[e.name]):ie(s.errors,e.name))}i&&await R(i,t,n)}}return n.valid},q=()=>{for(const e of b.unMount){const t=f(o,e);t&&(t._f.refs?t._f.refs.every((e=>!ne(e))):!ne(t._f.ref))&&we(e)}b.unMount=new Set},I=(e,t)=>(e&&t&&W(m,e,t),!G(he(),u)),ee=(e,t,r)=>{const s=Object.assign({},y.mount?m:d(t)?u:re(e)?{[e]:t}:t);if(e){const t=T(e).map((e=>(r&&b.watch.add(e),f(s,e))));return Array.isArray(e)?t:t[0]}return r&&(b.watchAll=!0),s},ae=e=>f(y.mount?m:u,e,t.shouldUnregister?f(u,e,[]):[]),oe=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},s=arguments.length>3?arguments[3]:void 0;const i=f(o,e);let u=t;if(i){const r=i._f;r&&(W(m,e,le(t,r)),u=se&&Y(r.ref)&&a(t)?\"\":t,X(r.ref)&&!re(u)?r.ref.files=u:Z(r.ref)?[...r.ref.options].forEach((e=>e.selected=u.includes(e.value))):r.refs?n(r.ref)?r.refs.length>1?r.refs.forEach((e=>e.checked=Array.isArray(u)?!!u.find((t=>t===e.value)):u===e.value)):r.refs[0].checked=!!u:r.refs.forEach((e=>e.checked=e.value===u)):r.ref.value=u,s&&j.control.next({values:m,name:e}))}(r.shouldDirty||r.shouldTouch)&&U(e,u,r.shouldTouch),r.shouldValidate&&be(e)},ue=(e,t,r)=>{for(const s in t){const n=t[s],a=\"\".concat(e,\".\").concat(s),u=f(o,a);!b.array.has(e)&&z(n)&&(!u||u._f)||i(n)?oe(a,n,r,!0):ue(a,n,r)}},ce=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=f(o,e),i=b.array.has(e);W(m,e,t),i?(j.array.next({name:e,values:m}),(_.isDirty||_.dirtyFields)&&r.shouldDirty&&(B(e,t),j.state.next({name:e,dirtyFields:s.dirtyFields,isDirty:I(e,t)}))):!n||n._f||a(t)?oe(e,t,r,!0):ue(e,t,r),S(e)&&j.state.next({}),j.watch.next({name:e})},de=async e=>{const t=e.target;let n=t.name;const i=f(o,n);if(i){let a,u;const l=t.type?fe(i._f):t.value,c=e.type===g,d=!me(i._f)&&!r.resolver&&!f(s.errors,n)&&!i._f.deps||pe(c,f(s.touchedFields,n),s.isSubmitted,V,O),y=S(n,c);c?i._f.onBlur&&i._f.onBlur(e):i._f.onChange&&i._f.onChange(e),W(m,n,l);const b=U(n,l,c,!1),h=!E(b)||y;if(!c&&j.watch.next({name:n,type:e.type}),d)return h&&j.state.next(Object.assign({name:n},y?{}:b));if(!c&&y&&j.state.next({}),v[n]=(v[n],1),_.isValidating&&j.state.next({isValidating:!0}),r.resolver){const{errors:e}=await M([n]),t=ye(s.errors,o,n),r=ye(e,o,t.name||n);a=r.error,n=r.name,u=E(e)}else a=(await Fe(i,f(m,n),w,r.shouldUseNativeValidation))[n],u=await x(!0);i._f.deps&&be(i._f.deps),N(!1,n,u,a,b)}},be=async function(e){let t,n,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const a=T(e);if(j.state.next({isValidating:!0}),r.resolver){const r=await L(d(e)?e:a);t=E(r),n=e?!a.some((e=>f(r,e))):t}else e?(n=(await Promise.all(a.map((async e=>{const t=f(o,e);return await R(t&&t._f?{[e]:t}:t)})))).every(Boolean),x()):n=t=await R(o);return j.state.next(Object.assign(Object.assign(Object.assign({},!re(e)||_.isValid&&t!==s.isValid?{}:{name:e}),r.resolver?{isValid:t}:{}),{errors:s.errors,isValidating:!1})),i.shouldFocus&&!n&&H(o,(e=>f(s.errors,e)),e?a:b.mount),n},he=e=>{const t=Object.assign(Object.assign({},u),y.mount?m:{});return d(e)?t:re(e)?f(t,e):e.map((e=>f(t,e)))},je=e=>{e?T(e).forEach((e=>ie(s.errors,e))):s.errors={},j.state.next({errors:s.errors,isValid:!0})},Oe=(e,t,r)=>{const n=(f(o,e,{_f:{}})._f||{}).ref;W(s.errors,e,Object.assign(Object.assign({},t),{ref:n})),j.state.next({name:e,errors:s.errors,isValid:!1}),r&&r.shouldFocus&&n&&n.focus&&n.focus()},Ve=(e,t)=>J(e)?j.watch.subscribe({next:r=>e(ee(void 0,t),r)}):ee(e,t,!0),we=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(const n of e?T(e):b.mount)b.mount.delete(n),b.array.delete(n),f(o,n)&&(t.keepValue||(ie(o,n),ie(m,n)),!t.keepError&&ie(s.errors,n),!t.keepDirty&&ie(s.dirtyFields,n),!t.keepTouched&&ie(s.touchedFields,n),!r.shouldUnregister&&!t.keepDefaultValue&&ie(u,n));j.watch.next({}),j.state.next(Object.assign(Object.assign({},s),t.keepDirty?{isDirty:I()}:{})),!t.keepIsValid&&x()},xe=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=f(o,e);return W(o,e,{_f:Object.assign(Object.assign(Object.assign({},s&&s._f?s._f:{ref:{name:e}}),{name:e,mount:!0}),t)}),b.mount.add(e),!d(t.value)&&W(m,e,t.value),s?Q(t.disabled)&&W(m,e,t.disabled?void 0:f(m,e,fe(s._f))):C(e,!0),Ae?{name:e}:Object.assign(Object.assign({name:e},Q(t.disabled)?{disabled:t.disabled}:{}),{onChange:de,onBlur:de,ref:s=>{if(s){xe(e,t);let r=f(o,e);const n=d(s.value)&&s.querySelectorAll&&s.querySelectorAll(\"input,select,textarea\")[0]||s,i=te(n);if(n===r._f.ref||i&&c(r._f.refs||[]).find((e=>e===n)))return;r={_f:i?Object.assign(Object.assign({},r._f),{refs:[...c(r._f.refs||[]).filter(ne),n],ref:{type:n.type,name:e}}):Object.assign(Object.assign({},r._f),{ref:n})},W(o,e,r),(!t||!t.disabled)&&C(e,!1,n)}else{const s=f(o,e,{}),n=r.shouldUnregister||t.shouldUnregister;s._f&&(s._f.mount=!1),n&&(!l(b.array,e)||!y.action)&&b.unMount.add(e)}}})},ke=(e,t)=>async n=>{n&&(n.preventDefault&&n.preventDefault(),n.persist&&n.persist());let i=!0,a=Object.assign({},m);j.state.next({isSubmitting:!0});try{if(r.resolver){const{errors:e,values:t}=await M();s.errors=e,a=t}else await R(o);E(s.errors)&&Object.keys(s.errors).every((e=>f(a,e)))?(j.state.next({errors:{},isSubmitting:!0}),await e(a,n)):(t&&await t(s.errors,n),r.shouldFocusError&&H(o,(e=>f(s.errors,e)),b.mount))}catch(u){throw i=!1,u}finally{s.isSubmitted=!0,j.state.next({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:E(s.errors)&&i,submitCount:s.submitCount+1,errors:s.errors})}},De=function(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=!E(e),i=e||u,a=P(i);if(r.keepDefaultValues||(u=i),!r.keepValues){if(se)for(const e of b.mount){const t=f(o,e);if(t&&t._f){const e=Array.isArray(t._f.refs)?t._f.refs[0]:t._f.ref;try{Y(e)&&e.closest(\"form\").reset();break}catch(l){}}}m=t.shouldUnregister?r.keepDefaultValues?P(u):{}:a,o={},j.control.next({values:n?a:u}),j.watch.next({}),j.array.next({values:a})}b={mount:new Set,unMount:new Set,array:new Set,watch:new Set,watchAll:!1,focus:\"\"},j.state.next({submitCount:r.keepSubmitCount?s.submitCount:0,isDirty:r.keepDirty?s.isDirty:!!r.keepDefaultValues&&!G(e,u),isSubmitted:!!r.keepIsSubmitted&&s.isSubmitted,dirtyFields:r.keepDirty?s.dirtyFields:r.keepDefaultValues&&e?Object.entries(e).reduce(((e,t)=>{let[r,s]=t;return Object.assign(Object.assign({},e),{[r]:s!==f(u,r)})}),{}):{},touchedFields:r.keepTouched?s.touchedFields:{},errors:r.keepErrors?s.errors:{},isSubmitting:!1,isSubmitSuccessful:!1}),y.mount=!_.isValid||!!r.keepIsValid,y.watch=!!t.shouldUnregister},Ee=e=>{const t=f(o,e)._f;(t.ref.focus?t.ref:t.refs[0]).focus()};return{control:{register:xe,unregister:we,_executeSchema:M,_getWatch:ee,_getDirty:I,_updateValid:x,_removeUnmounted:q,_updateFieldArray:k,_getFieldArray:ae,_subjects:j,_proxyFormState:_,get _fields(){return o},set _fields(e){o=e},get _formValues(){return m},set _formValues(e){m=e},get _stateFlags(){return y},set _stateFlags(e){y=e},get _defaultValues(){return u},set _defaultValues(e){u=e},get _names(){return b},set _names(e){b=e},get _formState(){return s},set _formState(e){s=e},get _options(){return r},set _options(e){r=Object.assign(Object.assign({},r),e)}},trigger:be,register:xe,handleSubmit:ke,watch:Ve,setValue:ce,getValues:he,reset:De,clearErrors:je,unregister:we,setError:Oe,setFocus:Ee}}function ke(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=s.useRef(),[r,n]=s.useState({isDirty:!1,isValidating:!1,dirtyFields:{},isSubmitted:!1,submitCount:0,touchedFields:{},isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,errors:{}});t.current?t.current.control._options=e:t.current=Object.assign(Object.assign({},xe(e)),{formState:r});const i=t.current.control;return N({subject:i._subjects.state,callback:e=>{C(e,i._proxyFormState,!0)&&(i._formState=Object.assign(Object.assign({},i._formState),e),n(Object.assign({},i._formState)))}}),s.useEffect((()=>{i._stateFlags.mount||(i._proxyFormState.isValid&&i._updateValid(),i._stateFlags.mount=!0),i._stateFlags.watch&&(i._stateFlags.watch=!1,i._subjects.state.next({})),i._removeUnmounted()})),s.useEffect((()=>()=>Object.values(i._subjects).forEach((e=>e.unsubscribe()))),[i]),t.current.formState=D(r,i._proxyFormState),t.current}}}]);","name":"static/js/1.98bb3d27.chunk.js","map":{"version":3,"sources":["static/js/1.98bb3d27.chunk.js"],"names":["this","push","module","__webpack_exports__","__webpack_require__","d","Controller","appendErrors","get","set","useForm","react__WEBPACK_IMPORTED_MODULE_0__","isCheckBoxInput","element","type","isDateObject","data","Date","isNullOrUndefined","value","isObjectType","isObject","Array","isArray","isNameInFieldArray","names","name","some","current","substring","search","getNodeParentName","compact","filter","Boolean","isUndefined","val","undefined","obj","path","defaultValue","result","split","reduce","key","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","omit","source","copy","Object","assign","HookFormContext","useFormContext","getProxyFormState","formState","_proxyFormState","localProxyFormState","isRoot","arguments","length","createGetter","prop","defineProperty","isEmptyObject","keys","shouldRenderFormState","formStateData","find","convertToArrayPayload","shouldSubscribeByName","signalName","currentName","startsWith","tearDown","_unsubscribe","unsubscribe","useSubscribe","props","_updateSubscription","_ref","disabled","subject","subscribe","next","callback","updateSubscriptionProps","skipEarlySubscription","useController","methods","control","shouldUnregister","setInputStateValue","_formValues","_defaultValues","updateFormState","_formState","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","_name","_subjects","state","useFormState","values","registerProps","register","rules","updateMounted","field","_fields","_f","mount","_shouldUnregisterField","_options","_names","array","_stateFlags","action","unregister","onChange","event","target","checked","getControllerValue","onBlur","ref","elm","focus","setCustomValidity","message","reportValidity","fieldState","invalid","isTouched","error","render","validateAllFieldCriteria","types","isKey","test","stringToPath","input","replace","object","index","tempPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","fieldsNames","refs","isFunction","cloneObject","Set","createSubject","_observers","observers","observer","subscription","tearDowns","add","teardown","createSubscription","subscriber","closed","createSubscriber","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","val1","includes","val2","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isBoolean","isFileInput","isHTMLElement","HTMLElement","isMultipleSelect","isRadioInput","isRadioOrCheckboxFunction","isString","isWeb","window","document","live","contains","unset","updatePath","childObject","slice","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","defaultResult","validResult","getCheckboxValue","options","option","map","attributes","getFieldValueAs","_ref3","valueAsNumber","valueAsDate","setValueAs","NaN","defaultReturn","getRadioValue","previous","getFieldValue","every","files","selectedOptions","_ref4","getResolverOptions","criteriaMode","shouldUseNativeValidation","hasValidation","required","min","max","maxLength","minLength","pattern","validate","schemaErrorLookup","fieldName","join","foundError","pop","deepMerge","targetValue","sourceValue","_a","setDirtyFields","defaultValues","parentNode","parentName","setFieldArrayDirtyFields","skipValidation","isBlurEvent","isSubmitted","reValidateMode","unsetEmptyArray","isMessage","isRegex","RegExp","getValidateError","getValueAndMessage","validationData","validateField","async","inputValue","inputRef","setCustomValidty","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueNumber","parseFloat","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","defaultOptions","shouldFocusError","isWindowUndefined","createFormControl","delayErrorCallback","submitCount","isSubmitting","isSubmitSuccessful","watch","unMount","timer","validateFields","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","_len","args","_key","clearTimeout","setTimeout","isFieldWatched","watchAll","has","_updateValid","resolver","_executeSchema","executeBuildInValidation","shouldSkipRender","_updateFieldArray","method","shouldSetValues","shouldSetFields","fieldValues","argA","argB","updateFieldArrayDirty","_getDirty","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","isCurrentTouched","shouldRender","isFieldDirty","output","isPreviousFieldTouched","isPreviousFormDirty","isPreviousFieldDirty","shouldRenderByError","previousFieldError","shouldUpdateValid","delayError","updatedFormState","context","executeSchemaAndUpdateState","shouldOnlyCheckValid","valid","fieldReference","fieldError","_removeUnmounted","getValues","_getWatch","isGlobal","_getFieldArray","forEach","selectRef","selected","checkboxRef","radioRef","shouldDirty","shouldTouch","shouldValidate","trigger","setValues","fieldKey","concat","setValue","isFieldArray","handleChange","shouldSkipValidation","deps","isWatched","previousErrorLookupResult","errorLookupResult","fieldNames","Promise","all","shouldFocus","clearErrors","inputName","setError","info","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","fieldRef","querySelectorAll","handleSubmit","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","reset","formValues","keepStateOptions","hasUpdatedFormValues","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","closest","keepSubmitCount","keepIsSubmitted","entries","_ref5","keepErrors","setFocus","_formControl"],"mappings":"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"},"input":"(this[\"webpackJsonpvuexy-react-admin-dashboard\"] = this[\"webpackJsonpvuexy-react-admin-dashboard\"] || []).push([[1],{\n\n/***/ 934:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Controller; });\n/* unused harmony export FormProvider */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return appendErrors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return set; });\n/* unused harmony export useController */\n/* unused harmony export useFieldArray */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return useForm; });\n/* unused harmony export useFormContext */\n/* unused harmony export useFormState */\n/* unused harmony export useWatch */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar isCheckBoxInput = element => element.type === 'checkbox';\n\nvar isDateObject = data => data instanceof Date;\n\nvar isNullOrUndefined = value => value == null;\n\nconst isObjectType = value => typeof value === 'object';\n\nvar isObject = value => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value);\n\nvar getControllerValue = event => isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;\n\nvar getNodeParentName = name => name.substring(0, name.search(/.\\d/)) || name;\n\nvar isNameInFieldArray = (names, name) => [...names].some(current => getNodeParentName(name) === current);\n\nvar compact = value => value.filter(Boolean);\n\nvar isUndefined = val => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\n  if (isObject(obj) && path) {\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n    return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n  }\n\n  return undefined;\n};\n\nconst EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change'\n};\nconst VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nconst INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\n\nvar omit = (source, key) => {\n  const copy = Object.assign({}, source);\n  delete copy[key];\n  return copy;\n};\n\nconst HookFormContext = react__WEBPACK_IMPORTED_MODULE_0__[\"createContext\"](null);\n\nconst useFormContext = () => react__WEBPACK_IMPORTED_MODULE_0__[\"useContext\"](HookFormContext);\n\nconst FormProvider = props => react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](HookFormContext.Provider, {\n  value: omit(props, 'children')\n}, props.children);\n\nvar getProxyFormState = function (formState, _proxyFormState, localProxyFormState) {\n  let isRoot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  function createGetter(prop) {\n    return () => {\n      if (prop in formState) {\n        if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\n          _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[prop] = true);\n        return formState[prop];\n      }\n\n      return undefined;\n    };\n  }\n\n  const result = {};\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: createGetter(key)\n    });\n  }\n\n  return result;\n};\n\nvar isEmptyObject = value => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, isRoot) => {\n  const formState = omit(formStateData, 'name');\n  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find(key => _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all));\n};\n\nvar convertToArrayPayload = value => Array.isArray(value) ? value : [value];\n\nvar shouldSubscribeByName = (name, signalName) => !name || !signalName || convertToArrayPayload(name).some(currentName => currentName && (currentName.startsWith(signalName) || signalName.startsWith(currentName)));\n\nconst tearDown = _unsubscribe => {\n  if (_unsubscribe.current) {\n    _unsubscribe.current.unsubscribe();\n\n    _unsubscribe.current = undefined;\n  }\n};\n\nconst updateSubscriptionProps = _ref => {\n  let {\n    _unsubscribe,\n    props\n  } = _ref;\n  return () => {\n    if (props.disabled) {\n      tearDown(_unsubscribe);\n    } else if (!_unsubscribe.current) {\n      _unsubscribe.current = props.subject.subscribe({\n        next: props.callback\n      });\n    }\n  };\n};\n\nfunction useSubscribe(props) {\n  const _unsubscribe = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"]();\n\n  const _updateSubscription = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"](() => {});\n\n  _updateSubscription.current = updateSubscriptionProps({\n    _unsubscribe,\n    props\n  });\n  !props.skipEarlySubscription && _updateSubscription.current();\n  react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"](() => {\n    _updateSubscription.current();\n\n    return () => tearDown(_unsubscribe);\n  }, []);\n}\n\nfunction useFormState(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    disabled,\n    name\n  } = props || {};\n  const [formState, updateFormState] = react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"](control._formState);\n\n  const _localProxyFormState = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"]({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  });\n\n  const _name = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"](name);\n\n  _name.current = name;\n  useSubscribe({\n    disabled,\n    callback: formState => shouldSubscribeByName(_name.current, formState.name) && shouldRenderFormState(formState, _localProxyFormState.current) && updateFormState(Object.assign(Object.assign({}, control._formState), formState)),\n    subject: control._subjects.state,\n    skipEarlySubscription: true\n  });\n  return getProxyFormState(formState, control._proxyFormState, _localProxyFormState.current, false);\n}\n\nfunction useController(props) {\n  const methods = useFormContext();\n  const {\n    name,\n    control = methods.control,\n    shouldUnregister\n  } = props;\n  const [value, setInputStateValue] = react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"](get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)));\n  const formState = useFormState({\n    control: control || methods.control,\n    name\n  });\n\n  const _name = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"](name);\n\n  _name.current = name;\n  useSubscribe({\n    subject: control._subjects.control,\n    callback: data => (!data.name || _name.current === data.name) && setInputStateValue(get(data.values, _name.current)),\n    skipEarlySubscription: true\n  });\n  const registerProps = control.register(name, Object.assign(Object.assign({}, props.rules), {\n    value\n  }));\n  const updateMounted = react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"]((name, value) => {\n    const field = get(control._fields, name);\n\n    if (field) {\n      field._f.mount = value;\n    }\n  }, [control]);\n  react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"](() => {\n    updateMounted(name, true);\n    return () => {\n      const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n\n      if (isNameInFieldArray(control._names.array, name) ? _shouldUnregisterField && !control._stateFlags.action : _shouldUnregisterField) {\n        control.unregister(name);\n      } else {\n        updateMounted(name, false);\n      }\n    };\n  }, [name, control, shouldUnregister, updateMounted]);\n  return {\n    field: {\n      onChange: event => {\n        const value = getControllerValue(event);\n        setInputStateValue(value);\n        registerProps.onChange({\n          target: {\n            value,\n            name: name\n          },\n          type: EVENTS.CHANGE\n        });\n      },\n      onBlur: () => {\n        registerProps.onBlur({\n          target: {\n            value,\n            name: name\n          },\n          type: EVENTS.BLUR\n        });\n      },\n      name,\n      value,\n      ref: elm => {\n        const field = get(control._fields, name);\n\n        if (elm && field && elm.focus) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            setCustomValidity: message => elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity()\n          };\n        }\n      }\n    },\n    formState,\n    fieldState: {\n      invalid: !!get(formState.errors, name),\n      isDirty: !!get(formState.dirtyFields, name),\n      isTouched: !!get(formState.touchedFields, name),\n      error: get(formState.errors, name)\n    }\n  };\n}\n\nconst Controller = props => props.render(useController(props));\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? Object.assign(Object.assign({}, errors[name]), {\n  types: Object.assign(Object.assign({}, errors[name] && errors[name].types ? errors[name].types : {}), {\n    [type]: message || true\n  })\n}) : {};\n\nvar isKey = value => /^\\w*$/.test(value);\n\nvar stringToPath = input => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n\n  return object;\n}\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const _f = field._f;\n      const current = omit(field, '_f');\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n\n          break;\n        }\n      } else if (isObject(current)) {\n        focusFieldBy(current, callback);\n      }\n    }\n  }\n};\n\nvar getFocusFieldName = function (name, index) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return options.shouldFocus || isUndefined(options.shouldFocus) ? options.focusName || \"\".concat(name, \".\").concat(isUndefined(options.focusIndex) ? index : options.focusIndex, \".\") : '';\n};\n\nvar mapCurrentIds = (values, _fieldIds, keyName) => values.map((value, index) => {\n  const output = _fieldIds.current[index];\n  return Object.assign(Object.assign({}, value), output ? {\n    [keyName]: output[keyName]\n  } : {});\n});\n\nvar generateId = () => {\n  const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\n\nvar mapIds = function () {\n  let values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let keyName = arguments.length > 1 ? arguments[1] : undefined;\n  return values.map(value => Object.assign(Object.assign({}, value[keyName] ? {} : {\n    [keyName]: generateId()\n  }), value));\n};\n\nfunction append(data, value) {\n  return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\n}\n\nvar fillEmptyArray = value => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n  return [...data.slice(0, index), ...convertToArrayPayload(value), ...data.slice(index)];\n}\n\nvar moveArrayAt = (data, from, to) => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n\nvar omitKeys = (fields, keyName) => fields.map(function () {\n  let field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return omit(field, keyName);\n});\n\nfunction prepend(data, value) {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n\nfunction removeAtIndexes(data, indexes) {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nvar removeArrayAt = (data, index) => isUndefined(index) ? [] : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n  data[indexA] = [data[indexB], data[indexB] = data[indexA]][0];\n};\n\nvar updateAt = (fieldValues, index, value) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n\nconst useFieldArray = props => {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id',\n    shouldUnregister\n  } = props;\n  const [fields, setFields] = react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"](mapIds(control._getFieldArray(name), keyName));\n\n  const _fieldIds = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"](fields);\n\n  const _name = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"](name);\n\n  const _actioned = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"](false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n\n  control._names.array.add(name);\n\n  useSubscribe({\n    callback: _ref2 => {\n      let {\n        values,\n        name: fieldArrayName\n      } = _ref2;\n\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        setFields(mapIds(get(values, _name.current), keyName));\n      }\n    },\n    subject: control._subjects.array,\n    skipEarlySubscription: true\n  });\n  const updateValues = react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](updatedFieldArrayValuesWithKey => {\n    const updatedFieldArrayValues = omitKeys(updatedFieldArrayValuesWithKey, keyName);\n    _actioned.current = true;\n    set(control._formValues, name, updatedFieldArrayValues);\n    setFields(updatedFieldArrayValuesWithKey);\n    return updatedFieldArrayValues;\n  }, [control, name, keyName]);\n\n  const append$1 = (value, options) => {\n    const appendValue = convertToArrayPayload(value);\n    const updatedFieldArrayValuesWithKey = append(mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName), mapIds(appendValue, keyName));\n\n    control._updateFieldArray(name, append, {\n      argA: fillEmptyArray(value)\n    }, updateValues(updatedFieldArrayValuesWithKey));\n\n    control._names.focus = getFocusFieldName(name, updatedFieldArrayValuesWithKey.length - appendValue.length, options);\n  };\n\n  const prepend$1 = (value, options) => {\n    const updatedFieldArrayValuesWithKey = prepend(mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName), mapIds(convertToArrayPayload(value), keyName));\n\n    control._updateFieldArray(name, prepend, {\n      argA: fillEmptyArray(value)\n    }, updateValues(updatedFieldArrayValuesWithKey));\n\n    control._names.focus = getFocusFieldName(name, 0, options);\n  };\n\n  const remove = index => {\n    const updatedFieldArrayValuesWithKey = removeArrayAt(mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName), index);\n\n    control._updateFieldArray(name, removeArrayAt, {\n      argA: index\n    }, updateValues(updatedFieldArrayValuesWithKey));\n  };\n\n  const insert$1 = (index, value, options) => {\n    const updatedFieldArrayValuesWithKey = insert(mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName), index, mapIds(convertToArrayPayload(value), keyName));\n\n    control._updateFieldArray(name, insert, {\n      argA: index,\n      argB: fillEmptyArray(value)\n    }, updateValues(updatedFieldArrayValuesWithKey));\n\n    control._names.focus = getFocusFieldName(name, index, options);\n  };\n\n  const swap = (indexA, indexB) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName);\n    swapArrayAt(updatedFieldArrayValuesWithKey, indexA, indexB);\n\n    control._updateFieldArray(name, swapArrayAt, {\n      argA: indexA,\n      argB: indexB\n    }, updateValues(updatedFieldArrayValuesWithKey), false);\n  };\n\n  const move = (from, to) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName);\n    moveArrayAt(updatedFieldArrayValuesWithKey, from, to);\n\n    control._updateFieldArray(name, moveArrayAt, {\n      argA: from,\n      argB: to\n    }, updateValues(updatedFieldArrayValuesWithKey), false);\n  };\n\n  const update = (index, value) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName);\n    const updatedFieldArrayValues = updateAt(updatedFieldArrayValuesWithKey, index, value);\n    _fieldIds.current = mapIds(updatedFieldArrayValues, keyName);\n\n    control._updateFieldArray(name, updateAt, {\n      argA: index,\n      argB: value\n    }, updateValues(_fieldIds.current), true, false);\n  };\n\n  const replace = value => {\n    const updatedFieldArrayValuesWithKey = mapIds(convertToArrayPayload(value), keyName);\n\n    control._updateFieldArray(name, () => updatedFieldArrayValuesWithKey, {}, updateValues(updatedFieldArrayValuesWithKey), true, false);\n  };\n\n  react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"](() => {\n    control._stateFlags.action = false;\n\n    if (control._names.watchAll) {\n      control._subjects.state.next({});\n    } else {\n      for (const watchField of control._names.watch) {\n        if (name.startsWith(watchField)) {\n          control._subjects.state.next({});\n\n          break;\n        }\n      }\n    }\n\n    if (_actioned.current) {\n      control._executeSchema([name]).then(result => {\n        const error = get(result.errors, name);\n\n        if (error && error.type && !get(control._formState.errors, name)) {\n          set(control._formState.errors, name, error);\n\n          control._subjects.state.next({\n            errors: control._formState.errors\n          });\n        }\n      });\n    }\n\n    control._subjects.watch.next({\n      name,\n      values: control._formValues\n    });\n\n    control._names.focus && focusFieldBy(control._fields, key => key.startsWith(control._names.focus));\n    control._names.focus = '';\n    control._proxyFormState.isValid && control._updateValid();\n  }, [fields, name, control, keyName]);\n  react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"](() => {\n    !get(control._formValues, name) && set(control._formValues, name, []);\n    return () => {\n      if (control._options.shouldUnregister || shouldUnregister) {\n        control.unregister(name);\n      }\n    };\n  }, [name, control, keyName, shouldUnregister]);\n  return {\n    swap: react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](swap, [updateValues, name, control, keyName]),\n    move: react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](move, [updateValues, name, control, keyName]),\n    prepend: react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](prepend$1, [updateValues, name, control, keyName]),\n    append: react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](append$1, [updateValues, name, control, keyName]),\n    remove: react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](remove, [updateValues, name, control, keyName]),\n    insert: react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](insert$1, [updateValues, name, control, keyName]),\n    update: react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](update, [updateValues, name, control, keyName]),\n    replace: react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"](replace, [updateValues, name, control, keyName]),\n    fields: fields\n  };\n};\n\nvar isFunction = value => typeof value === 'function';\n\nfunction cloneObject(data) {\n  let copy;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (isArray || isObject(data)) {\n    copy = isArray ? [] : {};\n\n    for (const key in data) {\n      if (isFunction(data[key])) {\n        copy = data;\n        break;\n      }\n\n      copy[key] = cloneObject(data[key]);\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n\nfunction createSubscription() {\n  let tearDowns = [];\n\n  const add = tearDown => {\n    tearDowns.push(tearDown);\n  };\n\n  const unsubscribe = () => {\n    for (const teardown of tearDowns) {\n      teardown();\n    }\n\n    tearDowns = [];\n  };\n\n  return {\n    add,\n    unsubscribe\n  };\n}\n\nfunction createSubscriber(observer, subscription) {\n  let closed = false;\n  subscription.add(() => closed = true);\n\n  const next = value => {\n    if (!closed) {\n      observer.next(value);\n    }\n  };\n\n  return {\n    next\n  };\n}\n\nfunction createSubject() {\n  let _observers = [];\n\n  const next = value => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = observer => {\n    const subscription = createSubscription();\n    const subscriber = createSubscriber(observer, subscription);\n\n    _observers.push(subscriber);\n\n    return subscription;\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n\n    next,\n    subscribe,\n    unsubscribe\n  };\n}\n\nvar isPrimitive = value => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual(val1, val2) : val1 !== val2) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nvar getValidationModes = mode => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched\n});\n\nvar isBoolean = value => typeof value === 'boolean';\n\nvar isFileInput = element => element.type === 'file';\n\nvar isHTMLElement = value => value instanceof HTMLElement;\n\nvar isMultipleSelect = element => element.type === \"select-multiple\";\n\nvar isRadioInput = element => element.type === 'radio';\n\nvar isRadioOrCheckboxFunction = ref => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar isString = value => typeof value === 'string';\n\nvar isWeb = typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined' && typeof document !== 'undefined';\n\nvar live = ref => isHTMLElement(ref) && document.contains(ref);\n\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction unset(object, path) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (currentPathsLength === index && (isObject(objectRef) && isEmptyObject(objectRef) || Array.isArray(objectRef) && !objectRef.filter(data => isObject(data) && !isEmptyObject(data) || isBoolean(data)).length)) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n\nconst defaultResult = {\n  value: false,\n  isValid: false\n};\nconst validResult = {\n  value: true,\n  isValid: true\n};\n\nvar getCheckboxValue = options => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options.filter(option => option && option.checked && !option.disabled).map(option => option.value);\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n\n    return options[0].checked && !options[0].disabled ? // @ts-expect-error expected to work in the browser\n    options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === '' ? validResult : {\n      value: options[0].value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n\n  return defaultResult;\n};\n\nvar getFieldValueAs = (value, _ref3) => {\n  let {\n    valueAsNumber,\n    valueAsDate,\n    setValueAs\n  } = _ref3;\n  return isUndefined(value) ? value : valueAsNumber ? value === '' ? NaN : +value : valueAsDate ? new Date(value) : setValueAs ? setValueAs(value) : value;\n};\n\nconst defaultReturn = {\n  isValid: false,\n  value: null\n};\n\nvar getRadioValue = options => Array.isArray(options) ? options.reduce((previous, option) => option && option.checked && !option.disabled ? {\n  isValid: true,\n  value: option.value\n} : previous, defaultReturn) : defaultReturn;\n\nfunction getFieldValue(_f) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every(ref => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(_ref4 => {\n      let {\n        value\n      } = _ref4;\n      return value;\n    });\n  }\n\n  if (isCheckBoxInput(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n  const fields = {};\n\n  for (const name of fieldsNames) {\n    const field = get(_fields, name);\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation\n  };\n};\n\nvar hasValidation = options => options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return {\n        name\n      };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name\n  };\n}\n\nfunction deepMerge(target, source) {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      target[key] = isObject(targetValue) && isObject(sourceValue) || Array.isArray(targetValue) && Array.isArray(sourceValue) ? deepMerge(targetValue, sourceValue) : sourceValue;\n    } catch (_a) {}\n  }\n\n  return target;\n}\n\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n  let index = -1;\n\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n      } else {\n        !isNullOrUndefined(defaultValues) && deepEqual(get(defaultValues[index] || {}, key), values[index][key]) ? set(dirtyFields[index] || {}, key) : dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), {\n          [key]: true\n        });\n      }\n    }\n\n    parentNode && !dirtyFields.length && delete parentNode[parentName];\n  }\n\n  return dirtyFields;\n}\n\nvar setFieldArrayDirtyFields = (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n\n  return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name, [])).length && unset(ref, name);\n\nvar isMessage = value => isString(value) || react__WEBPACK_IMPORTED_MODULE_0__[\"isValidElement\"](value);\n\nvar isRegex = value => value instanceof RegExp;\n\nfunction getValidateError(result, ref) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n\n  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref\n    };\n  }\n}\n\nvar getValueAndMessage = validationData => isObject(validationData) && !isRegex(validationData) ? validationData : {\n  value: validationData,\n  message: ''\n};\n\nvar validateField = async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation) => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled\n  } = field._f;\n\n  if (!mount || disabled) {\n    return {};\n  }\n\n  const inputRef = refs ? refs[0] : ref;\n\n  const setCustomValidty = message => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n      inputRef.reportValidity();\n    }\n  };\n\n  const error = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = (valueAsNumber || isFileInput(ref)) && !ref.value || inputValue === '' || Array.isArray(inputValue) && !inputValue.length;\n  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n\n  const getMinMaxMessage = function (exceedMax, maxLengthMessage, minLengthMessage) {\n    let maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n    let minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = Object.assign({\n      type: exceedMax ? maxType : minType,\n      message,\n      ref\n    }, appendErrorsCurry(exceedMax ? maxType : minType, message));\n  };\n\n  if (required && (!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid)) {\n    const {\n      value,\n      message\n    } = isMessage(required) ? {\n      value: !!required,\n      message: required\n    } : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = Object.assign({\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef\n      }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(inputValue)) {\n      const valueNumber = ref.valueAsNumber || parseFloat(inputValue);\n\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate = ref.valueAsDate || new Date(inputValue);\n\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name].message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > maxLengthOutput.value;\n    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name].message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const {\n      value: patternValue,\n      message\n    } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = Object.assign({\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref\n      }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n\n        if (!validateAllFieldCriteria) {\n          setCustomValidty(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {};\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\n\n        if (validateError) {\n          validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n          setCustomValidty(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = Object.assign({\n          ref: inputRef\n        }, validationResult);\n\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidty(true);\n  return error;\n};\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true\n};\nconst isWindowUndefined = typeof window === 'undefined';\n\nfunction createFormControl() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  let _options = Object.assign(Object.assign({}, defaultOptions), props);\n\n  let _formState = {\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {}\n  };\n  let _fields = {};\n\n  let _defaultValues = _options.defaultValues || {};\n\n  let _formValues = _options.shouldUnregister ? {} : cloneObject(_defaultValues);\n\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false\n  };\n  let _names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  };\n  let delayErrorCallback;\n  let timer = 0;\n  let validateFields = {};\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  };\n  const _subjects = {\n    watch: createSubject(),\n    control: createSubject(),\n    array: createSubject(),\n    state: createSubject()\n  };\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce = (callback, wait) => function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timer);\n    timer = window.setTimeout(() => callback(...args), wait);\n  };\n\n  const isFieldWatched = (name, isBlurEvent) => !isBlurEvent && (_names.watchAll || _names.watch.has(name) || _names.watch.has((name.match(/\\w+/) || [])[0]));\n\n  const _updateValid = async shouldSkipRender => {\n    let isValid = false;\n\n    if (_proxyFormState.isValid) {\n      isValid = _options.resolver ? isEmptyObject((await _executeSchema()).errors) : await executeBuildInValidation(_fields, true);\n\n      if (!shouldSkipRender && isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n\n        _subjects.state.next({\n          isValid\n        });\n      }\n    }\n\n    return isValid;\n  };\n\n  const _updateFieldArray = function (name, method, args) {\n    let values = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let shouldSetValues = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let shouldSetFields = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    _stateFlags.action = true;\n\n    if (shouldSetFields && get(_fields, name)) {\n      const fieldValues = method(get(_fields, name), args.argA, args.argB);\n      shouldSetValues && set(_fields, name, fieldValues);\n    }\n\n    if (Array.isArray(get(_formState.errors, name))) {\n      const errors = method(get(_formState.errors, name), args.argA, args.argB);\n      shouldSetValues && set(_formState.errors, name, errors);\n      unsetEmptyArray(_formState.errors, name);\n    }\n\n    if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n      const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n      shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      unsetEmptyArray(_formState.touchedFields, name);\n    }\n\n    if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n      updateFieldArrayDirty(name, values);\n    }\n\n    _subjects.state.next({\n      isDirty: _getDirty(name, values),\n      dirtyFields: _formState.dirtyFields,\n      errors: _formState.errors,\n      isValid: _formState.isValid\n    });\n  };\n\n  const updateErrors = (name, error) => (set(_formState.errors, name, error), _subjects.state.next({\n    errors: _formState.errors\n  }));\n\n  const updateValidAndValue = (name, shouldSkipSetValueAs, ref) => {\n    const field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(_formValues, name, get(_defaultValues, name));\n      isUndefined(defaultValue) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f)) : setFieldValue(name, defaultValue);\n    }\n\n    _stateFlags.mount && _updateValid();\n  };\n\n  const updateTouchAndDirty = function (name, fieldValue, isCurrentTouched) {\n    let shouldRender = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    let isFieldDirty = false;\n    const output = {\n      name\n    };\n    const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n    if (_proxyFormState.isDirty) {\n      const isPreviousFormDirty = _formState.isDirty;\n      _formState.isDirty = output.isDirty = _getDirty();\n      isFieldDirty = isPreviousFormDirty !== output.isDirty;\n    }\n\n    if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n      const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n      const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n      isCurrentFieldPristine ? unset(_formState.dirtyFields, name) : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      isFieldDirty = isFieldDirty || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n    }\n\n    if (isCurrentTouched && !isPreviousFieldTouched) {\n      set(_formState.touchedFields, name, isCurrentTouched);\n      output.touchedFields = _formState.touchedFields;\n      isFieldDirty = isFieldDirty || _proxyFormState.touchedFields && isPreviousFieldTouched !== isCurrentTouched;\n    }\n\n    isFieldDirty && shouldRender && _subjects.state.next(output);\n    return isFieldDirty ? output : {};\n  };\n\n  const updateFieldArrayDirty = (name, value) => (set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, []))), unsetEmptyArray(_formState.dirtyFields, name));\n\n  const shouldRenderByError = async (shouldSkipRender, name, isValid, error, fieldState) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid = _proxyFormState.isValid && _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = delayErrorCallback || debounce(updateErrors, props.delayError);\n      delayErrorCallback(name, error);\n    } else {\n      clearTimeout(timer);\n      error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n    }\n\n    if (((error ? !deepEqual(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) && !shouldSkipRender) {\n      const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), shouldUpdateValid ? {\n        isValid\n      } : {}), {\n        errors: _formState.errors,\n        name\n      });\n      _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    validateFields[name]--;\n\n    if (_proxyFormState.isValidating && !validateFields[name]) {\n      _subjects.state.next({\n        isValidating: false\n      });\n\n      validateFields = {};\n    }\n  };\n\n  const _executeSchema = async name => _options.resolver ? await _options.resolver(Object.assign({}, _formValues), _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation)) : {};\n\n  const executeSchemaAndUpdateState = async names => {\n    const {\n      errors\n    } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuildInValidation = async function (fields, shouldOnlyCheckValid) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      valid: true\n    };\n\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const fieldReference = field._f;\n        const fieldValue = omit(field, '_f');\n\n        if (fieldReference) {\n          const fieldError = await validateField(field, get(_formValues, fieldReference.name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation);\n\n          if (fieldError[fieldReference.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          if (!shouldOnlyCheckValid) {\n            fieldError[fieldReference.name] ? set(_formState.errors, fieldReference.name, fieldError[fieldReference.name]) : unset(_formState.errors, fieldReference.name);\n          }\n        }\n\n        fieldValue && (await executeBuildInValidation(fieldValue, shouldOnlyCheckValid, context));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field = get(_fields, name);\n      field && (field._f.refs ? field._f.refs.every(ref => !live(ref)) : !live(field._f.ref)) && unregister(name);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty = (name, data) => (name && data && set(_formValues, name, data), !deepEqual(getValues(), _defaultValues));\n\n  const _getWatch = (names, defaultValue, isGlobal) => {\n    const fieldValues = Object.assign({}, _stateFlags.mount ? _formValues : isUndefined(defaultValue) ? _defaultValues : isString(names) ? {\n      [names]: defaultValue\n    } : defaultValue);\n\n    if (names) {\n      const result = convertToArrayPayload(names).map(fieldName => (isGlobal && _names.watch.add(fieldName), get(fieldValues, fieldName)));\n      return Array.isArray(names) ? result : result[0];\n    }\n\n    isGlobal && (_names.watchAll = true);\n    return fieldValues;\n  };\n\n  const _getFieldArray = name => get(_stateFlags.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []);\n\n  const setFieldValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let shouldRender = arguments.length > 3 ? arguments[3] : undefined;\n    const field = get(_fields, name);\n    let fieldValue = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        set(_formValues, name, getFieldValueAs(value, fieldReference));\n        fieldValue = isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value) ? '' : value;\n\n        if (isFileInput(fieldReference.ref) && !isString(fieldValue)) {\n          fieldReference.ref.files = fieldValue;\n        } else if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(selectRef => selectRef.selected = fieldValue.includes(selectRef.value));\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1 ? fieldReference.refs.forEach(checkboxRef => checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find(data => data === checkboxRef.value) : fieldValue === checkboxRef.value) : fieldReference.refs[0].checked = !!fieldValue;\n          } else {\n            fieldReference.refs.forEach(radioRef => radioRef.checked = radioRef.value === fieldValue);\n          }\n        } else {\n          fieldReference.ref.value = fieldValue;\n        }\n\n        shouldRender && _subjects.control.next({\n          values: _formValues,\n          name\n        });\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch);\n    options.shouldValidate && trigger(name);\n  };\n\n  const setValues = (name, value, options) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = \"\".concat(name, \".\").concat(fieldKey);\n      const field = get(_fields, fieldName);\n      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options, true);\n    }\n  };\n\n  const setValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n\n    const isFieldArray = _names.array.has(name);\n\n    set(_formValues, name, value);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues\n      });\n\n      if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty) {\n        updateFieldArrayDirty(name, value);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, value)\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(value) ? setValues(name, value, options) : setFieldValue(name, value, options, true);\n    }\n\n    isFieldWatched(name) && _subjects.state.next({});\n\n    _subjects.watch.next({\n      name\n    });\n  };\n\n  const handleChange = async event => {\n    const target = event.target;\n    let name = target.name;\n    const field = get(_fields, name);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type ? getFieldValue(field._f) : target.value;\n      const isBlurEvent = event.type === EVENTS.BLUR;\n      const shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !get(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n      const isWatched = isFieldWatched(name, isBlurEvent);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      set(_formValues, name, fieldValue);\n      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n      const shouldRender = !isEmptyObject(fieldState) || isWatched;\n      !isBlurEvent && _subjects.watch.next({\n        name,\n        type: event.type\n      });\n\n      if (shouldSkipValidation) {\n        return shouldRender && _subjects.state.next(Object.assign({\n          name\n        }, isWatched ? {} : fieldState));\n      }\n\n      !isBlurEvent && isWatched && _subjects.state.next({});\n      validateFields[name] = validateFields[name] ? +1 : 1;\n      _proxyFormState.isValidating && _subjects.state.next({\n        isValidating: true\n      });\n\n      if (_options.resolver) {\n        const {\n          errors\n        } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n        const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (await validateField(field, get(_formValues, name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n        isValid = await _updateValid(true);\n      }\n\n      field._f.deps && trigger(field._f.deps);\n      shouldRenderByError(false, name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger = async function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name);\n\n    _subjects.state.next({\n      isValidating: true\n    });\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n      isValid = isEmptyObject(errors);\n      validationResult = name ? !fieldNames.some(name => get(errors, name)) : isValid;\n    } else if (name) {\n      validationResult = (await Promise.all(fieldNames.map(async fieldName => {\n        const field = get(_fields, fieldName);\n        return await executeBuildInValidation(field && field._f ? {\n          [fieldName]: field\n        } : field);\n      }))).every(Boolean);\n\n      _updateValid();\n    } else {\n      validationResult = isValid = await executeBuildInValidation(_fields);\n    }\n\n    _subjects.state.next(Object.assign(Object.assign(Object.assign({}, !isString(name) || _proxyFormState.isValid && isValid !== _formState.isValid ? {} : {\n      name\n    }), _options.resolver ? {\n      isValid\n    } : {}), {\n      errors: _formState.errors,\n      isValidating: false\n    }));\n\n    options.shouldFocus && !validationResult && focusFieldBy(_fields, key => get(_formState.errors, key), name ? fieldNames : _names.mount);\n    return validationResult;\n  };\n\n  const getValues = fieldNames => {\n    const values = Object.assign(Object.assign({}, _defaultValues), _stateFlags.mount ? _formValues : {});\n    return isUndefined(fieldNames) ? values : isString(fieldNames) ? get(values, fieldNames) : fieldNames.map(name => get(values, name));\n  };\n\n  const clearErrors = name => {\n    name ? convertToArrayPayload(name).forEach(inputName => unset(_formState.errors, inputName)) : _formState.errors = {};\n\n    _subjects.state.next({\n      errors: _formState.errors,\n      isValid: true\n    });\n  };\n\n  const setError = (name, error, options) => {\n    const ref = (get(_fields, name, {\n      _f: {}\n    })._f || {}).ref;\n    set(_formState.errors, name, Object.assign(Object.assign({}, error), {\n      ref\n    }));\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch = (name, defaultValue) => isFunction(name) ? _subjects.watch.subscribe({\n    next: info => name(_getWatch(undefined, defaultValue), info)\n  }) : _getWatch(name, defaultValue, true);\n\n  const unregister = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next(Object.assign(Object.assign({}, _formState), !options.keepDirty ? {} : {\n      isDirty: _getDirty()\n    }));\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const field = get(_fields, name);\n    set(_fields, name, {\n      _f: Object.assign(Object.assign(Object.assign({}, field && field._f ? field._f : {\n        ref: {\n          name\n        }\n      }), {\n        name,\n        mount: true\n      }), options)\n    });\n\n    _names.mount.add(name);\n\n    !isUndefined(options.value) && set(_formValues, name, options.value);\n    field ? isBoolean(options.disabled) && set(_formValues, name, options.disabled ? undefined : get(_formValues, name, getFieldValue(field._f))) : updateValidAndValue(name, true);\n    return isWindowUndefined ? {\n      name: name\n    } : Object.assign(Object.assign({\n      name\n    }, isBoolean(options.disabled) ? {\n      disabled: options.disabled\n    } : {}), {\n      onChange: handleChange,\n      onBlur: handleChange,\n      ref: ref => {\n        if (ref) {\n          register(name, options);\n          let field = get(_fields, name);\n          const fieldRef = isUndefined(ref.value) ? ref.querySelectorAll ? ref.querySelectorAll('input,select,textarea')[0] || ref : ref : ref;\n          const isRadioOrCheckbox = isRadioOrCheckboxFunction(fieldRef);\n\n          if (fieldRef === field._f.ref || isRadioOrCheckbox && compact(field._f.refs || []).find(option => option === fieldRef)) {\n            return;\n          }\n\n          field = {\n            _f: isRadioOrCheckbox ? Object.assign(Object.assign({}, field._f), {\n              refs: [...compact(field._f.refs || []).filter(live), fieldRef],\n              ref: {\n                type: fieldRef.type,\n                name\n              }\n            }) : Object.assign(Object.assign({}, field._f), {\n              ref: fieldRef\n            })\n          };\n          set(_fields, name, field);\n          (!options || !options.disabled) && updateValidAndValue(name, false, fieldRef);\n        } else {\n          const field = get(_fields, name, {});\n          const shouldUnregister = _options.shouldUnregister || options.shouldUnregister;\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          shouldUnregister && !(isNameInFieldArray(_names.array, name) && _stateFlags.action) && _names.unMount.add(name);\n        }\n      }\n    });\n  };\n\n  const handleSubmit = (onValid, onInvalid) => async e => {\n    if (e) {\n      e.preventDefault && e.preventDefault();\n      e.persist && e.persist();\n    }\n\n    let hasNoPromiseError = true;\n    let fieldValues = Object.assign({}, _formValues);\n\n    _subjects.state.next({\n      isSubmitting: true\n    });\n\n    try {\n      if (_options.resolver) {\n        const {\n          errors,\n          values\n        } = await _executeSchema();\n        _formState.errors = errors;\n        fieldValues = values;\n      } else {\n        await executeBuildInValidation(_fields);\n      }\n\n      if (isEmptyObject(_formState.errors) && Object.keys(_formState.errors).every(name => get(fieldValues, name))) {\n        _subjects.state.next({\n          errors: {},\n          isSubmitting: true\n        });\n\n        await onValid(fieldValues, e);\n      } else {\n        onInvalid && (await onInvalid(_formState.errors, e));\n        _options.shouldFocusError && focusFieldBy(_fields, key => get(_formState.errors, key), _names.mount);\n      }\n    } catch (err) {\n      hasNoPromiseError = false;\n      throw err;\n    } finally {\n      _formState.isSubmitted = true;\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors\n      });\n    }\n  };\n\n  const reset = function (formValues) {\n    let keepStateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const hasUpdatedFormValues = !isEmptyObject(formValues);\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (isWeb) {\n        for (const name of _names.mount) {\n          const field = get(_fields, name);\n\n          if (field && field._f) {\n            const fieldReference = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;\n\n            try {\n              isHTMLElement(fieldReference) && fieldReference.closest('form').reset();\n              break;\n            } catch (_a) {}\n          }\n        }\n      }\n\n      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject(_defaultValues) : {} : cloneUpdatedValues;\n      _fields = {};\n\n      _subjects.control.next({\n        values: hasUpdatedFormValues ? cloneUpdatedValues : _defaultValues\n      });\n\n      _subjects.watch.next({});\n\n      _subjects.array.next({\n        values: cloneUpdatedValues\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: ''\n    };\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,\n      isDirty: keepStateOptions.keepDirty ? _formState.isDirty : keepStateOptions.keepDefaultValues ? !deepEqual(formValues, _defaultValues) : false,\n      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : false,\n      dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? Object.entries(formValues).reduce((previous, _ref5) => {\n        let [key, value] = _ref5;\n        return Object.assign(Object.assign({}, previous), {\n          [key]: value !== get(_defaultValues, key)\n        });\n      }, {}) : {},\n      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n\n    _stateFlags.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n    _stateFlags.watch = !!props.shouldUnregister;\n  };\n\n  const setFocus = name => {\n    const field = get(_fields, name)._f;\n\n    (field.ref.focus ? field.ref : field.refs[0]).focus();\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n\n      get _fields() {\n        return _fields;\n      },\n\n      set _fields(value) {\n        _fields = value;\n      },\n\n      get _formValues() {\n        return _formValues;\n      },\n\n      set _formValues(value) {\n        _formValues = value;\n      },\n\n      get _stateFlags() {\n        return _stateFlags;\n      },\n\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n\n      get _defaultValues() {\n        return _defaultValues;\n      },\n\n      set _defaultValues(value) {\n        _defaultValues = value;\n      },\n\n      get _names() {\n        return _names;\n      },\n\n      set _names(value) {\n        _names = value;\n      },\n\n      get _formState() {\n        return _formState;\n      },\n\n      set _formState(value) {\n        _formState = value;\n      },\n\n      get _options() {\n        return _options;\n      },\n\n      set _options(value) {\n        _options = Object.assign(Object.assign({}, _options), value);\n      }\n\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus\n  };\n}\n\nfunction useForm() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const _formControl = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"]();\n\n  const [formState, updateFormState] = react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"]({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {}\n  });\n\n  if (_formControl.current) {\n    _formControl.current.control._options = props;\n  } else {\n    _formControl.current = Object.assign(Object.assign({}, createFormControl(props)), {\n      formState\n    });\n  }\n\n  const control = _formControl.current.control;\n  useSubscribe({\n    subject: control._subjects.state,\n    callback: formState => {\n      if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n        control._formState = Object.assign(Object.assign({}, control._formState), formState);\n        updateFormState(Object.assign({}, control._formState));\n      }\n    }\n  });\n  react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"](() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n\n      control._subjects.state.next({});\n    }\n\n    control._removeUnmounted();\n  });\n  react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"](() => () => Object.values(control._subjects).forEach(subject => subject.unsubscribe()), [control]);\n  _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n  return _formControl.current;\n}\n\nfunction useWatch(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled\n  } = props || {};\n\n  const _name = react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"](name);\n\n  _name.current = name;\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback: formState => {\n      if (shouldSubscribeByName(_name.current, formState.name)) {\n        control._stateFlags.mount = true;\n\n        const fieldValues = control._getWatch(_name.current, defaultValue);\n\n        updateValue(isObject(fieldValues) ? Object.assign({}, fieldValues) : Array.isArray(fieldValues) ? [...fieldValues] : fieldValues);\n      }\n    }\n  });\n  const [value, updateValue] = react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"](isUndefined(defaultValue) ? control._getWatch(name) : defaultValue);\n  react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"](() => {\n    control._removeUnmounted();\n  });\n  return value;\n}\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["../src/utils/isCheckBoxInput.ts","../src/utils/isDateObject.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isObject.ts","../src/logic/getControllerValue.ts","../src/logic/getNodeParentName.ts","../src/logic/isNameInFieldArray.ts","../src/utils/compact.ts","../src/utils/isUndefined.ts","../src/utils/get.ts","../src/constants.ts","../src/utils/omit.ts","../src/useFormContext.tsx","../src/logic/getProxyFormState.ts","../src/utils/isEmptyObject.ts","../src/logic/shouldRenderFormState.ts","../src/utils/convertToArrayPayload.ts","../src/logic/shouldSubscribeByName.ts","../src/useSubscribe.ts","../src/useFormState.ts","../src/useController.ts","../src/controller.tsx","../src/logic/appendErrors.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/focusFieldBy.ts","../src/logic/getFocusFieldName.ts","../src/logic/mapCurrentIds.ts","../src/logic/generateId.ts","../src/logic/mapId.ts","../src/utils/append.ts","../src/utils/fillEmptyArray.ts","../src/utils/insert.ts","../src/utils/move.ts","../src/utils/omitKeys.ts","../src/utils/prepend.ts","../src/utils/remove.ts","../src/utils/swap.ts","../src/utils/update.ts","../src/useFieldArray.ts","../src/utils/isFunction.ts","../src/utils/cloneObject.ts","../src/utils/createSubject.ts","../src/utils/isPrimitive.ts","../src/utils/deepEqual.ts","../src/utils/getValidationModes.ts","../src/utils/isBoolean.ts","../src/utils/isFileInput.ts","../src/utils/isHTMLElement.ts","../src/utils/isMultipleSelect.ts","../src/utils/isRadioInput.ts","../src/utils/isRadioOrCheckbox.ts","../src/utils/isString.ts","../src/utils/isWeb.ts","../src/utils/live.ts","../src/utils/unset.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValueAs.ts","../src/logic/getRadioValue.ts","../src/logic/getFieldValue.ts","../src/logic/getResolverOptions.ts","../src/logic/hasValidation.ts","../src/logic/schemaErrorLookup.ts","../src/utils/deepMerge.ts","../src/logic/setFieldArrayDirtyFields.ts","../src/logic/skipValidation.ts","../src/logic/unsetEmptyArray.ts","../src/utils/isMessage.ts","../src/utils/isRegex.ts","../src/logic/getValidateError.ts","../src/logic/getValueAndMessage.ts","../src/logic/validateField.ts","../src/logic/createFormControl.ts","../src/useForm.ts","../src/useWatch.ts"],"names":["append","appendAt","prepend","prependAt","insert","insertAt","isCheckBox"],"mappings":"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","file":"x","sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (data: unknown) => data instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) => name.substring(0, name.search(/.\\d/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  [...names].some((current) => getNodeParentName(name) === current);\n","export default (value: any[]) => value.filter(Boolean);\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path: string, defaultValue?: unknown) => {\n  if (isObject(obj) && path) {\n    const result = compact(path.split(/[,[\\].]+?/)).reduce(\n      (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n      obj,\n    );\n\n    return isUndefined(result) || result === obj\n      ? isUndefined(obj[path as keyof T])\n        ? defaultValue\n        : obj[path as keyof T]\n      : result;\n  }\n\n  return undefined;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","export default <Key extends string, T extends Record<Key, any>>(\n  source: T,\n  key: Key,\n): Omit<T, Key> => {\n  const copy = { ...source };\n  delete copy[key];\n\n  return copy;\n};\n","import * as React from 'react';\n\nimport omit from './utils/omit';\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\nexport const FormProvider = <\n  TFieldValues extends FieldValues,\n  TContext extends object = object,\n>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => (\n  <HookFormContext.Provider\n    value={omit(props, 'children') as unknown as UseFormReturn}\n  >\n    {props.children}\n  </HookFormContext.Provider>\n);\n","import { VALIDATION_MODE } from '../constants';\nimport { FormState, FormStateProxy, ReadFormState } from '../types';\n\nexport default <TFieldValues>(\n  formState: FormState<TFieldValues>,\n  _proxyFormState: ReadFormState,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  function createGetter(prop: keyof FormStateProxy) {\n    return () => {\n      if (prop in formState) {\n        if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\n          _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[prop] = true);\n        return formState[prop];\n      }\n      return undefined;\n    };\n  }\n\n  const result = {} as any as typeof formState;\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: createGetter(key as keyof FormStateProxy),\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  _proxyFormState: K,\n  isRoot?: boolean,\n) => {\n  const formState = omit(formStateData, 'name');\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T>(name?: T, signalName?: string) =>\n  !name ||\n  !signalName ||\n  convertToArrayPayload(name).some(\n    (currentName) =>\n      currentName &&\n      (currentName.startsWith(signalName) ||\n        signalName.startsWith(currentName)),\n  );\n","import * as React from 'react';\n\nimport { Subject, TearDown } from './utils/createSubject';\nimport { Noop } from './types';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  callback: (value: T) => void;\n  skipEarlySubscription?: boolean;\n};\n\ntype Unsubscribe = { unsubscribe: TearDown };\n\ntype Payload<T> = {\n  _unsubscribe: React.MutableRefObject<Unsubscribe | undefined>;\n  props: Props<T>;\n};\n\nconst tearDown = (\n  _unsubscribe: React.MutableRefObject<Unsubscribe | undefined>,\n) => {\n  if (_unsubscribe.current) {\n    _unsubscribe.current.unsubscribe();\n    _unsubscribe.current = undefined;\n  }\n};\n\nconst updateSubscriptionProps =\n  <T>({ _unsubscribe, props }: Payload<T>) =>\n  () => {\n    if (props.disabled) {\n      tearDown(_unsubscribe);\n    } else if (!_unsubscribe.current) {\n      _unsubscribe.current = props.subject.subscribe({\n        next: props.callback,\n      });\n    }\n  };\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _unsubscribe = React.useRef<Unsubscribe>();\n  const _updateSubscription = React.useRef<Noop>(() => {});\n\n  _updateSubscription.current = updateSubscriptionProps({\n    _unsubscribe,\n    props,\n  });\n\n  !props.skipEarlySubscription && _updateSubscription.current();\n\n  React.useEffect(() => {\n    _updateSubscription.current();\n    return () => tearDown(_unsubscribe);\n  }, []);\n}\n","import * as React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport { FieldValues, UseFormStateProps, UseFormStateReturn } from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    callback: (formState) =>\n      shouldSubscribeByName(_name.current, formState.name) &&\n      shouldRenderFormState(formState, _localProxyFormState.current) &&\n      updateFormState({\n        ...control._formState,\n        ...formState,\n      }),\n    subject: control._subjects.state,\n    skipEarlySubscription: true,\n  });\n\n  return getProxyFormState(\n    formState,\n    control._proxyFormState,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","import * as React from 'react';\n\nimport getControllerValue from './logic/getControllerValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport {\n  Field,\n  FieldPath,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useSubscribe } from './useSubscribe';\n\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: UseControllerProps<TFieldValues, TName>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues>();\n  const { name, control = methods.control, shouldUnregister } = props;\n  const [value, setInputStateValue] = React.useState(\n    get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n  );\n  const formState = useFormState({\n    control: control || methods.control,\n    name,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    subject: control._subjects.control,\n    callback: (data) =>\n      (!data.name || _name.current === data.name) &&\n      setInputStateValue(get(data.values, _name.current)),\n    skipEarlySubscription: true,\n  });\n\n  const registerProps = control.register(name, {\n    ...props.rules,\n    value,\n  });\n\n  const updateMounted = React.useCallback(\n    (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field) {\n        field._f.mount = value;\n      }\n    },\n    [control],\n  );\n\n  React.useEffect(() => {\n    updateMounted(name, true);\n\n    return () => {\n      const _shouldUnregisterField =\n        control._options.shouldUnregister || shouldUnregister;\n\n      if (\n        isNameInFieldArray(control._names.array, name)\n          ? _shouldUnregisterField && !control._stateFlags.action\n          : _shouldUnregisterField\n      ) {\n        control.unregister(name);\n      } else {\n        updateMounted(name, false);\n      }\n    };\n  }, [name, control, shouldUnregister, updateMounted]);\n\n  return {\n    field: {\n      onChange: (event: any) => {\n        const value = getControllerValue(event);\n        setInputStateValue(value);\n\n        registerProps.onChange({\n          target: {\n            value,\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.CHANGE,\n        });\n      },\n      onBlur: () => {\n        registerProps.onBlur({\n          target: {\n            value,\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.BLUR,\n        });\n      },\n      name,\n      value,\n      ref: (elm) => {\n        const field = get(control._fields, name);\n\n        if (elm && field && elm.focus) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            setCustomValidity: (message: string) =>\n              elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity(),\n          };\n        }\n      },\n    },\n    formState,\n    fieldState: {\n      invalid: !!get(formState.errors, name),\n      isDirty: !!get(formState.dirtyFields, name),\n      isTouched: !!get(formState.touchedFields, name),\n      error: get(formState.errors, name),\n    },\n  };\n}\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const _f = field._f;\n      const current = omit(field, '_f');\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(current)) {\n        focusFieldBy(current, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import * as React from 'react';\n\nimport { FieldValues } from '../types';\n\nexport default <T, K>(\n  values: T[],\n  _fieldIds: React.MutableRefObject<K>,\n  keyName: string,\n) =>\n  values.map((value, index) => {\n    const output = _fieldIds.current[index as keyof K];\n\n    return {\n      ...value,\n      ...(output ? { [keyName]: (output as FieldValues)[keyName] } : {}),\n    };\n  });\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldArrayPath, FieldArrayWithId, FieldValues } from '../types';\n\nimport generateId from './generateId';\n\nexport default <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TFieldName extends FieldArrayPath<TFieldArrayValues> = FieldArrayPath<TFieldArrayValues>,\n  TKeyName extends string = 'id',\n>(\n  values: Partial<TFieldArrayValues>[] = [],\n  keyName: TKeyName,\n): Partial<FieldArrayWithId<TFieldArrayValues, TFieldName, TKeyName>>[] =>\n  values.map((value: Partial<TFieldArrayValues>) => ({\n    ...(value[keyName] ? {} : { [keyName]: generateId() }),\n    ...value,\n  })) as Partial<FieldArrayWithId<TFieldArrayValues, TFieldName, TKeyName>>[];\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function append<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","import { FieldArrayWithId } from '../types';\n\nimport omit from './omit';\n\nexport default <T extends Partial<FieldArrayWithId>[]>(\n  fields: T,\n  keyName: string,\n) => fields.map((field = {}) => omit(field, keyName));\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function prepend<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","export default <T>(fieldValues: T[], index: number, value: any) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import * as React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport mapCurrentIds from './logic/mapCurrentIds';\nimport mapIds from './logic/mapId';\nimport appendAt from './utils/append';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport moveArrayAt from './utils/move';\nimport omitKeys from './utils/omitKeys';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport updateAt from './utils/update';\nimport {\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\nexport const useFieldArray = <\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n>(\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> => {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id' as TKeyName,\n    shouldUnregister,\n  } = props;\n  const [fields, setFields] = React.useState<\n    Partial<FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>>[]\n  >(mapIds(control._getFieldArray(name), keyName));\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  useSubscribe({\n    callback: ({ values, name: fieldArrayName }) => {\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        setFields(mapIds(get(values, _name.current), keyName));\n      }\n    },\n    subject: control._subjects.array,\n    skipEarlySubscription: true,\n  });\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValuesWithKey: T,\n    ) => {\n      const updatedFieldArrayValues = omitKeys(\n        updatedFieldArrayValuesWithKey,\n        keyName,\n      );\n      _actioned.current = true;\n      set(control._formValues, name, updatedFieldArrayValues);\n      setFields(updatedFieldArrayValuesWithKey);\n      return updatedFieldArrayValues;\n    },\n    [control, name, keyName],\n  );\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(value);\n    const updatedFieldArrayValuesWithKey = appendAt(\n      mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName),\n      mapIds(appendValue, keyName),\n    );\n    control._updateFieldArray(\n      name,\n      appendAt,\n      {\n        argA: fillEmptyArray(value),\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n    );\n\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValuesWithKey.length - appendValue.length,\n      options,\n    );\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const updatedFieldArrayValuesWithKey = prependAt(\n      mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName),\n      mapIds(convertToArrayPayload(value), keyName),\n    );\n    control._updateFieldArray(\n      name,\n      prependAt,\n      {\n        argA: fillEmptyArray(value),\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n    );\n\n    control._names.focus = getFocusFieldName(name, 0, options);\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValuesWithKey: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(\n      mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName),\n      index,\n    );\n    control._updateFieldArray(\n      name,\n      removeArrayAt,\n      {\n        argA: index,\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n    );\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const updatedFieldArrayValuesWithKey = insertAt(\n      mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName),\n      index,\n      mapIds(convertToArrayPayload(value), keyName),\n    );\n    control._updateFieldArray(\n      name,\n      insertAt,\n      {\n        argA: index,\n        argB: fillEmptyArray(value),\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n    );\n\n    control._names.focus = getFocusFieldName(name, index, options);\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\n      control._getFieldArray(name),\n      _fieldIds,\n      keyName,\n    );\n    swapArrayAt(updatedFieldArrayValuesWithKey, indexA, indexB);\n    control._updateFieldArray(\n      name,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\n      control._getFieldArray(name),\n      _fieldIds,\n      keyName,\n    );\n    moveArrayAt(updatedFieldArrayValuesWithKey, from, to);\n    control._updateFieldArray(\n      name,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: Partial<FieldArray<TFieldValues, TFieldArrayName>>,\n  ) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\n      control._getFieldArray(name),\n      _fieldIds,\n      keyName,\n    );\n    const updatedFieldArrayValues = updateAt(\n      updatedFieldArrayValuesWithKey,\n      index,\n      value,\n    );\n    _fieldIds.current = mapIds(updatedFieldArrayValues, keyName);\n    control._updateFieldArray(\n      name,\n      updateAt,\n      {\n        argA: index,\n        argB: value,\n      },\n      updateValues(_fieldIds.current),\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n  ) => {\n    const updatedFieldArrayValuesWithKey: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = mapIds(convertToArrayPayload(value), keyName);\n    control._updateFieldArray(\n      name,\n      () => updatedFieldArrayValuesWithKey,\n      {},\n      updateValues(updatedFieldArrayValuesWithKey),\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._stateFlags.action = false;\n\n    if (control._names.watchAll) {\n      control._subjects.state.next({});\n    } else {\n      for (const watchField of control._names.watch) {\n        if (name.startsWith(watchField)) {\n          control._subjects.state.next({});\n          break;\n        }\n      }\n    }\n\n    if (_actioned.current) {\n      control._executeSchema([name]).then((result) => {\n        const error = get(result.errors, name);\n\n        if (error && error.type && !get(control._formState.errors, name)) {\n          set(control._formState.errors, name, error);\n          control._subjects.state.next({\n            errors: control._formState.errors as FieldErrors<TFieldValues>,\n          });\n        }\n      });\n    }\n\n    control._subjects.watch.next({\n      name,\n      values: control._formValues,\n    });\n\n    control._names.focus &&\n      focusFieldBy(control._fields, (key: string) =>\n        key.startsWith(control._names.focus),\n      );\n\n    control._names.focus = '';\n\n    control._proxyFormState.isValid && control._updateValid();\n  }, [fields, name, control, keyName]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && set(control._formValues, name, []);\n\n    return () => {\n      if (control._options.shouldUnregister || shouldUnregister) {\n        control.unregister(name as FieldPath<TFieldValues>);\n      }\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control, keyName]),\n    move: React.useCallback(move, [updateValues, name, control, keyName]),\n    prepend: React.useCallback(prepend, [updateValues, name, control, keyName]),\n    append: React.useCallback(append, [updateValues, name, control, keyName]),\n    remove: React.useCallback(remove, [updateValues, name, control, keyName]),\n    insert: React.useCallback(insert, [updateValues, name, control, keyName]),\n    update: React.useCallback(update, [updateValues, name, control, keyName]),\n    replace: React.useCallback(replace, [updateValues, name, control, keyName]),\n    fields: fields as FieldArrayWithId<\n      TFieldValues,\n      TFieldArrayName,\n      TKeyName\n    >[],\n  };\n};\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isFunction from './isFunction';\nimport isObject from './isObject';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (isArray || isObject(data)) {\n    copy = isArray ? [] : {};\n    for (const key in data) {\n      if (isFunction(data[key])) {\n        copy = data;\n        break;\n      }\n      copy[key] = cloneObject(data[key]);\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type TearDown = Noop;\n\nexport type Subscription = {\n  add: (tearDown: TearDown) => void;\n  unsubscribe: () => void;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  next: (value: T) => void;\n  subscribe: (value: Observer<T>) => {\n    unsubscribe: TearDown;\n  };\n  unsubscribe: Noop;\n};\n\nfunction createSubscription() {\n  let tearDowns: TearDown[] = [];\n\n  const add = (tearDown: TearDown) => {\n    tearDowns.push(tearDown);\n  };\n\n  const unsubscribe = () => {\n    for (const teardown of tearDowns) {\n      teardown();\n    }\n    tearDowns = [];\n  };\n\n  return {\n    add,\n    unsubscribe,\n  };\n}\n\nfunction createSubscriber<T>(\n  observer: Observer<T>,\n  subscription: Subscription,\n): Observer<T> {\n  let closed = false;\n  subscription.add(() => (closed = true));\n\n  const next = (value: T) => {\n    if (!closed) {\n      observer.next(value);\n    }\n  };\n\n  return {\n    next,\n  };\n}\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>) => {\n    const subscription = createSubscription();\n    const subscriber = createSubscriber(observer, subscription);\n    _observers.push(subscriber);\n    return subscription;\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","export default (value: unknown): value is string => typeof value === 'string';\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && document.contains(ref);\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import { Field } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  value: any,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : +value\n    : valueAsDate\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup(\n  errors: FieldErrors,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>,\n>(target: T, source: U): T & U {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      target[key] =\n        (isObject(targetValue) && isObject(sourceValue)) ||\n        (Array.isArray(targetValue) && Array.isArray(sourceValue))\n          ? deepMerge(targetValue, sourceValue)\n          : sourceValue;\n    } catch {}\n  }\n\n  return target;\n}\n","import { get } from '../utils';\nimport deepEqual from '../utils/deepEqual';\nimport { deepMerge } from '../utils/deepMerge';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport set from '../utils/set';\n\nfunction setDirtyFields<\n  T extends Record<string, unknown>[],\n  U extends Record<string, unknown>[],\n  K extends Record<string, boolean | []>,\n>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n  parentNode?: K,\n  parentName?: keyof K,\n) {\n  let index = -1;\n\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(\n          values[index][key] as T,\n          get(defaultValues[index] || {}, key, []),\n          dirtyFields[index][key] as [],\n          dirtyFields[index],\n          key,\n        );\n      } else {\n        !isNullOrUndefined(defaultValues) &&\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n          ? set(dirtyFields[index] || {}, key)\n          : (dirtyFields[index] = {\n              ...dirtyFields[index],\n              [key]: true,\n            });\n      }\n    }\n\n    parentNode &&\n      !dirtyFields.length &&\n      delete parentNode[parentName as keyof K];\n  }\n\n  return dirtyFields;\n}\n\nexport default <T extends U, U extends Record<string, unknown>[]>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n) =>\n  deepMerge(\n    setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)),\n    setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)),\n  );\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name, [])).length && unset(ref, name);\n","import * as React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport { Field, FieldError, InternalFieldErrors, Message } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async (\n  field: Field,\n  inputValue: any,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidty = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n      (isBoolean(inputValue) && !inputValue) ||\n      (isCheckBox && !getCheckboxValue(refs).isValid) ||\n      (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(inputValue)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidty(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidty(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidty(true);\n  return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  PathValue,\n  Ref,\n  ResolverResult,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UnpackNestedValue,\n  UseFormClearErrors,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormRegisterReturn,\n  UseFormReset,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport { set } from '../utils';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport omit from '../utils/omit';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nconst isWindowUndefined = typeof window === 'undefined';\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {} as FieldErrors<TFieldValues>,\n  };\n  let _fields = {};\n  let _defaultValues = _options.defaultValues || {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  } as Names;\n  let delayErrorCallback: DelayCallback;\n  let timer = 0;\n  let validateFields: Record<InternalFieldName, number> = {};\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    watch: createSubject(),\n    control: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T, wait: number) =>\n    (...args: any) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(() => callback(...args), wait);\n    };\n\n  const isFieldWatched = (\n    name: FieldPath<TFieldValues>,\n    isBlurEvent?: boolean,\n  ) =>\n    !isBlurEvent &&\n    (_names.watchAll ||\n      _names.watch.has(name) ||\n      _names.watch.has((name.match(/\\w+/) || [])[0]));\n\n  const _updateValid = async (shouldSkipRender?: boolean) => {\n    let isValid = false;\n\n    if (_proxyFormState.isValid) {\n      isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuildInValidation(_fields, true);\n\n      if (!shouldSkipRender && isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n\n    return isValid;\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    method,\n    args,\n    values = [],\n    shouldSetValues = true,\n    shouldSetFields = true,\n  ) => {\n    _stateFlags.action = true;\n\n    if (shouldSetFields && get(_fields, name)) {\n      const fieldValues = method(get(_fields, name), args.argA, args.argB);\n      shouldSetValues && set(_fields, name, fieldValues);\n    }\n\n    if (Array.isArray(get(_formState.errors, name))) {\n      const errors = method(get(_formState.errors, name), args.argA, args.argB);\n      shouldSetValues && set(_formState.errors, name, errors);\n      unsetEmptyArray(_formState.errors, name);\n    }\n\n    if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n      const touchedFields = method(\n        get(_formState.touchedFields, name),\n        args.argA,\n        args.argB,\n      );\n      shouldSetValues &&\n        set(_formState.touchedFields as TFieldValues, name, touchedFields);\n      unsetEmptyArray(_formState.touchedFields, name);\n    }\n\n    if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n      updateFieldArrayDirty(name, values);\n    }\n\n    _subjects.state.next({\n      isDirty: _getDirty(name, values),\n      dirtyFields: _formState.dirtyFields,\n      errors: _formState.errors,\n      isValid: _formState.isValid,\n    });\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => (\n    set(_formState.errors, name, error),\n    _subjects.state.next({\n      errors: _formState.errors,\n    })\n  );\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs?: boolean,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(_formValues, name, get(_defaultValues, name));\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n    }\n\n    _stateFlags.mount && _updateValid();\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isCurrentTouched?: boolean,\n    shouldRender = true,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let isFieldDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n    const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n    if (_proxyFormState.isDirty) {\n      const isPreviousFormDirty = _formState.isDirty;\n\n      _formState.isDirty = output.isDirty = _getDirty();\n      isFieldDirty = isPreviousFormDirty !== output.isDirty;\n    }\n\n    if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n      const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields as TFieldValues, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      isFieldDirty =\n        isFieldDirty ||\n        isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n    }\n\n    if (isCurrentTouched && !isPreviousFieldTouched) {\n      set(_formState.touchedFields as TFieldValues, name, isCurrentTouched);\n      output.touchedFields = _formState.touchedFields;\n      isFieldDirty =\n        isFieldDirty ||\n        (_proxyFormState.touchedFields &&\n          isPreviousFieldTouched !== isCurrentTouched);\n    }\n\n    isFieldDirty && shouldRender && _subjects.state.next(output);\n\n    return isFieldDirty ? output : {};\n  };\n\n  const updateFieldArrayDirty = (name: any, value: any) => (\n    set(\n      _formState.dirtyFields as TFieldValues,\n      name,\n      setFieldArrayDirtyFields(\n        value,\n        get(_defaultValues, name, []),\n        get(_formState.dirtyFields, name, []),\n      ),\n    ),\n    unsetEmptyArray(_formState.dirtyFields, name)\n  );\n\n  const shouldRenderByError = async (\n    shouldSkipRender: boolean,\n    name: InternalFieldName,\n    isValid: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ): Promise<void> => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid && _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback =\n        delayErrorCallback || debounce(updateErrors, props.delayError);\n      delayErrorCallback(name, error);\n    } else {\n      clearTimeout(timer);\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n        !isEmptyObject(fieldState) ||\n        shouldUpdateValid) &&\n      !shouldSkipRender\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    validateFields[name]--;\n\n    if (_proxyFormState.isValidating && !validateFields[name]) {\n      _subjects.state.next({\n        isValidating: false,\n      });\n      validateFields = {};\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver\n      ? await _options.resolver(\n          { ..._formValues } as UnpackNestedValue<TFieldValues>,\n          _options.context,\n          getResolverOptions(\n            name || _names.mount,\n            _fields,\n            _options.criteriaMode,\n            _options.shouldUseNativeValidation,\n          ),\n        )\n      : ({} as ResolverResult<TFieldValues>);\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors as FieldErrors<TFieldValues>;\n    }\n\n    return errors;\n  };\n\n  const executeBuildInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const fieldReference = field._f;\n        const fieldValue = omit(field, '_f');\n\n        if (fieldReference) {\n          const fieldError = await validateField(\n            field,\n            get(_formValues, fieldReference.name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          );\n\n          if (fieldError[fieldReference.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          if (!shouldOnlyCheckValid) {\n            fieldError[fieldReference.name]\n              ? set(\n                  _formState.errors,\n                  fieldReference.name,\n                  fieldError[fieldReference.name],\n                )\n              : unset(_formState.errors, fieldReference.name);\n          }\n        }\n\n        fieldValue &&\n          (await executeBuildInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) => {\n    const fieldValues = {\n      ...(_stateFlags.mount\n        ? _formValues\n        : isUndefined(defaultValue)\n        ? _defaultValues\n        : isString(names)\n        ? { [names]: defaultValue }\n        : defaultValue),\n    };\n\n    if (names) {\n      const result = convertToArrayPayload(names).map(\n        (fieldName) => (\n          isGlobal && _names.watch.add(fieldName as InternalFieldName),\n          get(fieldValues, fieldName as InternalFieldName)\n        ),\n      );\n\n      return Array.isArray(names) ? result : result[0];\n    }\n\n    isGlobal && (_names.watchAll = true);\n    return fieldValues;\n  };\n\n  const _getFieldArray = (name: InternalFieldName) =>\n    get(\n      _stateFlags.mount ? _formValues : _defaultValues,\n      name,\n      props.shouldUnregister ? get(_defaultValues, name, []) : [],\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n    shouldRender?: boolean,\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isFileInput(fieldReference.ref) && !isString(fieldValue)) {\n          fieldReference.ref.files = fieldValue as FileList;\n        } else if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (selectRef) =>\n              (selectRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(selectRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else {\n          fieldReference.ref.value = fieldValue;\n        }\n\n        shouldRender &&\n          _subjects.control.next({\n            values: _formValues,\n            name,\n          });\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(name, fieldValue, options.shouldTouch);\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = (\n    name: FieldPath<TFieldValues>,\n    value: UnpackNestedValue<PathValue<TFieldValues, FieldPath<TFieldValues>>>,\n    options: SetValueConfig,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue: SetFieldValue<TFieldValues> = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}` as Path<TFieldValues>;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options, true);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n\n    set(_formValues, name, value);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues,\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        updateFieldArrayDirty(name, value);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, value),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(value)\n        ? setValues(name, value, options)\n        : setFieldValue(name, value, options, true);\n    }\n\n    isFieldWatched(name) && _subjects.state.next({});\n    _subjects.watch.next({\n      name,\n    });\n  };\n\n  const handleChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type ? getFieldValue(field._f) : target.value;\n      const isBlurEvent = event.type === EVENTS.BLUR;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const isWatched = isFieldWatched(name, isBlurEvent);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      set(_formValues, name, fieldValue);\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || isWatched;\n\n      !isBlurEvent &&\n        _subjects.watch.next({\n          name,\n          type: event.type,\n        });\n\n      if (shouldSkipValidation) {\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(isWatched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && isWatched && _subjects.state.next({});\n\n      validateFields[name] = validateFields[name] ? +1 : 1;\n\n      _proxyFormState.isValidating &&\n        _subjects.state.next({\n          isValidating: true,\n        });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            get(_formValues, name) as Field,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        isValid = await _updateValid(true);\n      }\n\n      field._f.deps && trigger(field._f.deps as FieldPath<TFieldValues>[]);\n\n      shouldRenderByError(false, name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _subjects.state.next({\n      isValidating: true,\n    });\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuildInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      _updateValid();\n    } else {\n      validationResult = isValid = await executeBuildInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames as InternalFieldName)\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\n  };\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(_formState.errors, inputName),\n        )\n      : (_formState.errors = {} as FieldErrors<TFieldValues>);\n\n    _subjects.state.next({\n      errors: _formState.errors,\n      isValid: true,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = ((get(_fields, name, { _f: {} }) as Field)._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: unknown,\n  ) =>\n    isFunction(name)\n      ? _subjects.watch.subscribe({\n          next: (info: any) =>\n            name(\n              _getWatch(\n                undefined,\n                defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n              ),\n              info,\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n\n    set(_fields, name, {\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    !isUndefined(options.value) && set(_formValues, name, options.value);\n\n    field\n      ? isBoolean(options.disabled) &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true);\n\n    return isWindowUndefined\n      ? ({ name: name as InternalFieldName } as UseFormRegisterReturn)\n      : {\n          name,\n          ...(isBoolean(options.disabled)\n            ? { disabled: options.disabled }\n            : {}),\n          onChange: handleChange,\n          onBlur: handleChange,\n          ref: (ref: HTMLInputElement | null): void => {\n            if (ref) {\n              register(name, options);\n              let field: Field = get(_fields, name);\n              const fieldRef = isUndefined(ref.value)\n                ? ref.querySelectorAll\n                  ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) ||\n                    ref\n                  : ref\n                : ref;\n\n              const isRadioOrCheckbox = isRadioOrCheckboxFunction(fieldRef);\n\n              if (\n                fieldRef === field._f.ref ||\n                (isRadioOrCheckbox &&\n                  compact(field._f.refs || []).find(\n                    (option) => option === fieldRef,\n                  ))\n              ) {\n                return;\n              }\n\n              field = {\n                _f: isRadioOrCheckbox\n                  ? {\n                      ...field._f,\n                      refs: [\n                        ...compact(field._f.refs || []).filter(live),\n                        fieldRef,\n                      ],\n                      ref: { type: fieldRef.type, name },\n                    }\n                  : {\n                      ...field._f,\n                      ref: fieldRef,\n                    },\n              };\n\n              set(_fields, name, field);\n\n              (!options || !options.disabled) &&\n                updateValidAndValue(name, false, fieldRef);\n            } else {\n              const field: Field = get(_fields, name, {});\n              const shouldUnregister =\n                _options.shouldUnregister || options.shouldUnregister;\n\n              if (field._f) {\n                field._f.mount = false;\n              }\n\n              shouldUnregister &&\n                !(\n                  isNameInFieldArray(_names.array, name) && _stateFlags.action\n                ) &&\n                _names.unMount.add(name);\n            }\n          },\n        };\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues: any = { ..._formValues };\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (_options.resolver) {\n          const { errors, values } = await _executeSchema();\n          _formState.errors = errors as FieldErrors<TFieldValues>;\n          fieldValues = values;\n        } else {\n          await executeBuildInValidation(_fields);\n        }\n\n        if (\n          isEmptyObject(_formState.errors) &&\n          Object.keys(_formState.errors).every((name) => get(fieldValues, name))\n        ) {\n          _subjects.state.next({\n            errors: {} as FieldErrors<TFieldValues>,\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          onInvalid && (await onInvalid(_formState.errors, e));\n          _options.shouldFocusError &&\n            focusFieldBy(\n              _fields,\n              (key) => get(_formState.errors, key),\n              _names.mount,\n            );\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        _formState.isSubmitted = true;\n        _subjects.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\n          submitCount: _formState.submitCount + 1,\n          errors: _formState.errors,\n        });\n      }\n    };\n\n  const reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const hasUpdatedFormValues = !isEmptyObject(formValues);\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (isWeb) {\n        for (const name of _names.mount) {\n          const field = get(_fields, name);\n          if (field && field._f) {\n            const fieldReference = Array.isArray(field._f.refs)\n              ? field._f.refs[0]\n              : field._f.ref;\n\n            try {\n              isHTMLElement(fieldReference) &&\n                fieldReference.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n      _fields = {};\n\n      _subjects.control.next({\n        values: hasUpdatedFormValues ? cloneUpdatedValues : _defaultValues,\n      });\n\n      _subjects.watch.next({});\n\n      _subjects.array.next({\n        values: cloneUpdatedValues,\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: keepStateOptions.keepDirty\n        ? _formState.isDirty\n        : keepStateOptions.keepDefaultValues\n        ? !deepEqual(formValues, _defaultValues)\n        : false,\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: keepStateOptions.keepDirty\n        ? _formState.dirtyFields\n        : ((keepStateOptions.keepDefaultValues && formValues\n            ? Object.entries(formValues).reduce(\n                (previous, [key, value]) => ({\n                  ...previous,\n                  [key]: value !== get(_defaultValues, key),\n                }),\n                {},\n              )\n            : {}) as FieldNamesMarkedBoolean<TFieldValues>),\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : ({} as FieldNamesMarkedBoolean<TFieldValues>),\n      errors: keepStateOptions.keepErrors\n        ? _formState.errors\n        : ({} as FieldErrors<TFieldValues>),\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n\n    _stateFlags.mount =\n      !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n    _stateFlags.watch = !!props.shouldUnregister;\n  };\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name) => {\n    const field = get(_fields, name)._f;\n    (field.ref.focus ? field.ref : field.refs[0]).focus();\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      set _fields(value) {\n        _fields = value;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      set _formValues(value) {\n        _formValues = value;\n      },\n      get _stateFlags() {\n        return _stateFlags;\n      },\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      set _defaultValues(value) {\n        _defaultValues = value;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n  };\n}\n","import * as React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport {\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldValues,\n  FormState,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {} as FieldErrors<TFieldValues>,\n  });\n\n  if (_formControl.current) {\n    _formControl.current.control._options = props;\n  } else {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    callback: (formState) => {\n      if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n        control._formState = {\n          ...control._formState,\n          ...formState,\n        };\n\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n      control._subjects.state.next({});\n    }\n    control._removeUnmounted();\n  });\n\n  React.useEffect(\n    () => () =>\n      Object.values(control._subjects).forEach((subject) =>\n        subject.unsubscribe(),\n      ),\n    [control],\n  );\n\n  _formControl.current.formState = getProxyFormState(\n    formState,\n    control._proxyFormState,\n  );\n\n  return _formControl.current;\n}\n","import * as React from 'react';\n\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport isObject from './utils/isObject';\nimport isUndefined from './utils/isUndefined';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n}): UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends FieldPath<TFieldValues>[] = FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\nexport function useWatch<TFieldValues>(props?: UseWatchProps<TFieldValues>) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback: (formState) => {\n      if (shouldSubscribeByName(_name.current, formState.name)) {\n        control._stateFlags.mount = true;\n        const fieldValues = control._getWatch(\n          _name.current as InternalFieldName,\n          defaultValue as UnpackNestedValue<\n            DeepPartialSkipArrayKey<TFieldValues>\n          >,\n        );\n\n        updateValue(\n          isObject(fieldValues)\n            ? { ...fieldValues }\n            : Array.isArray(fieldValues)\n            ? [...fieldValues]\n            : fieldValues,\n        );\n      }\n    },\n  });\n\n  const [value, updateValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? control._getWatch(name as InternalFieldName)\n      : defaultValue,\n  );\n\n  React.useEffect(() => {\n    control._removeUnmounted();\n  });\n\n  return value;\n}\n"]}}